syntax = "proto3";
package coreum.feemodel.v1;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "coreum/feemodel/v1/params.proto";


option go_package = "github.com/CoreumFoundation/coreum/v2/x/feemodel/types";
option (gogoproto.goproto_getters_all) = false;

// Msg defines the Msg service.
service Msg {
  // UpdateParams is a governance operation which allows fee models params to be modified.
  // NOTE: All parmas must be provided.
  rpc UpdateParams(MsgUpdateParams) returns (EmptyResponse);
}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name)           = "cosmos-sdk/MsgUpdateParams";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  Params params = 2 [(gogoproto.nullable) = false];
}

message EmptyResponse {}
