syntax = "proto3";
package coreum.dex.v1;

import "coreum/dex/v1/order.proto";
import "coreum/dex/v1/params.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/CoreumFoundation/coreum/v4/x/dex/types";

// Query defines the gRPC query service.
service Query {
  // Params queries the parameters of x/dex module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/coreum/dex/v1/params";
  }
  // Order queries order by creator and ID.
  rpc Order(QueryOrderRequest) returns (QueryOrderResponse) {
    option (google.api.http).get = "/coreum/dex/v1/orders/{creator}/{id}";
  }
  // Orders queries creator orders.
  rpc Orders(QueryOrdersRequest) returns (QueryOrdersResponse) {
    option (google.api.http).get = "/coreum/dex/v1/orders/{creator}";
  }
  // OrderBooks queries order books.
  rpc OrderBooks(QueryOrderBooksRequest) returns (QueryOrderBooksResponse) {
    option (google.api.http).get = "/coreum/dex/v1/order-books";
  }
  // OrdersBookOrders queries order book orders.
  rpc OrdersBookOrders(QueryOrderBookOrdersRequest) returns (QueryOrderBookOrdersResponse) {
    option (google.api.http).get = "/coreum/dex/v1/order-books/{base_denom}/{quote_denom}/orders";
  }
  // AccountDenomOrdersCount queries account denom orders count.
  rpc AccountDenomOrdersCount(QueryAccountDenomOrdersCountRequest) returns (QueryAccountDenomOrdersCountResponse) {
    option (google.api.http).get = "/coreum/dex/v1/accounts/{account}/denoms/{denom}/orders-count";
  }
}

// QueryParamsRequest defines the request type for querying x/dex parameters.
message QueryParamsRequest {}

// QueryParamsResponse defines the response type for querying x/dex parameters.
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryOrderRequest defines the request type for the `Order` query.
message QueryOrderRequest {
  // creator is order creator's account.
  string creator = 1;
  // id is order ID.
  string id = 2; // we don't use the gogoproto.customname here since the google.api.http ignores it and generates invalid code.
}

// QueryOrderRequestResponse defines the response type for the `Order` query.
message QueryOrderResponse {
  Order order = 1 [(gogoproto.nullable) = false];
}

// QueryOrdersRequest defines the request type for the `Orders` query.
message QueryOrdersRequest {
  // creator is order creator's account.
  string creator = 1;
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryOrdersRequestResponse defines the response type for the `Order` query.
message QueryOrdersResponse {
  repeated Order orders = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryOrderBooksRequest defines the request type for the `OrderBooks` query.
message QueryOrderBooksRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryOrderBooksResponse defines the response type for the `OrderBooks` query.
message QueryOrderBooksResponse {
  repeated OrderBookData order_books = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryOrderBookOrdersRequest defines the request type for the `OrderBookOrders` query.
message QueryOrderBookOrdersRequest {
  // base_denom is base order denom.
  string base_denom = 1;
  // quote_denom is quote order denom
  string quote_denom = 2;
  // side is order side.
  Side side = 3;
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

// QueryOrderBookOrdersResponse defines the response type for the `OrderBookOrders` query.
message QueryOrderBookOrdersResponse {
  repeated Order orders = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryAccountDenomOrdersCountRequest defines the request type for the `AccountDenomOrdersCount` query.
message QueryAccountDenomOrdersCountRequest {
  string account = 1;
  string denom = 2;
}

// QueryAccountDenomOrdersCountResponse defines the response type for the `AccountDenomOrdersCount` query.
message QueryAccountDenomOrdersCountResponse {
  uint64 count = 1;
}
