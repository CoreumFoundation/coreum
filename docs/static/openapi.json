{
  "swagger": "2.0",
  "info": {
    "title": "title goes here",
    "version": "version goes here"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/coreum/asset/ft/v1/accounts/{account}/balances/frozen": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetFtTypesFrozenBalances",
        "parameters": [
          {
            "name": "account",
            "description": "account specifies the account onto which we query frozen balances",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.ft.v1.QueryFrozenBalancesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "FrozenBalances returns all the frozen balances for the account.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/ft/v1/accounts/{account}/balances/frozen/{denom}": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetFtTypesFrozenBalance",
        "parameters": [
          {
            "name": "account",
            "description": "account specifies the account onto which we query frozen balances",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "denom",
            "description": "denom specifies frozen balances on a specific denom",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.ft.v1.QueryFrozenBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "FrozenBalance returns frozen balance of the denom for the account.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/ft/v1/accounts/{account}/balances/summary/{denom}": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetFtTypesBalance",
        "parameters": [
          {
            "name": "account",
            "description": "account specifies the account onto which we query balances",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "denom",
            "description": "denom specifies balances on a specific denom",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.ft.v1.QueryBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Balance returns balance of the denom for the account.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/ft/v1/accounts/{account}/balances/whitelisted": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetFtTypesWhitelistedBalances",
        "parameters": [
          {
            "name": "account",
            "description": "account specifies the account onto which we query whitelisted balances",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.ft.v1.QueryWhitelistedBalancesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "WhitelistedBalances returns all the whitelisted balances for the account.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/ft/v1/accounts/{account}/balances/whitelisted/{denom}": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetFtTypesWhitelistedBalance",
        "parameters": [
          {
            "name": "account",
            "description": "account specifies the account onto which we query whitelisted balances",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "denom",
            "description": "denom specifies whitelisted balances on a specific denom",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.ft.v1.QueryWhitelistedBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "WhitelistedBalance returns whitelisted balance of the denom for the account.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/ft/v1/params": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetFtTypesParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.ft.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Params queries the parameters of x/asset/ft module.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/ft/v1/tokens": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetFtTypesTokens",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "issuer",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.ft.v1.QueryTokensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Tokens queries the fungible tokens of the module.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/ft/v1/tokens/{denom}": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetFtTypesToken",
        "parameters": [
          {
            "name": "denom",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.ft.v1.QueryTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Token queries the fungible token of the module.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/ft/v1/tokens/{denom}/upgrade-statuses": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetFtTypesTokenUpgradeStatuses",
        "parameters": [
          {
            "name": "denom",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.ft.v1.QueryTokenUpgradeStatusesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "TokenUpgradeStatuses returns token upgrades info.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/nft/v1/classes": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetNftTypesClasses",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "issuer",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.nft.v1.QueryClassesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Classes queries the non-fungible token classes of the module.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/nft/v1/classes/{class_id}/burnt": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetNftTypesBurntNFTsInClass",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.nft.v1.QueryBurntNFTsInClassResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "BurntNFTsInClass returns the list of burnt nfts in a class.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/nft/v1/classes/{class_id}/burnt/{nft_id}": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetNftTypesBurntNFT",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nft_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.nft.v1.QueryBurntNFTResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "BurntNFTsInClass checks if an nft if is in burnt NFTs list.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/nft/v1/classes/{class_id}/frozen": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetNftTypesClassFrozenAccounts",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.nft.v1.QueryClassFrozenAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "QueryClassFrozenAccountsRequest returns the list of accounts which are frozen to hold NFTs in this class.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/nft/v1/classes/{class_id}/frozen/{account}": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetNftTypesClassFrozen",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "account",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.nft.v1.QueryClassFrozenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ClassFrozen queries to check if an account if frozen for an NFT class.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/nft/v1/classes/{class_id}/nfts/{id}/frozen": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetNftTypesFrozen",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.nft.v1.QueryFrozenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Frozen queries to check if an NFT is frozen or not.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/nft/v1/classes/{class_id}/nfts/{id}/whitelisted": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetNftTypesWhitelistedAccountsForNFT",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.nft.v1.QueryWhitelistedAccountsForNFTResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "WhitelistedAccountsForNFT returns the list of accounts which are whitelisted to hold this NFT.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/nft/v1/classes/{class_id}/nfts/{id}/whitelisted/{account}": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetNftTypesWhitelisted",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "account",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.nft.v1.QueryWhitelistedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Whitelisted queries to check if an account is whitelited to hold an NFT or not.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/nft/v1/classes/{class_id}/whitelisted": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetNftTypesClassWhitelistedAccounts",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.nft.v1.QueryClassWhitelistedAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ClassWhitelistedAccounts returns the list of accounts which are whitelisted to hold NFTs in this class.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/nft/v1/classes/{id}": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetNftTypesClass",
        "parameters": [
          {
            "name": "id",
            "description": "we don't use the gogoproto.customname here since the google.api.http ignores it and generates invalid code.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.nft.v1.QueryClassResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Class queries the non-fungible token class of the module.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/asset/nft/v1/params": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XAssetNftTypesParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.asset.nft.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Params queries the parameters of x/asset/nft module.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/customparams/v1/stakingparams": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XCustomparamsTypesStakingParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.customparams.v1.QueryStakingParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "StakingParams queries the staking parameters of the module.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/feemodel/v1/min_gas_price": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XFeemodelTypesMinGasPrice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.feemodel.v1.QueryMinGasPriceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "MinGasPrice queries the current minimum gas price required by the network.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/feemodel/v1/params": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XFeemodelTypesParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.feemodel.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Params queries the parameters of x/feemodel module.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/feemodel/v1/recommended_gas_price": {
      "get": {
        "operationId": "GithubComCoreumFoundationCoreumV4XFeemodelTypesRecommendedGasPrice",
        "parameters": [
          {
            "name": "after_blocks",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.feemodel.v1.QueryRecommendedGasPriceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "RecommendedGasPrice queries the recommended gas price for the next n blocks.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/nft/v1beta1/balance/{owner}/{class_id}": {
      "get": {
        "description": "Deprecated: use cosmos-sdk/x/nft package instead",
        "operationId": "GithubComCoreumFoundationCoreumV4XNftBalance",
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.nft.v1beta1.QueryBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Balance queries the number of NFTs of a given class owned by the owner, same as balanceOf in ERC721",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/nft/v1beta1/classes": {
      "get": {
        "description": "Deprecated: use cosmos-sdk/x/nft package instead",
        "operationId": "GithubComCoreumFoundationCoreumV4XNftClasses",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.nft.v1beta1.QueryClassesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Classes queries all NFT classes",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/nft/v1beta1/classes/{class_id}": {
      "get": {
        "description": "Deprecated: use cosmos-sdk/x/nft package instead",
        "operationId": "GithubComCoreumFoundationCoreumV4XNftClass",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.nft.v1beta1.QueryClassResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Class queries an NFT class based on its id",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/nft/v1beta1/nfts": {
      "get": {
        "description": "Deprecated: use cosmos-sdk/x/nft package instead",
        "operationId": "GithubComCoreumFoundationCoreumV4XNftNFTs",
        "parameters": [
          {
            "name": "class_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "owner",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.nft.v1beta1.QueryNFTsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "NFTs queries all NFTs of a given class or owner,choose at least one of the two, similar to tokenByIndex in\nERC721Enumerable",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/nft/v1beta1/nfts/{class_id}/{id}": {
      "get": {
        "description": "Deprecated: use cosmos-sdk/x/nft package instead",
        "operationId": "GithubComCoreumFoundationCoreumV4XNftNFT",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.nft.v1beta1.QueryNFTResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "NFT queries an NFT based on its class and id.",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/nft/v1beta1/owner/{class_id}/{id}": {
      "get": {
        "description": "Deprecated: use cosmos-sdk/x/nft package instead",
        "operationId": "GithubComCoreumFoundationCoreumV4XNftOwner",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.nft.v1beta1.QueryOwnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Owner queries the owner of the NFT based on its class and id, same as ownerOf in ERC721",
        "tags": [
          "Query"
        ]
      }
    },
    "/coreum/nft/v1beta1/supply/{class_id}": {
      "get": {
        "description": "Deprecated: use cosmos-sdk/x/nft package instead",
        "operationId": "GithubComCoreumFoundationCoreumV4XNftSupply",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreum.nft.v1beta1.QuerySupplyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Supply queries the number of NFTs from the given class, same as totalSupply of ERC721.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/account_info/{address}": {
      "get": {
        "description": "Since: cosmos-sdk 0.47",
        "operationId": "GithubComCosmosCosmosSdkXAuthTypesAccountInfo",
        "parameters": [
          {
            "name": "address",
            "description": "address is the account address string.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.QueryAccountInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "AccountInfo queries account info which is common to all account types.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/accounts": {
      "get": {
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.\n\nSince: cosmos-sdk 0.43",
        "operationId": "GithubComCosmosCosmosSdkXAuthTypesAccounts",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.QueryAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Accounts returns all the existing accounts.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/accounts/{address}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXAuthTypesAccount",
        "parameters": [
          {
            "name": "address",
            "description": "address defines the address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.QueryAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Account returns account details based on address.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/address_by_id/{id}": {
      "get": {
        "description": "Since: cosmos-sdk 0.46.2",
        "operationId": "GithubComCosmosCosmosSdkXAuthTypesAccountAddressByID",
        "parameters": [
          {
            "name": "id",
            "description": "Deprecated, use account_id instead\n\nid is the account number of the address to be queried. This field\nshould have been an uint64 (like all account numbers), and will be\nupdated to uint64 in a future version of the auth query.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account_id",
            "description": "account_id is the account number of the address to be queried.\n\nSince: cosmos-sdk 0.47",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.QueryAccountAddressByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "AccountAddressByID returns account address based on account number.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/bech32": {
      "get": {
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "GithubComCosmosCosmosSdkXAuthTypesBech32Prefix",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.Bech32PrefixResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Bech32Prefix queries bech32Prefix",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/bech32/{address_bytes}": {
      "get": {
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "GithubComCosmosCosmosSdkXAuthTypesAddressBytesToString",
        "parameters": [
          {
            "name": "address_bytes",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.AddressBytesToStringResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "AddressBytesToString converts Account Address bytes to string",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/bech32/{address_string}": {
      "get": {
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "GithubComCosmosCosmosSdkXAuthTypesAddressStringToBytes",
        "parameters": [
          {
            "name": "address_string",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.AddressStringToBytesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "AddressStringToBytes converts Address string to bytes",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/module_accounts": {
      "get": {
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "GithubComCosmosCosmosSdkXAuthTypesModuleAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.QueryModuleAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ModuleAccounts returns all the existing module accounts.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/module_accounts/{name}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXAuthTypesModuleAccountByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.QueryModuleAccountByNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ModuleAccountByName returns the module account info by module name",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/params": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXAuthTypesParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Params queries all parameters.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/authz/v1beta1/grants": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXAuthzGrants",
        "parameters": [
          {
            "name": "granter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "grantee",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "msg_type_url",
            "description": "Optional, msg_type_url, when set, will query only grants matching given msg type.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.authz.v1beta1.QueryGrantsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Returns list of `Authorization`, granted to the grantee by the granter.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/authz/v1beta1/grants/grantee/{grantee}": {
      "get": {
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "GithubComCosmosCosmosSdkXAuthzGranteeGrants",
        "parameters": [
          {
            "name": "grantee",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.authz.v1beta1.QueryGranteeGrantsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GranteeGrants returns a list of `GrantAuthorization` by grantee.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/authz/v1beta1/grants/granter/{granter}": {
      "get": {
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "GithubComCosmosCosmosSdkXAuthzGranterGrants",
        "parameters": [
          {
            "name": "granter",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.authz.v1beta1.QueryGranterGrantsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GranterGrants returns list of `GrantAuthorization`, granted by granter.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/balances/{address}": {
      "get": {
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.",
        "operationId": "GithubComCosmosCosmosSdkXBankTypesAllBalances",
        "parameters": [
          {
            "name": "address",
            "description": "address is the address to query balances for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QueryAllBalancesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "AllBalances queries the balance of all coins for a single account.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/balances/{address}/by_denom": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXBankTypesBalance",
        "parameters": [
          {
            "name": "address",
            "description": "address is the address to query balances for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "denom",
            "description": "denom is the coin denom to query balances for.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QueryBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Balance queries the balance of a single coin for a single account.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/denom_owners/{denom}": {
      "get": {
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.\n\nSince: cosmos-sdk 0.46",
        "operationId": "GithubComCosmosCosmosSdkXBankTypesDenomOwners",
        "parameters": [
          {
            "name": "denom",
            "description": "denom defines the coin denomination to query all account holders for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QueryDenomOwnersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "DenomOwners queries for all account addresses that own a particular token\ndenomination.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/denoms_metadata": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXBankTypesDenomsMetadata",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QueryDenomsMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "DenomsMetadata queries the client metadata for all registered coin\ndenominations.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/denoms_metadata/{denom}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXBankTypesDenomMetadata",
        "parameters": [
          {
            "name": "denom",
            "description": "denom is the coin denom to query the metadata for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QueryDenomMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "DenomsMetadata queries the client metadata of a given coin denomination.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/params": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXBankTypesParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Params queries the parameters of x/bank module.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/send_enabled": {
      "get": {
        "description": "This query only returns denominations that have specific SendEnabled settings.\nAny denomination that does not have a specific setting will use the default\nparams.default_send_enabled, and will not be returned by this query.\n\nSince: cosmos-sdk 0.47",
        "operationId": "GithubComCosmosCosmosSdkXBankTypesSendEnabled",
        "parameters": [
          {
            "name": "denoms",
            "description": "denoms is the specific denoms you want look up. Leave empty to get all entries.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QuerySendEnabledResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "SendEnabled queries for SendEnabled entries.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/spendable_balances/{address}": {
      "get": {
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.\n\nSince: cosmos-sdk 0.46",
        "operationId": "GithubComCosmosCosmosSdkXBankTypesSpendableBalances",
        "parameters": [
          {
            "name": "address",
            "description": "address is the address to query spendable balances for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QuerySpendableBalancesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "SpendableBalances queries the spendable balance of all coins for a single\naccount.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/spendable_balances/{address}/by_denom": {
      "get": {
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.\n\nSince: cosmos-sdk 0.47",
        "operationId": "GithubComCosmosCosmosSdkXBankTypesSpendableBalanceByDenom",
        "parameters": [
          {
            "name": "address",
            "description": "address is the address to query balances for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "denom",
            "description": "denom is the coin denom to query balances for.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "SpendableBalanceByDenom queries the spendable balance of a single denom for\na single account.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/supply": {
      "get": {
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.",
        "operationId": "GithubComCosmosCosmosSdkXBankTypesTotalSupply",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QueryTotalSupplyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "TotalSupply queries the total supply of all coins.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/supply/by_denom": {
      "get": {
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.",
        "operationId": "GithubComCosmosCosmosSdkXBankTypesSupplyOf",
        "parameters": [
          {
            "name": "denom",
            "description": "denom is the coin denom to query balances for.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QuerySupplyOfResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "SupplyOf queries the supply of a single coin.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/base/node/v1beta1/config": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkClientGrpcNodeConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.node.v1beta1.ConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Config queries for the operator configuration.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/base/tendermint/v1beta1/abci_query": {
      "get": {
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "GithubComCosmosCosmosSdkClientGrpcTmserviceABCIQuery",
        "parameters": [
          {
            "name": "data",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "prove",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.ABCIQueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ABCIQuery defines a query handler that supports ABCI queries directly to the\napplication, bypassing Tendermint completely. The ABCI query must contain\na valid and supported path, including app, custom, p2p, and store.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/base/tendermint/v1beta1/blocks/latest": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkClientGrpcTmserviceGetLatestBlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.GetLatestBlockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GetLatestBlock returns the latest block.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/base/tendermint/v1beta1/blocks/{height}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkClientGrpcTmserviceGetBlockByHeight",
        "parameters": [
          {
            "name": "height",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GetBlockByHeight queries block for given height.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/base/tendermint/v1beta1/node_info": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkClientGrpcTmserviceGetNodeInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.GetNodeInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GetNodeInfo queries the current node info.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/base/tendermint/v1beta1/syncing": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkClientGrpcTmserviceGetSyncing",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.GetSyncingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GetSyncing queries node syncing.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/base/tendermint/v1beta1/validatorsets/latest": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkClientGrpcTmserviceGetLatestValidatorSet",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GetLatestValidatorSet queries latest validator-set.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/base/tendermint/v1beta1/validatorsets/{height}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkClientGrpcTmserviceGetValidatorSetByHeight",
        "parameters": [
          {
            "name": "height",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GetValidatorSetByHeight queries validator-set at a given height.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/consensus/v1/params": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXConsensusTypesParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.consensus.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Params queries the parameters of x/consensus_param module.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/community_pool": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXDistributionTypesCommunityPool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryCommunityPoolResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "CommunityPool queries the community pool coins.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXDistributionTypesDelegationTotalRewards",
        "parameters": [
          {
            "name": "delegator_address",
            "description": "delegator_address defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "DelegationTotalRewards queries the total rewards accrued by a each\nvalidator.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXDistributionTypesDelegationRewards",
        "parameters": [
          {
            "name": "delegator_address",
            "description": "delegator_address defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "validator_address",
            "description": "validator_address defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryDelegationRewardsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "DelegationRewards queries the total rewards accrued by a delegation.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXDistributionTypesDelegatorValidators",
        "parameters": [
          {
            "name": "delegator_address",
            "description": "delegator_address defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "DelegatorValidators queries the validators of a delegator.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXDistributionTypesDelegatorWithdrawAddress",
        "parameters": [
          {
            "name": "delegator_address",
            "description": "delegator_address defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "DelegatorWithdrawAddress queries withdraw address of a delegator.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/params": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXDistributionTypesParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Params queries params of the distribution module.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/validators/{validator_address}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXDistributionTypesValidatorDistributionInfo",
        "parameters": [
          {
            "name": "validator_address",
            "description": "validator_address defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/validators/{validator_address}/commission": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXDistributionTypesValidatorCommission",
        "parameters": [
          {
            "name": "validator_address",
            "description": "validator_address defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryValidatorCommissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ValidatorCommission queries accumulated commission for a validator.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXDistributionTypesValidatorOutstandingRewards",
        "parameters": [
          {
            "name": "validator_address",
            "description": "validator_address defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ValidatorOutstandingRewards queries rewards of a validator address.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/validators/{validator_address}/slashes": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXDistributionTypesValidatorSlashes",
        "parameters": [
          {
            "name": "validator_address",
            "description": "validator_address defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "starting_height",
            "description": "starting_height defines the optional starting height to query the slashes.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "ending_height",
            "description": "starting_height defines the optional ending height to query the slashes.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryValidatorSlashesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ValidatorSlashes queries slash events of a validator.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/evidence/v1beta1/evidence": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXEvidenceTypesAllEvidence",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.evidence.v1beta1.QueryAllEvidenceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "AllEvidence queries all evidence.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/evidence/v1beta1/evidence/{hash}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXEvidenceTypesEvidence",
        "parameters": [
          {
            "name": "hash",
            "description": "hash defines the evidence hash of the requested evidence.\n\nSince: cosmos-sdk 0.47",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "evidence_hash",
            "description": "evidence_hash defines the hash of the requested evidence.\nDeprecated: Use hash, a HEX encoded string, instead.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.evidence.v1beta1.QueryEvidenceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Evidence queries evidence based on evidence hash.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXFeegrantAllowance",
        "parameters": [
          {
            "name": "granter",
            "description": "granter is the address of the user granting an allowance of their funds.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "grantee",
            "description": "grantee is the address of the user being granted an allowance of another user's funds.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.feegrant.v1beta1.QueryAllowanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Allowance returns fee granted to the grantee by the granter.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/feegrant/v1beta1/allowances/{grantee}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXFeegrantAllowances",
        "parameters": [
          {
            "name": "grantee",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.feegrant.v1beta1.QueryAllowancesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Allowances returns all the grants for address.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/feegrant/v1beta1/issued/{granter}": {
      "get": {
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "GithubComCosmosCosmosSdkXFeegrantAllowancesByGranter",
        "parameters": [
          {
            "name": "granter",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "AllowancesByGranter returns all the grants given by an address",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/params/{params_type}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Params",
        "parameters": [
          {
            "name": "params_type",
            "description": "params_type defines which parameters to query for, can be one of \"voting\",\n\"tallying\" or \"deposit\".",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Params queries all parameters of the gov module.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/proposals": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Proposals",
        "parameters": [
          {
            "name": "proposal_status",
            "description": "proposal_status defines the status of the proposals.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PROPOSAL_STATUS_UNSPECIFIED",
              "PROPOSAL_STATUS_DEPOSIT_PERIOD",
              "PROPOSAL_STATUS_VOTING_PERIOD",
              "PROPOSAL_STATUS_PASSED",
              "PROPOSAL_STATUS_REJECTED",
              "PROPOSAL_STATUS_FAILED"
            ],
            "default": "PROPOSAL_STATUS_UNSPECIFIED"
          },
          {
            "name": "voter",
            "description": "voter defines the voter address for the proposals.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "depositor",
            "description": "depositor defines the deposit addresses from the proposals.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryProposalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Proposals queries all proposals based on given status.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/proposals/{proposal_id}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Proposal",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Proposal queries proposal details based on ProposalID.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/proposals/{proposal_id}/deposits": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Deposits",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryDepositsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Deposits queries all deposits of a single proposal.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Deposit",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "depositor",
            "description": "depositor defines the deposit addresses from the proposals.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryDepositResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Deposit queries single deposit information based proposalID, depositAddr.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/proposals/{proposal_id}/tally": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1TallyResult",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryTallyResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "TallyResult queries the tally of a proposal vote.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/proposals/{proposal_id}/votes": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Votes",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryVotesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Votes queries votes of a given proposal.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Vote",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "voter",
            "description": "voter defines the voter address for the proposals.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryVoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Vote queries voted information based on proposalID, voterAddr.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/params/{params_type}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Beta1Params",
        "parameters": [
          {
            "name": "params_type",
            "description": "params_type defines which parameters to query for, can be one of \"voting\",\n\"tallying\" or \"deposit\".",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Params queries all parameters of the gov module.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Beta1Proposals",
        "parameters": [
          {
            "name": "proposal_status",
            "description": "proposal_status defines the status of the proposals.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PROPOSAL_STATUS_UNSPECIFIED",
              "PROPOSAL_STATUS_DEPOSIT_PERIOD",
              "PROPOSAL_STATUS_VOTING_PERIOD",
              "PROPOSAL_STATUS_PASSED",
              "PROPOSAL_STATUS_REJECTED",
              "PROPOSAL_STATUS_FAILED"
            ],
            "default": "PROPOSAL_STATUS_UNSPECIFIED"
          },
          {
            "name": "voter",
            "description": "voter defines the voter address for the proposals.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "depositor",
            "description": "depositor defines the deposit addresses from the proposals.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryProposalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Proposals queries all proposals based on given status.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Beta1Proposal",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Proposal queries proposal details based on ProposalID.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Beta1Deposits",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryDepositsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Deposits queries all deposits of a single proposal.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Beta1Deposit",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "depositor",
            "description": "depositor defines the deposit addresses from the proposals.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryDepositResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Deposit queries single deposit information based proposalID, depositAddr.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/tally": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Beta1TallyResult",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryTallyResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "TallyResult queries the tally of a proposal vote.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Beta1Votes",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryVotesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Votes queries votes of a given proposal.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGovTypesV1Beta1Vote",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "voter",
            "description": "voter defines the voter address for the proposals.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryVoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Vote queries voted information based on proposalID, voterAddr.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/group_info/{group_id}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGroupGroupInfo",
        "parameters": [
          {
            "name": "group_id",
            "description": "group_id is the unique ID of the group.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GroupInfo queries group info based on group id.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/group_members/{group_id}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGroupGroupMembers",
        "parameters": [
          {
            "name": "group_id",
            "description": "group_id is the unique ID of the group.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupMembersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GroupMembers queries members of a group by group id.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/group_policies_by_admin/{admin}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGroupGroupPoliciesByAdmin",
        "parameters": [
          {
            "name": "admin",
            "description": "admin is the admin address of the group policy.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupPoliciesByAdminResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GroupPoliciesByAdmin queries group policies by admin address.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/group_policies_by_group/{group_id}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGroupGroupPoliciesByGroup",
        "parameters": [
          {
            "name": "group_id",
            "description": "group_id is the unique ID of the group policy's group.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupPoliciesByGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GroupPoliciesByGroup queries group policies by group id.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/group_policy_info/{address}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGroupGroupPolicyInfo",
        "parameters": [
          {
            "name": "address",
            "description": "address is the account address of the group policy.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupPolicyInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GroupPolicyInfo queries group policy info based on account address of group policy.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/groups": {
      "get": {
        "description": "Since: cosmos-sdk 0.47.1",
        "operationId": "GithubComCosmosCosmosSdkXGroupGroups",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Groups queries all groups in state.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/groups_by_admin/{admin}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGroupGroupsByAdmin",
        "parameters": [
          {
            "name": "admin",
            "description": "admin is the account address of a group's admin.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupsByAdminResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GroupsByAdmin queries groups by admin address.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/groups_by_member/{address}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGroupGroupsByMember",
        "parameters": [
          {
            "name": "address",
            "description": "address is the group member address.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupsByMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GroupsByMember queries groups by member address.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/proposal/{proposal_id}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGroupProposal",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id is the unique ID of a proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Proposal queries a proposal based on proposal id.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/proposals/{proposal_id}/tally": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGroupTallyResult",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id is the unique id of a proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryTallyResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "TallyResult returns the tally result of a proposal. If the proposal is\nstill in voting period, then this query computes the current tally state,\nwhich might not be final. On the other hand, if the proposal is final,\nthen it simply returns the `final_tally_result` state stored in the\nproposal itself.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/proposals_by_group_policy/{address}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGroupProposalsByGroupPolicy",
        "parameters": [
          {
            "name": "address",
            "description": "address is the account address of the group policy related to proposals.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryProposalsByGroupPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ProposalsByGroupPolicy queries proposals based on account address of group policy.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/vote_by_proposal_voter/{proposal_id}/{voter}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGroupVoteByProposalVoter",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id is the unique ID of a proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "voter",
            "description": "voter is a proposal voter account address.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryVoteByProposalVoterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "VoteByProposalVoter queries a vote by proposal id and voter.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/votes_by_proposal/{proposal_id}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGroupVotesByProposal",
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id is the unique ID of a proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryVotesByProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "VotesByProposal queries a vote by proposal id.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/votes_by_voter/{voter}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXGroupVotesByVoter",
        "parameters": [
          {
            "name": "voter",
            "description": "voter is a proposal voter account address.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryVotesByVoterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "VotesByVoter queries a vote by voter.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/mint/v1beta1/annual_provisions": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXMintTypesAnnualProvisions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.mint.v1beta1.QueryAnnualProvisionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "AnnualProvisions current minting annual provisions value.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/mint/v1beta1/inflation": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXMintTypesInflation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.mint.v1beta1.QueryInflationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Inflation returns the current minting inflation value.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/mint/v1beta1/params": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXMintTypesParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.mint.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Params returns the total set of minting parameters.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/balance/{owner}/{class_id}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXNftBalance",
        "parameters": [
          {
            "name": "owner",
            "description": "owner is the owner address of the nft",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "class_id",
            "description": "class_id associated with the nft",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Balance queries the number of NFTs of a given class owned by the owner, same as balanceOf in ERC721",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/classes": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXNftClasses",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryClassesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Classes queries all NFT classes",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/classes/{class_id}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXNftClass",
        "parameters": [
          {
            "name": "class_id",
            "description": "class_id associated with the nft",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryClassResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Class queries an NFT class based on its id",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/nfts": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXNftNFTs",
        "parameters": [
          {
            "name": "class_id",
            "description": "class_id associated with the nft",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "owner is the owner address of the nft",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryNFTsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "NFTs queries all NFTs of a given class or owner,choose at least one of the two, similar to tokenByIndex in\nERC721Enumerable",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/nfts/{class_id}/{id}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXNftNFT",
        "parameters": [
          {
            "name": "class_id",
            "description": "class_id associated with the nft",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "id is a unique identifier of the NFT",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryNFTResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "NFT queries an NFT based on its class and id.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/owner/{class_id}/{id}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXNftOwner",
        "parameters": [
          {
            "name": "class_id",
            "description": "class_id associated with the nft",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "id is a unique identifier of the NFT",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryOwnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Owner queries the owner of the NFT based on its class and id, same as ownerOf in ERC721",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/supply/{class_id}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXNftSupply",
        "parameters": [
          {
            "name": "class_id",
            "description": "class_id associated with the nft",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QuerySupplyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Supply queries the number of NFTs from the given class, same as totalSupply of ERC721.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/slashing/v1beta1/params": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXSlashingTypesParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.slashing.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Params queries the parameters of slashing module",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/slashing/v1beta1/signing_infos": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXSlashingTypesSigningInfos",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.slashing.v1beta1.QuerySigningInfosResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "SigningInfos queries signing info of all validators",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/slashing/v1beta1/signing_infos/{cons_address}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXSlashingTypesSigningInfo",
        "parameters": [
          {
            "name": "cons_address",
            "description": "cons_address is the address to query signing info of",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.slashing.v1beta1.QuerySigningInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "SigningInfo queries the signing info of given cons address",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/delegations/{delegator_addr}": {
      "get": {
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.",
        "operationId": "GithubComCosmosCosmosSdkXStakingTypesDelegatorDelegations",
        "parameters": [
          {
            "name": "delegator_addr",
            "description": "delegator_addr defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "DelegatorDelegations queries all delegations of a given delegator address.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations": {
      "get": {
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.",
        "operationId": "GithubComCosmosCosmosSdkXStakingTypesRedelegations",
        "parameters": [
          {
            "name": "delegator_addr",
            "description": "delegator_addr defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "src_validator_addr",
            "description": "src_validator_addr defines the validator address to redelegate from.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dst_validator_addr",
            "description": "dst_validator_addr defines the validator address to redelegate to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryRedelegationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Redelegations queries redelegations of given address.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations": {
      "get": {
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.",
        "operationId": "GithubComCosmosCosmosSdkXStakingTypesDelegatorUnbondingDelegations",
        "parameters": [
          {
            "name": "delegator_addr",
            "description": "delegator_addr defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "DelegatorUnbondingDelegations queries all unbonding delegations of a given\ndelegator address.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators": {
      "get": {
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.",
        "operationId": "GithubComCosmosCosmosSdkXStakingTypesDelegatorValidators",
        "parameters": [
          {
            "name": "delegator_addr",
            "description": "delegator_addr defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "DelegatorValidators queries all validators info for given delegator\naddress.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXStakingTypesDelegatorValidator",
        "parameters": [
          {
            "name": "delegator_addr",
            "description": "delegator_addr defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "validator_addr",
            "description": "validator_addr defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryDelegatorValidatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "DelegatorValidator queries validator info for given delegator validator\npair.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/historical_info/{height}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXStakingTypesHistoricalInfo",
        "parameters": [
          {
            "name": "height",
            "description": "height defines at which height to query the historical info.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryHistoricalInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "HistoricalInfo queries the historical info for given height.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/params": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXStakingTypesParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Parameters queries the staking parameters.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/pool": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXStakingTypesPool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryPoolResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Pool queries the pool info.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/validators": {
      "get": {
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.",
        "operationId": "GithubComCosmosCosmosSdkXStakingTypesValidators",
        "parameters": [
          {
            "name": "status",
            "description": "status enables to query for validators matching a given status.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryValidatorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Validators queries all validators that match the given status.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/validators/{validator_addr}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXStakingTypesValidator",
        "parameters": [
          {
            "name": "validator_addr",
            "description": "validator_addr defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryValidatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Validator queries validator info for given validator address.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations": {
      "get": {
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.",
        "operationId": "GithubComCosmosCosmosSdkXStakingTypesValidatorDelegations",
        "parameters": [
          {
            "name": "validator_addr",
            "description": "validator_addr defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryValidatorDelegationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ValidatorDelegations queries delegate info for given validator.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXStakingTypesDelegation",
        "parameters": [
          {
            "name": "validator_addr",
            "description": "validator_addr defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "delegator_addr",
            "description": "delegator_addr defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryDelegationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Delegation queries delegate info for given validator delegator pair.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXStakingTypesUnbondingDelegation",
        "parameters": [
          {
            "name": "validator_addr",
            "description": "validator_addr defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "delegator_addr",
            "description": "delegator_addr defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryUnbondingDelegationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "UnbondingDelegation queries unbonding info for given validator delegator\npair.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations": {
      "get": {
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.",
        "operationId": "GithubComCosmosCosmosSdkXStakingTypesValidatorUnbondingDelegations",
        "parameters": [
          {
            "name": "validator_addr",
            "description": "validator_addr defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ValidatorUnbondingDelegations queries unbonding delegations of a validator.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/tx/v1beta1/decode": {
      "post": {
        "description": "Since: cosmos-sdk 0.47",
        "operationId": "GithubComCosmosCosmosSdkTypesTxTxDecode",
        "parameters": [
          {
            "name": "body",
            "description": "TxDecodeRequest is the request type for the Service.TxDecode\nRPC method.\n\nSince: cosmos-sdk 0.47",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.TxDecodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.TxDecodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "TxDecode decodes the transaction.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/tx/v1beta1/decode/amino": {
      "post": {
        "description": "Since: cosmos-sdk 0.47",
        "operationId": "GithubComCosmosCosmosSdkTypesTxTxDecodeAmino",
        "parameters": [
          {
            "name": "body",
            "description": "TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino\nRPC method.\n\nSince: cosmos-sdk 0.47",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.TxDecodeAminoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.TxDecodeAminoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "TxDecodeAmino decodes an Amino transaction from encoded bytes to JSON.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/tx/v1beta1/encode": {
      "post": {
        "description": "Since: cosmos-sdk 0.47",
        "operationId": "GithubComCosmosCosmosSdkTypesTxTxEncode",
        "parameters": [
          {
            "name": "body",
            "description": "TxEncodeRequest is the request type for the Service.TxEncode\nRPC method.\n\nSince: cosmos-sdk 0.47",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.TxEncodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.TxEncodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "TxEncode encodes the transaction.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/tx/v1beta1/encode/amino": {
      "post": {
        "description": "Since: cosmos-sdk 0.47",
        "operationId": "GithubComCosmosCosmosSdkTypesTxTxEncodeAmino",
        "parameters": [
          {
            "name": "body",
            "description": "TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino\nRPC method.\n\nSince: cosmos-sdk 0.47",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.TxEncodeAminoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.TxEncodeAminoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "TxEncodeAmino encodes an Amino transaction from JSON to encoded bytes.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/tx/v1beta1/simulate": {
      "post": {
        "operationId": "GithubComCosmosCosmosSdkTypesTxSimulate",
        "parameters": [
          {
            "name": "body",
            "description": "SimulateRequest is the request type for the Service.Simulate\nRPC method.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.SimulateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.SimulateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Simulate simulates executing a transaction for estimating gas usage.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/tx/v1beta1/txs": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkTypesTxGetTxsEvent",
        "parameters": [
          {
            "name": "events",
            "description": "events is the list of transaction event type.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "order_by",
            "description": " - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.\n - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order\n - ORDER_BY_DESC: ORDER_BY_DESC defines descending order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ORDER_BY_UNSPECIFIED",
              "ORDER_BY_ASC",
              "ORDER_BY_DESC"
            ],
            "default": "ORDER_BY_UNSPECIFIED"
          },
          {
            "name": "page",
            "description": "page is the page number to query, starts at 1. If not provided, will default to first page.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.GetTxsEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GetTxsEvent fetches txs by event.",
        "tags": [
          "Service"
        ]
      },
      "post": {
        "operationId": "GithubComCosmosCosmosSdkTypesTxBroadcastTx",
        "parameters": [
          {
            "name": "body",
            "description": "BroadcastTxRequest is the request type for the Service.BroadcastTxRequest\nRPC method.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.BroadcastTxRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.BroadcastTxResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "BroadcastTx broadcast transaction.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/tx/v1beta1/txs/block/{height}": {
      "get": {
        "description": "Since: cosmos-sdk 0.45.2",
        "operationId": "GithubComCosmosCosmosSdkTypesTxGetBlockWithTxs",
        "parameters": [
          {
            "name": "height",
            "description": "height is the height of the block to query.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.GetBlockWithTxsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GetBlockWithTxs fetches a block with decoded txs.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/tx/v1beta1/txs/{hash}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkTypesTxGetTx",
        "parameters": [
          {
            "name": "hash",
            "description": "hash is the tx hash to query, encoded as a hex string.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.GetTxResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "GetTx fetches a tx by hash.",
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/upgrade/v1beta1/applied_plan/{name}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXUpgradeTypesAppliedPlan",
        "parameters": [
          {
            "name": "name",
            "description": "name is the name of the applied plan to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.QueryAppliedPlanResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "AppliedPlan queries a previously applied upgrade plan by its name.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/upgrade/v1beta1/authority": {
      "get": {
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "GithubComCosmosCosmosSdkXUpgradeTypesAuthority",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.QueryAuthorityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Returns the account with authority to conduct upgrades",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/upgrade/v1beta1/current_plan": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXUpgradeTypesCurrentPlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.QueryCurrentPlanResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "CurrentPlan queries the current upgrade plan.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/upgrade/v1beta1/module_versions": {
      "get": {
        "description": "Since: cosmos-sdk 0.43",
        "operationId": "GithubComCosmosCosmosSdkXUpgradeTypesModuleVersions",
        "parameters": [
          {
            "name": "module_name",
            "description": "module_name is a field to query a specific module\nconsensus version from state. Leaving this empty will\nfetch the full list of module versions from state",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.QueryModuleVersionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ModuleVersions queries the list of module versions from state.",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}": {
      "get": {
        "operationId": "GithubComCosmosCosmosSdkXUpgradeTypesUpgradedConsensusState",
        "parameters": [
          {
            "name": "last_height",
            "description": "last height of the current chain must be sent in request\nas this is the height under which next consensus state is stored",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "UpgradedConsensusState queries the consensus state that will serve\nas a trusted kernel for the next version of this chain. It will only be\nstored at the last height of this chain.\nUpgradedConsensusState RPC not supported with legacy querier\nThis rpc is deprecated now that IBC has its own replacement\n(https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmwasm/wasm/v1/code": {
      "get": {
        "operationId": "GithubComCosmWasmWasmdXWasmTypesCodes",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmwasm.wasm.v1.QueryCodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Codes gets the metadata for all stored wasm codes",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmwasm/wasm/v1/code/{code_id}": {
      "get": {
        "operationId": "GithubComCosmWasmWasmdXWasmTypesCode",
        "parameters": [
          {
            "name": "code_id",
            "description": "grpc-gateway_out does not support Go style CodID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmwasm.wasm.v1.QueryCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Code gets the binary code and metadata for a singe wasm code",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmwasm/wasm/v1/code/{code_id}/contracts": {
      "get": {
        "operationId": "GithubComCosmWasmWasmdXWasmTypesContractsByCode",
        "parameters": [
          {
            "name": "code_id",
            "description": "grpc-gateway_out does not support Go style CodID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmwasm.wasm.v1.QueryContractsByCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ContractsByCode lists all smart contracts for a code id",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmwasm/wasm/v1/codes/params": {
      "get": {
        "operationId": "GithubComCosmWasmWasmdXWasmTypesParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmwasm.wasm.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Params gets the module params",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmwasm/wasm/v1/codes/pinned": {
      "get": {
        "operationId": "GithubComCosmWasmWasmdXWasmTypesPinnedCodes",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmwasm.wasm.v1.QueryPinnedCodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "PinnedCodes gets the pinned code ids",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmwasm/wasm/v1/contract/{address}": {
      "get": {
        "operationId": "GithubComCosmWasmWasmdXWasmTypesContractInfo",
        "parameters": [
          {
            "name": "address",
            "description": "address is the address of the contract to query",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmwasm.wasm.v1.QueryContractInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ContractInfo gets the contract meta data",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmwasm/wasm/v1/contract/{address}/history": {
      "get": {
        "operationId": "GithubComCosmWasmWasmdXWasmTypesContractHistory",
        "parameters": [
          {
            "name": "address",
            "description": "address is the address of the contract to query",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmwasm.wasm.v1.QueryContractHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ContractHistory gets the contract code history",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmwasm/wasm/v1/contract/{address}/raw/{query_data}": {
      "get": {
        "operationId": "GithubComCosmWasmWasmdXWasmTypesRawContractState",
        "parameters": [
          {
            "name": "address",
            "description": "address is the address of the contract",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "query_data",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmwasm.wasm.v1.QueryRawContractStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "RawContractState gets single key from the raw store data of a contract",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmwasm/wasm/v1/contract/{address}/smart/{query_data}": {
      "get": {
        "operationId": "GithubComCosmWasmWasmdXWasmTypesSmartContractState",
        "parameters": [
          {
            "name": "address",
            "description": "address is the address of the contract",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "query_data",
            "description": "QueryData contains the query data passed to the contract",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmwasm.wasm.v1.QuerySmartContractStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "SmartContractState get smart query result from the contract",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmwasm/wasm/v1/contract/{address}/state": {
      "get": {
        "operationId": "GithubComCosmWasmWasmdXWasmTypesAllContractState",
        "parameters": [
          {
            "name": "address",
            "description": "address is the address of the contract",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmwasm.wasm.v1.QueryAllContractStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "AllContractState gets all raw store data for a single contract",
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmwasm/wasm/v1/contracts/creator/{creator_address}": {
      "get": {
        "operationId": "GithubComCosmWasmWasmdXWasmTypesContractsByCreator",
        "parameters": [
          {
            "name": "creator_address",
            "description": "CreatorAddress is the address of contract creator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmwasm.wasm.v1.QueryContractsByCreatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ContractsByCreator gets the contracts by creator",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/transfer/v1/channels/{channel_id}/ports/{port_id}/escrow_address": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesAppsTransferTypesEscrowAddress",
        "parameters": [
          {
            "name": "channel_id",
            "description": "unique channel identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "description": "unique port identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.transfer.v1.QueryEscrowAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "EscrowAddress returns the escrow address for a particular port and channel id.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/transfer/v1/denom_hashes/{trace}": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesAppsTransferTypesDenomHash",
        "parameters": [
          {
            "name": "trace",
            "description": "The denomination trace ([port_id]/[channel_id])+/[denom]",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.transfer.v1.QueryDenomHashResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "DenomHash queries a denomination hash information.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/transfer/v1/denom_traces": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesAppsTransferTypesDenomTraces",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.transfer.v1.QueryDenomTracesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "DenomTraces queries all denomination traces.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/transfer/v1/denom_traces/{hash}": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesAppsTransferTypesDenomTrace",
        "parameters": [
          {
            "name": "hash",
            "description": "hash (in hex format) or denom (full denom with ibc prefix) of the denomination trace information.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.transfer.v1.QueryDenomTraceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "DenomTrace queries a denomination trace information.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/transfer/v1/denoms/{denom}/total_escrow": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesAppsTransferTypesTotalEscrowForDenom",
        "parameters": [
          {
            "name": "denom",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "TotalEscrowForDenom returns the total amount of tokens in escrow based on the denom.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/transfer/v1/params": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesAppsTransferTypesParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.transfer.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Params queries all parameters of the ibc-transfer module.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/channel/v1/channels": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore04ChannelTypesChannels",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v1.QueryChannelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Channels queries all the IBC channels of a chain.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore04ChannelTypesChannel",
        "parameters": [
          {
            "name": "channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "description": "port unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v1.QueryChannelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Channel queries an IBC Channel.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/client_state": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore04ChannelTypesChannelClientState",
        "parameters": [
          {
            "name": "channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "description": "port unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v1.QueryChannelClientStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ChannelClientState queries for the client state for the channel associated\nwith the provided channel identifiers.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/consensus_state/revision/{revision_number}/height/{revision_height}": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore04ChannelTypesChannelConsensusState",
        "parameters": [
          {
            "name": "channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "description": "port unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revision_number",
            "description": "revision number of the consensus state",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "revision_height",
            "description": "revision height of the consensus state",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v1.QueryChannelConsensusStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ChannelConsensusState queries for the consensus state for the channel\nassociated with the provided channel identifiers.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore04ChannelTypesNextSequenceReceive",
        "parameters": [
          {
            "name": "channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "description": "port unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v1.QueryNextSequenceReceiveResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "NextSequenceReceive returns the next receive sequence for a given channel.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acknowledgements": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore04ChannelTypesPacketAcknowledgements",
        "parameters": [
          {
            "name": "channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "description": "port unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "packet_commitment_sequences",
            "description": "list of packet sequences",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v1.QueryPacketAcknowledgementsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "PacketAcknowledgements returns all the packet acknowledgements associated\nwith a channel.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acks/{sequence}": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore04ChannelTypesPacketAcknowledgement",
        "parameters": [
          {
            "name": "channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "description": "port unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sequence",
            "description": "packet sequence",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v1.QueryPacketAcknowledgementResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "PacketAcknowledgement queries a stored packet acknowledgement hash.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore04ChannelTypesPacketCommitments",
        "parameters": [
          {
            "name": "channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "description": "port unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v1.QueryPacketCommitmentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "PacketCommitments returns all the packet commitments hashes associated\nwith a channel.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_ack_sequences}/unreceived_acks": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore04ChannelTypesUnreceivedAcks",
        "parameters": [
          {
            "name": "channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "description": "port unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "packet_ack_sequences",
            "description": "list of acknowledgement sequences",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            },
            "collectionFormat": "csv",
            "minItems": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v1.QueryUnreceivedAcksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "UnreceivedAcks returns all the unreceived IBC acknowledgements associated\nwith a channel and sequences.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_commitment_sequences}/unreceived_packets": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore04ChannelTypesUnreceivedPackets",
        "parameters": [
          {
            "name": "channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "description": "port unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "packet_commitment_sequences",
            "description": "list of packet sequences",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            },
            "collectionFormat": "csv",
            "minItems": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v1.QueryUnreceivedPacketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "UnreceivedPackets returns all the unreceived IBC packets associated with a\nchannel and sequences.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{sequence}": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore04ChannelTypesPacketCommitment",
        "parameters": [
          {
            "name": "channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "description": "port unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sequence",
            "description": "packet sequence",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v1.QueryPacketCommitmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "PacketCommitment queries a stored packet commitment hash.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_receipts/{sequence}": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore04ChannelTypesPacketReceipt",
        "parameters": [
          {
            "name": "channel_id",
            "description": "channel unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "description": "port unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sequence",
            "description": "packet sequence",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v1.QueryPacketReceiptResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "PacketReceipt queries if a given packet sequence has been received on the\nqueried chain",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/channel/v1/connections/{connection}/channels": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore04ChannelTypesConnectionChannels",
        "parameters": [
          {
            "name": "connection",
            "description": "connection unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.channel.v1.QueryConnectionChannelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ConnectionChannels queries all the channels associated with a connection\nend.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/client/v1/client_states": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore02ClientTypesClientStates",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.QueryClientStatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ClientStates queries all the IBC light clients of a chain.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/client/v1/client_states/{client_id}": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore02ClientTypesClientState",
        "parameters": [
          {
            "name": "client_id",
            "description": "client state unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.QueryClientStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ClientState queries an IBC light client.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/client/v1/client_status/{client_id}": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore02ClientTypesClientStatus",
        "parameters": [
          {
            "name": "client_id",
            "description": "client unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.QueryClientStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Status queries the status of an IBC client.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/client/v1/consensus_states/{client_id}": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore02ClientTypesConsensusStates",
        "parameters": [
          {
            "name": "client_id",
            "description": "client identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.QueryConsensusStatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ConsensusStates queries all the consensus state associated with a given\nclient.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/client/v1/consensus_states/{client_id}/heights": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore02ClientTypesConsensusStateHeights",
        "parameters": [
          {
            "name": "client_id",
            "description": "client identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.QueryConsensusStateHeightsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ConsensusStateHeights queries the height of every consensus states associated with a given client.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/client/v1/consensus_states/{client_id}/revision/{revision_number}/height/{revision_height}": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore02ClientTypesConsensusState",
        "parameters": [
          {
            "name": "client_id",
            "description": "client identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revision_number",
            "description": "consensus state revision number",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "revision_height",
            "description": "consensus state revision height",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "latest_height",
            "description": "latest_height overrrides the height field and queries the latest stored\nConsensusState",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.QueryConsensusStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ConsensusState queries a consensus state associated with a client state at\na given height.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/client/v1/params": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore02ClientTypesClientParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.QueryClientParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ClientParams queries all parameters of the ibc client submodule.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/client/v1/upgraded_client_states": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore02ClientTypesUpgradedClientState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.QueryUpgradedClientStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "UpgradedClientState queries an Upgraded IBC light client.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/client/v1/upgraded_consensus_states": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore02ClientTypesUpgradedConsensusState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v1.QueryUpgradedConsensusStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "UpgradedConsensusState queries an Upgraded IBC consensus state.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/connection/v1/client_connections/{client_id}": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore03ConnectionTypesClientConnections",
        "parameters": [
          {
            "name": "client_id",
            "description": "client identifier associated with a connection",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.connection.v1.QueryClientConnectionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ClientConnections queries the connection paths associated with a client\nstate.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/connection/v1/connections": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore03ConnectionTypesConnections",
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.connection.v1.QueryConnectionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Connections queries all the IBC connections of a chain.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/connection/v1/connections/{connection_id}": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore03ConnectionTypesConnection",
        "parameters": [
          {
            "name": "connection_id",
            "description": "connection unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.connection.v1.QueryConnectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "Connection queries an IBC connection end.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/connection/v1/connections/{connection_id}/client_state": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore03ConnectionTypesConnectionClientState",
        "parameters": [
          {
            "name": "connection_id",
            "description": "connection identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.connection.v1.QueryConnectionClientStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ConnectionClientState queries the client state associated with the\nconnection.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/connection/v1/connections/{connection_id}/consensus_state/revision/{revision_number}/height/{revision_height}": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore03ConnectionTypesConnectionConsensusState",
        "parameters": [
          {
            "name": "connection_id",
            "description": "connection identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revision_number",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "revision_height",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.connection.v1.QueryConnectionConsensusStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ConnectionConsensusState queries the consensus state associated with the\nconnection.",
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/connection/v1/params": {
      "get": {
        "operationId": "GithubComCosmosIbcGoV7ModulesCore03ConnectionTypesConnectionParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.connection.v1.QueryConnectionParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "summary": "ConnectionParams queries all parameters of the ibc connection submodule.",
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "coreum.asset.ft.v1.Feature": {
      "type": "string",
      "enum": [
        "minting",
        "burning",
        "freezing",
        "whitelisting",
        "ibc",
        "block_smart_contracts"
      ],
      "default": "minting",
      "description": "Feature defines possible features of fungible token."
    },
    "coreum.asset.ft.v1.Params": {
      "type": "object",
      "properties": {
        "issue_fee": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
          "description": "issue_fee is the fee burnt each time new token is issued."
        },
        "token_upgrade_decision_timeout": {
          "type": "string",
          "format": "date-time",
          "description": "token_upgrade_decision_timeout defines the end of the decision period for upgrading the token."
        },
        "token_upgrade_grace_period": {
          "type": "string",
          "description": "token_upgrade_grace_period the period after which the token upgrade is executed effectively."
        }
      },
      "description": "Params store gov manageable parameters."
    },
    "coreum.asset.ft.v1.QueryBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "string",
          "title": "balance contains the balance with the queried account and denom"
        },
        "whitelisted": {
          "type": "string",
          "description": "whitelisted is the whitelisted amount of the denom on the account."
        },
        "frozen": {
          "type": "string",
          "description": "frozen is the frozen amount of the denom on the account."
        },
        "locked": {
          "type": "string",
          "description": "locked is the balance locked by vesting."
        }
      }
    },
    "coreum.asset.ft.v1.QueryFrozenBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
          "title": "balance contains the frozen balance with the queried account and denom"
        }
      }
    },
    "coreum.asset.ft.v1.QueryFrozenBalancesResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        },
        "balances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "balances contains the frozen balances on the queried account"
        }
      }
    },
    "coreum.asset.ft.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/coreum.asset.ft.v1.Params"
        }
      },
      "description": "QueryParamsResponse defines the response type for querying x/asset/ft parameters."
    },
    "coreum.asset.ft.v1.QueryTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "$ref": "#/definitions/coreum.asset.ft.v1.Token"
        }
      }
    },
    "coreum.asset.ft.v1.QueryTokenUpgradeStatusesResponse": {
      "type": "object",
      "properties": {
        "statuses": {
          "$ref": "#/definitions/coreum.asset.ft.v1.TokenUpgradeStatuses"
        }
      }
    },
    "coreum.asset.ft.v1.QueryTokensResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        },
        "tokens": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreum.asset.ft.v1.Token"
          }
        }
      }
    },
    "coreum.asset.ft.v1.QueryWhitelistedBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
          "title": "balance contains the whitelisted balance with the queried account and denom"
        }
      }
    },
    "coreum.asset.ft.v1.QueryWhitelistedBalancesResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        },
        "balances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "balances contains the whitelisted balances on the queried account"
        }
      }
    },
    "coreum.asset.ft.v1.Token": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "issuer": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        },
        "subunit": {
          "type": "string"
        },
        "precision": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "globally_frozen": {
          "type": "boolean"
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/coreum.asset.ft.v1.Feature"
          }
        },
        "burn_rate": {
          "type": "string",
          "description": "burn_rate is a number between 0 and 1 which will be multiplied by send amount to determine\nburn_amount. This value will be burnt on top of the send amount."
        },
        "send_commission_rate": {
          "type": "string",
          "description": "send_commission_rate is a number between 0 and 1 which will be multiplied by send amount to determine\namount sent to the token issuer account."
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "uri": {
          "type": "string"
        },
        "uri_hash": {
          "type": "string"
        }
      },
      "description": "Token is a full representation of the fungible token."
    },
    "coreum.asset.ft.v1.TokenUpgradeStatuses": {
      "type": "object",
      "properties": {
        "v1": {
          "$ref": "#/definitions/coreum.asset.ft.v1.TokenUpgradeV1Status"
        }
      },
      "description": "TokenUpgradeStatuses defines all statuses of the token migrations."
    },
    "coreum.asset.ft.v1.TokenUpgradeV1Status": {
      "type": "object",
      "properties": {
        "ibc_enabled": {
          "type": "boolean"
        },
        "start_time": {
          "type": "string",
          "format": "date-time"
        },
        "end_time": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "TokenUpgradeV1Status defines the current status of the v1 token migration."
    },
    "coreum.asset.nft.v1.Class": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "issuer": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "uri_hash": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/google.protobuf.Any"
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/coreum.asset.nft.v1.ClassFeature"
          }
        },
        "royalty_rate": {
          "type": "string",
          "description": "royalty_rate is a number between 0 and 1,which will be used in coreum native Dex.\nwhenever an NFT this class is traded on the Dex, the traded amount will be multiplied by this value\nthat will be transferred to the issuer of the NFT."
        }
      },
      "description": "Class is a full representation of the non-fungible token class."
    },
    "coreum.asset.nft.v1.ClassFeature": {
      "type": "string",
      "enum": [
        "burning",
        "freezing",
        "whitelisting",
        "disable_sending",
        "soulbound"
      ],
      "default": "burning",
      "description": "ClassFeature defines possible features of non-fungible token class."
    },
    "coreum.asset.nft.v1.Params": {
      "type": "object",
      "properties": {
        "mint_fee": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
          "title": "mint_fee is the fee burnt each time new NFT is minted"
        }
      },
      "description": "Params store gov manageable parameters."
    },
    "coreum.asset.nft.v1.QueryBurntNFTResponse": {
      "type": "object",
      "properties": {
        "burnt": {
          "type": "boolean"
        }
      }
    },
    "coreum.asset.nft.v1.QueryBurntNFTsInClassResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse"
        },
        "nft_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "coreum.asset.nft.v1.QueryClassFrozenAccountsResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "coreum.asset.nft.v1.QueryClassFrozenResponse": {
      "type": "object",
      "properties": {
        "frozen": {
          "type": "boolean"
        }
      }
    },
    "coreum.asset.nft.v1.QueryClassResponse": {
      "type": "object",
      "properties": {
        "class": {
          "$ref": "#/definitions/coreum.asset.nft.v1.Class"
        }
      },
      "description": "QueryClassResponse is response type for the Query/Class RPC method."
    },
    "coreum.asset.nft.v1.QueryClassWhitelistedAccountsResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "coreum.asset.nft.v1.QueryClassesResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        },
        "classes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreum.asset.nft.v1.Class"
          }
        }
      },
      "description": "QueryClassResponse is response type for the Query/Classes RPC method."
    },
    "coreum.asset.nft.v1.QueryFrozenResponse": {
      "type": "object",
      "properties": {
        "frozen": {
          "type": "boolean"
        }
      }
    },
    "coreum.asset.nft.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/coreum.asset.nft.v1.Params"
        }
      },
      "description": "QueryParamsResponse defines the response type for querying x/asset/nft parameters."
    },
    "coreum.asset.nft.v1.QueryWhitelistedAccountsForNFTResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "coreum.asset.nft.v1.QueryWhitelistedResponse": {
      "type": "object",
      "properties": {
        "whitelisted": {
          "type": "boolean"
        }
      }
    },
    "coreum.customparams.v1.QueryStakingParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/coreum.customparams.v1.StakingParams"
        }
      },
      "description": "QueryStakingParamsResponse defines the response type for querying x/customparams staking parameters."
    },
    "coreum.customparams.v1.StakingParams": {
      "type": "object",
      "properties": {
        "min_self_delegation": {
          "type": "string",
          "description": "min_self_delegation is the validators global self declared minimum for delegation."
        }
      },
      "description": "StakingParams defines the set of additional staking params for the staking module wrapper."
    },
    "coreum.feemodel.v1.ModelParams": {
      "type": "object",
      "properties": {
        "initial_gas_price": {
          "type": "string",
          "description": "initial_gas_price is used when block gas short average is 0. It happens when there are no transactions being broadcasted. This value is also used to initialize gas price on brand-new chain."
        },
        "max_gas_price_multiplier": {
          "type": "string",
          "description": "max_gas_price_multiplier is used to compute max_gas_price (max_gas_price = initial_gas_price * max_gas_price_multiplier). Max gas price is charged when block gas short average is greater than or equal to MaxBlockGas. This value is used to limit gas price escalation to avoid having possible infinity GasPrice value otherwise."
        },
        "max_discount": {
          "type": "string",
          "description": "max_discount is th maximum discount we offer on top of initial gas price if short average block gas is between long average block gas and escalation start block gas."
        },
        "escalation_start_fraction": {
          "type": "string",
          "description": "escalation_start_fraction defines fraction of max block gas usage where gas price escalation starts if short average block gas is higher than this value."
        },
        "max_block_gas": {
          "type": "string",
          "format": "int64",
          "description": "max_block_gas sets the maximum capacity of block. This is enforced on tendermint level in genesis configuration. Once short average block gas goes above this value, gas price is a flat line equal to MaxGasPrice."
        },
        "short_ema_block_length": {
          "type": "integer",
          "format": "int64",
          "description": "short_ema_block_length defines inertia for short average long gas in EMA model. The equation is: NewAverage = ((ShortAverageBlockLength - 1)*PreviousAverage + GasUsedByCurrentBlock) / ShortAverageBlockLength\nThe value might be interpreted as the number of blocks which are taken to calculate the average. It would be exactly like that in SMA model, in EMA this is an approximation."
        },
        "long_ema_block_length": {
          "type": "integer",
          "format": "int64",
          "description": "long_ema_block_length defines inertia for long average block gas in EMA model. The equation is: NewAverage = ((LongAverageBlockLength - 1)*PreviousAverage + GasUsedByCurrentBlock) / LongAverageBlockLength\nThe value might be interpreted as the number of blocks which are taken to calculate the average. It would be exactly like that in SMA model, in EMA this is an approximation."
        }
      },
      "description": "The input (x value) for that function is calculated by taking short block gas average.\nPrice (y value) being an output of the fee model is used as the minimum gas price for next block.",
      "title": "ModelParams define fee model params.\nThere are four regions on the fee model curve\n- between 0 and \"long average block gas\" where gas price goes down exponentially from InitialGasPrice to gas price with maximum discount (InitialGasPrice * (1 - MaxDiscount))\n- between \"long average block gas\" and EscalationStartBlockGas (EscalationStartBlockGas = MaxBlockGas * EscalationStartFraction) where we offer gas price with maximum discount all the time\n- between EscalationStartBlockGas (EscalationStartBlockGas = MaxBlockGas * EscalationStartFraction) and MaxBlockGas where price goes up rapidly (being an output of a power function) from gas price with maximum discount to MaxGasPrice  (MaxGasPrice = InitialGasPrice * MaxGasMultiplier)\n- above MaxBlockGas (if it happens for any reason) where price is equal to MaxGasPrice (MaxGasPrice = InitialGasPrice * MaxGasMultiplier)"
    },
    "coreum.feemodel.v1.Params": {
      "type": "object",
      "properties": {
        "model": {
          "$ref": "#/definitions/coreum.feemodel.v1.ModelParams",
          "description": "model is a fee model params."
        }
      },
      "description": "Params store gov manageable feemodel parameters."
    },
    "coreum.feemodel.v1.QueryMinGasPriceResponse": {
      "type": "object",
      "properties": {
        "min_gas_price": {
          "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin",
          "description": "min_gas_price is the current minimum gas price required by the network."
        }
      },
      "description": "QueryMinGasPriceResponse is the response type for the Query/MinGasPrice RPC method."
    },
    "coreum.feemodel.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/coreum.feemodel.v1.Params"
        }
      },
      "description": "QueryParamsResponse defines the response type for querying x/feemodel parameters."
    },
    "coreum.feemodel.v1.QueryRecommendedGasPriceResponse": {
      "type": "object",
      "properties": {
        "low": {
          "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
        },
        "med": {
          "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
        },
        "high": {
          "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
        }
      }
    },
    "coreum.nft.v1beta1.Class": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id defines the unique identifier of the NFT classification, similar to the contract address of ERC721"
        },
        "name": {
          "type": "string",
          "title": "name defines the human-readable name of the NFT classification. Optional"
        },
        "symbol": {
          "type": "string",
          "title": "symbol is an abbreviated name for nft classification. Optional"
        },
        "description": {
          "type": "string",
          "title": "description is a brief description of nft classification. Optional"
        },
        "uri": {
          "type": "string",
          "title": "uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional"
        },
        "uri_hash": {
          "type": "string",
          "title": "uri_hash is a hash of the document pointed by uri. Optional"
        },
        "data": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "data is the app specific metadata of the NFT class. Optional"
        }
      },
      "description": "Class defines the class of the nft type."
    },
    "coreum.nft.v1beta1.NFT": {
      "type": "object",
      "properties": {
        "class_id": {
          "type": "string",
          "title": "class_id associated with the NFT, similar to the contract address of ERC721"
        },
        "id": {
          "type": "string",
          "title": "id is a unique identifier of the NFT"
        },
        "uri": {
          "type": "string",
          "title": "uri for the NFT metadata stored off chain"
        },
        "uri_hash": {
          "type": "string",
          "title": "uri_hash is a hash of the document pointed by uri"
        },
        "data": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "data is an app specific data of the NFT. Optional"
        }
      },
      "description": "NFT defines the NFT."
    },
    "coreum.nft.v1beta1.QueryBalanceResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "QueryBalanceResponse is the response type for the Query/Balance RPC method"
    },
    "coreum.nft.v1beta1.QueryClassResponse": {
      "type": "object",
      "properties": {
        "class": {
          "$ref": "#/definitions/coreum.nft.v1beta1.Class"
        }
      },
      "title": "QueryClassResponse is the response type for the Query/Class RPC method"
    },
    "coreum.nft.v1beta1.QueryClassesResponse": {
      "type": "object",
      "properties": {
        "classes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreum.nft.v1beta1.Class"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse"
        }
      },
      "title": "QueryClassesResponse is the response type for the Query/Classes RPC method"
    },
    "coreum.nft.v1beta1.QueryNFTResponse": {
      "type": "object",
      "properties": {
        "nft": {
          "$ref": "#/definitions/coreum.nft.v1beta1.NFT"
        }
      },
      "title": "QueryNFTResponse is the response type for the Query/NFT RPC method"
    },
    "coreum.nft.v1beta1.QueryNFTsResponse": {
      "type": "object",
      "properties": {
        "nfts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coreum.nft.v1beta1.NFT"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse"
        }
      },
      "title": "QueryNFTsResponse is the response type for the Query/NFTs RPC methods"
    },
    "coreum.nft.v1beta1.QueryOwnerResponse": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        }
      },
      "title": "QueryOwnerResponse is the response type for the Query/Owner RPC method"
    },
    "coreum.nft.v1beta1.QuerySupplyResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "QuerySupplyResponse is the response type for the Query/Supply RPC method"
    },
    "cosmos.auth.v1beta1.AddressBytesToStringResponse": {
      "type": "object",
      "properties": {
        "address_string": {
          "type": "string"
        }
      },
      "description": "AddressBytesToStringResponse is the response type for AddressString rpc method.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.auth.v1beta1.AddressStringToBytesResponse": {
      "type": "object",
      "properties": {
        "address_bytes": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "AddressStringToBytesResponse is the response type for AddressBytes rpc method.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.auth.v1beta1.BaseAccount": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "pub_key": {
          "$ref": "#/definitions/google.protobuf.Any"
        },
        "account_number": {
          "type": "string",
          "format": "uint64"
        },
        "sequence": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "BaseAccount defines a base account type. It contains all the necessary fields\nfor basic account functionality. Any custom account type should extend this\ntype for additional functionality (e.g. vesting)."
    },
    "cosmos.auth.v1beta1.Bech32PrefixResponse": {
      "type": "object",
      "properties": {
        "bech32_prefix": {
          "type": "string"
        }
      },
      "description": "Bech32PrefixResponse is the response type for Bech32Prefix rpc method.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.auth.v1beta1.Params": {
      "type": "object",
      "properties": {
        "max_memo_characters": {
          "type": "string",
          "format": "uint64"
        },
        "tx_sig_limit": {
          "type": "string",
          "format": "uint64"
        },
        "tx_size_cost_per_byte": {
          "type": "string",
          "format": "uint64"
        },
        "sig_verify_cost_ed25519": {
          "type": "string",
          "format": "uint64"
        },
        "sig_verify_cost_secp256k1": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "Params defines the parameters for the auth module."
    },
    "cosmos.auth.v1beta1.QueryAccountAddressByIDResponse": {
      "type": "object",
      "properties": {
        "account_address": {
          "type": "string"
        }
      },
      "description": "Since: cosmos-sdk 0.46.2",
      "title": "QueryAccountAddressByIDResponse is the response type for AccountAddressByID rpc method"
    },
    "cosmos.auth.v1beta1.QueryAccountInfoResponse": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/cosmos.auth.v1beta1.BaseAccount",
          "description": "info is the account info which is represented by BaseAccount."
        }
      },
      "description": "QueryAccountInfoResponse is the Query/AccountInfo response type.\n\nSince: cosmos-sdk 0.47"
    },
    "cosmos.auth.v1beta1.QueryAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "account defines the account of the corresponding address."
        }
      },
      "description": "QueryAccountResponse is the response type for the Query/Account RPC method."
    },
    "cosmos.auth.v1beta1.QueryAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "title": "accounts are the existing accounts"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryAccountsResponse is the response type for the Query/Accounts RPC method.\n\nSince: cosmos-sdk 0.43"
    },
    "cosmos.auth.v1beta1.QueryModuleAccountByNameResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/google.protobuf.Any"
        }
      },
      "description": "QueryModuleAccountByNameResponse is the response type for the Query/ModuleAccountByName RPC method."
    },
    "cosmos.auth.v1beta1.QueryModuleAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      },
      "description": "QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts RPC method.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.auth.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/cosmos.auth.v1beta1.Params",
          "description": "params defines the parameters of the module."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "cosmos.authz.v1beta1.Grant": {
      "type": "object",
      "properties": {
        "authorization": {
          "$ref": "#/definitions/google.protobuf.Any"
        },
        "expiration": {
          "type": "string",
          "format": "date-time",
          "title": "time when the grant will expire and will be pruned. If null, then the grant\ndoesn't have a time expiration (other conditions  in `authorization`\nmay apply to invalidate the grant)"
        }
      },
      "description": "Grant gives permissions to execute\nthe provide method with expiration time."
    },
    "cosmos.authz.v1beta1.GrantAuthorization": {
      "type": "object",
      "properties": {
        "granter": {
          "type": "string"
        },
        "grantee": {
          "type": "string"
        },
        "authorization": {
          "$ref": "#/definitions/google.protobuf.Any"
        },
        "expiration": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "GrantAuthorization extends a grant with both the addresses of the grantee and granter.\nIt is used in genesis.proto and query.proto"
    },
    "cosmos.authz.v1beta1.QueryGranteeGrantsResponse": {
      "type": "object",
      "properties": {
        "grants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.authz.v1beta1.GrantAuthorization"
          },
          "description": "grants is a list of grants granted to the grantee."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines an pagination for the response."
        }
      },
      "description": "QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method."
    },
    "cosmos.authz.v1beta1.QueryGranterGrantsResponse": {
      "type": "object",
      "properties": {
        "grants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.authz.v1beta1.GrantAuthorization"
          },
          "description": "grants is a list of grants granted by the granter."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines an pagination for the response."
        }
      },
      "description": "QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method."
    },
    "cosmos.authz.v1beta1.QueryGrantsResponse": {
      "type": "object",
      "properties": {
        "grants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.authz.v1beta1.Grant"
          },
          "description": "authorizations is a list of grants granted for grantee by granter."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines an pagination for the response."
        }
      },
      "description": "QueryGrantsResponse is the response type for the Query/Authorizations RPC method."
    },
    "cosmos.bank.v1beta1.DenomOwner": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "address defines the address that owns a particular denomination."
        },
        "balance": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
          "description": "balance is the balance of the denominated coin for an account."
        }
      },
      "description": "DenomOwner defines structure representing an account that owns or holds a\nparticular denominated token. It contains the account address and account\nbalance of the denominated token.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.bank.v1beta1.DenomUnit": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string",
          "description": "denom represents the string name of the given denom unit (e.g uatom)."
        },
        "exponent": {
          "type": "integer",
          "format": "int64",
          "description": "exponent represents power of 10 exponent that one must\nraise the base_denom to in order to equal the given DenomUnit's denom\n1 denom = 10^exponent base_denom\n(e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with\nexponent = 6, thus: 1 atom = 10^6 uatom)."
        },
        "aliases": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "aliases is a list of string aliases for the given denom"
        }
      },
      "description": "DenomUnit represents a struct that describes a given\ndenomination unit of the basic token."
    },
    "cosmos.bank.v1beta1.Metadata": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "denom_units": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.bank.v1beta1.DenomUnit"
          },
          "title": "denom_units represents the list of DenomUnit's for a given coin"
        },
        "base": {
          "type": "string",
          "description": "base represents the base denom (should be the DenomUnit with exponent = 0)."
        },
        "display": {
          "type": "string",
          "description": "display indicates the suggested denom that should be\ndisplayed in clients."
        },
        "name": {
          "type": "string",
          "description": "Since: cosmos-sdk 0.43",
          "title": "name defines the name of the token (eg: Cosmos Atom)"
        },
        "symbol": {
          "type": "string",
          "description": "symbol is the token symbol usually shown on exchanges (eg: ATOM). This can\nbe the same as the display.\n\nSince: cosmos-sdk 0.43"
        },
        "uri": {
          "type": "string",
          "description": "URI to a document (on or off-chain) that contains additional information. Optional.\n\nSince: cosmos-sdk 0.46"
        },
        "uri_hash": {
          "type": "string",
          "description": "URIHash is a sha256 hash of a document pointed by URI. It's used to verify that\nthe document didn't change. Optional.\n\nSince: cosmos-sdk 0.46"
        }
      },
      "description": "Metadata represents a struct that describes\na basic token."
    },
    "cosmos.bank.v1beta1.Params": {
      "type": "object",
      "properties": {
        "send_enabled": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.bank.v1beta1.SendEnabled"
          },
          "description": "Deprecated: Use of SendEnabled in params is deprecated.\nFor genesis, use the newly added send_enabled field in the genesis object.\nStorage, lookup, and manipulation of this information is now in the keeper.\n\nAs of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files."
        },
        "default_send_enabled": {
          "type": "boolean"
        }
      },
      "description": "Params defines the parameters for the bank module."
    },
    "cosmos.bank.v1beta1.QueryAllBalancesResponse": {
      "type": "object",
      "properties": {
        "balances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "balances is the balances of all the coins."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryAllBalancesResponse is the response type for the Query/AllBalances RPC\nmethod."
    },
    "cosmos.bank.v1beta1.QueryBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
          "description": "balance is the balance of the coin."
        }
      },
      "description": "QueryBalanceResponse is the response type for the Query/Balance RPC method."
    },
    "cosmos.bank.v1beta1.QueryDenomMetadataResponse": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/cosmos.bank.v1beta1.Metadata",
          "description": "metadata describes and provides all the client information for the requested token."
        }
      },
      "description": "QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC\nmethod."
    },
    "cosmos.bank.v1beta1.QueryDenomOwnersResponse": {
      "type": "object",
      "properties": {
        "denom_owners": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.bank.v1beta1.DenomOwner"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC query.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.bank.v1beta1.QueryDenomsMetadataResponse": {
      "type": "object",
      "properties": {
        "metadatas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.bank.v1beta1.Metadata"
          },
          "description": "metadata provides the client information for all the registered tokens."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC\nmethod."
    },
    "cosmos.bank.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/cosmos.bank.v1beta1.Params"
        }
      },
      "description": "QueryParamsResponse defines the response type for querying x/bank parameters."
    },
    "cosmos.bank.v1beta1.QuerySendEnabledResponse": {
      "type": "object",
      "properties": {
        "send_enabled": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.bank.v1beta1.SendEnabled"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response. This field is only\npopulated if the denoms field in the request is empty."
        }
      },
      "description": "QuerySendEnabledResponse defines the RPC response of a SendEnable query.\n\nSince: cosmos-sdk 0.47"
    },
    "cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
          "description": "balance is the balance of the coin."
        }
      },
      "description": "QuerySpendableBalanceByDenomResponse defines the gRPC response structure for\nquerying an account's spendable balance for a specific denom.\n\nSince: cosmos-sdk 0.47"
    },
    "cosmos.bank.v1beta1.QuerySpendableBalancesResponse": {
      "type": "object",
      "properties": {
        "balances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "balances is the spendable balances of all the coins."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QuerySpendableBalancesResponse defines the gRPC response structure for querying\nan account's spendable balances.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.bank.v1beta1.QuerySupplyOfResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
          "description": "amount is the supply of the coin."
        }
      },
      "description": "QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC method."
    },
    "cosmos.bank.v1beta1.QueryTotalSupplyResponse": {
      "type": "object",
      "properties": {
        "supply": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "supply is the supply of the coins"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "title": "QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC\nmethod"
    },
    "cosmos.bank.v1beta1.SendEnabled": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      },
      "description": "SendEnabled maps coin denom to a send_enabled status (whether a denom is\nsendable)."
    },
    "cosmos.base.abci.v1beta1.ABCIMessageLog": {
      "type": "object",
      "properties": {
        "msg_index": {
          "type": "integer",
          "format": "int64"
        },
        "log": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.abci.v1beta1.StringEvent"
          },
          "description": "Events contains a slice of Event objects that were emitted during some\nexecution."
        }
      },
      "description": "ABCIMessageLog defines a structure containing an indexed tx ABCI message log."
    },
    "cosmos.base.abci.v1beta1.Attribute": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "description": "Attribute defines an attribute wrapper where the key and value are\nstrings instead of raw bytes."
    },
    "cosmos.base.abci.v1beta1.GasInfo": {
      "type": "object",
      "properties": {
        "gas_wanted": {
          "type": "string",
          "format": "uint64",
          "description": "GasWanted is the maximum units of work we allow this tx to perform."
        },
        "gas_used": {
          "type": "string",
          "format": "uint64",
          "description": "GasUsed is the amount of gas actually consumed."
        }
      },
      "description": "GasInfo defines tx execution gas context."
    },
    "cosmos.base.abci.v1beta1.Result": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte",
          "description": "Data is any data returned from message or handler execution. It MUST be\nlength prefixed in order to separate data from multiple message executions.\nDeprecated. This field is still populated, but prefer msg_response instead\nbecause it also contains the Msg response typeURL."
        },
        "log": {
          "type": "string",
          "description": "Log contains the log information from message or handler execution."
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tendermint.abci.Event"
          },
          "description": "Events contains a slice of Event objects that were emitted during message\nor handler execution."
        },
        "msg_responses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "msg_responses contains the Msg handler responses type packed in Anys.\n\nSince: cosmos-sdk 0.46"
        }
      },
      "description": "Result is the union of ResponseFormat and ResponseCheckTx."
    },
    "cosmos.base.abci.v1beta1.StringEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.abci.v1beta1.Attribute"
          }
        }
      },
      "description": "StringEvent defines en Event object wrapper where all the attributes\ncontain key/value pairs that are strings instead of raw bytes."
    },
    "cosmos.base.abci.v1beta1.TxResponse": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "int64",
          "title": "The block height"
        },
        "txhash": {
          "type": "string",
          "description": "The transaction hash."
        },
        "codespace": {
          "type": "string",
          "title": "Namespace for the Code"
        },
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "Response code."
        },
        "data": {
          "type": "string",
          "description": "Result bytes, if any."
        },
        "raw_log": {
          "type": "string",
          "description": "The output of the application's logger (raw string). May be\nnon-deterministic."
        },
        "logs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.abci.v1beta1.ABCIMessageLog"
          },
          "description": "The output of the application's logger (typed). May be non-deterministic."
        },
        "info": {
          "type": "string",
          "description": "Additional information. May be non-deterministic."
        },
        "gas_wanted": {
          "type": "string",
          "format": "int64",
          "description": "Amount of gas requested for transaction."
        },
        "gas_used": {
          "type": "string",
          "format": "int64",
          "description": "Amount of gas consumed by transaction."
        },
        "tx": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "The request transaction bytes."
        },
        "timestamp": {
          "type": "string",
          "description": "Time of the previous block. For heights \u003e 1, it's the weighted median of\nthe timestamps of the valid votes in the block.LastCommit. For height == 1,\nit's genesis time."
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tendermint.abci.Event"
          },
          "description": "Events defines all the events emitted by processing a transaction. Note,\nthese events include those emitted by processing all the messages and those\nemitted from the ante. Whereas Logs contains the events, with\nadditional metadata, emitted only by processing the messages.\n\nSince: cosmos-sdk 0.42.11, 0.44.5, 0.45"
        }
      },
      "description": "TxResponse defines a structure containing relevant tx data and metadata. The\ntags are stringified and the log is JSON decoded."
    },
    "cosmos.base.node.v1beta1.ConfigResponse": {
      "type": "object",
      "properties": {
        "minimum_gas_price": {
          "type": "string"
        }
      },
      "description": "ConfigResponse defines the response structure for the Config gRPC query."
    },
    "cosmos.base.query.v1beta1.PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "count_total": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "cosmos.base.query.v1beta1.PageResponse": {
      "type": "object",
      "properties": {
        "next_key": {
          "type": "string",
          "format": "byte",
          "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    },
    "cosmos.base.tendermint.v1beta1.ABCIQueryResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "log": {
          "type": "string",
          "title": "nondeterministic"
        },
        "info": {
          "type": "string",
          "title": "nondeterministic"
        },
        "index": {
          "type": "string",
          "format": "int64"
        },
        "key": {
          "type": "string",
          "format": "byte"
        },
        "value": {
          "type": "string",
          "format": "byte"
        },
        "proof_ops": {
          "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.ProofOps"
        },
        "height": {
          "type": "string",
          "format": "int64"
        },
        "codespace": {
          "type": "string"
        }
      },
      "description": "ABCIQueryResponse defines the response structure for the ABCIQuery gRPC query.\n\nNote: This type is a duplicate of the ResponseQuery proto type defined in\nTendermint."
    },
    "cosmos.base.tendermint.v1beta1.Block": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.Header"
        },
        "data": {
          "$ref": "#/definitions/tendermint.types.Data"
        },
        "evidence": {
          "$ref": "#/definitions/tendermint.types.EvidenceList"
        },
        "last_commit": {
          "$ref": "#/definitions/tendermint.types.Commit"
        }
      },
      "description": "Block is tendermint type Block, with the Header proposer address\nfield converted to bech32 string."
    },
    "cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse": {
      "type": "object",
      "properties": {
        "block_id": {
          "$ref": "#/definitions/tendermint.types.BlockID"
        },
        "block": {
          "$ref": "#/definitions/tendermint.types.Block",
          "title": "Deprecated: please use `sdk_block` instead"
        },
        "sdk_block": {
          "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.Block",
          "title": "Since: cosmos-sdk 0.47"
        }
      },
      "description": "GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight RPC method."
    },
    "cosmos.base.tendermint.v1beta1.GetLatestBlockResponse": {
      "type": "object",
      "properties": {
        "block_id": {
          "$ref": "#/definitions/tendermint.types.BlockID"
        },
        "block": {
          "$ref": "#/definitions/tendermint.types.Block",
          "title": "Deprecated: please use `sdk_block` instead"
        },
        "sdk_block": {
          "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.Block",
          "title": "Since: cosmos-sdk 0.47"
        }
      },
      "description": "GetLatestBlockResponse is the response type for the Query/GetLatestBlock RPC method."
    },
    "cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse": {
      "type": "object",
      "properties": {
        "block_height": {
          "type": "string",
          "format": "int64"
        },
        "validators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.Validator"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines an pagination for the response."
        }
      },
      "description": "GetLatestValidatorSetResponse is the response type for the Query/GetValidatorSetByHeight RPC method."
    },
    "cosmos.base.tendermint.v1beta1.GetNodeInfoResponse": {
      "type": "object",
      "properties": {
        "default_node_info": {
          "$ref": "#/definitions/tendermint.p2p.DefaultNodeInfo"
        },
        "application_version": {
          "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.VersionInfo"
        }
      },
      "description": "GetNodeInfoResponse is the response type for the Query/GetNodeInfo RPC method."
    },
    "cosmos.base.tendermint.v1beta1.GetSyncingResponse": {
      "type": "object",
      "properties": {
        "syncing": {
          "type": "boolean"
        }
      },
      "description": "GetSyncingResponse is the response type for the Query/GetSyncing RPC method."
    },
    "cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse": {
      "type": "object",
      "properties": {
        "block_height": {
          "type": "string",
          "format": "int64"
        },
        "validators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.Validator"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines an pagination for the response."
        }
      },
      "description": "GetValidatorSetByHeightResponse is the response type for the Query/GetValidatorSetByHeight RPC method."
    },
    "cosmos.base.tendermint.v1beta1.Header": {
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/tendermint.version.Consensus",
          "title": "basic block info"
        },
        "chain_id": {
          "type": "string"
        },
        "height": {
          "type": "string",
          "format": "int64"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "last_block_id": {
          "$ref": "#/definitions/tendermint.types.BlockID",
          "title": "prev block info"
        },
        "last_commit_hash": {
          "type": "string",
          "format": "byte",
          "description": "commit from validators from the last block",
          "title": "hashes of block data"
        },
        "data_hash": {
          "type": "string",
          "format": "byte",
          "title": "transactions"
        },
        "validators_hash": {
          "type": "string",
          "format": "byte",
          "description": "validators for the current block",
          "title": "hashes from the app output from the prev block"
        },
        "next_validators_hash": {
          "type": "string",
          "format": "byte",
          "title": "validators for the next block"
        },
        "consensus_hash": {
          "type": "string",
          "format": "byte",
          "title": "consensus params for current block"
        },
        "app_hash": {
          "type": "string",
          "format": "byte",
          "title": "state after txs from the previous block"
        },
        "last_results_hash": {
          "type": "string",
          "format": "byte",
          "title": "root hash of all results from the txs from the previous block"
        },
        "evidence_hash": {
          "type": "string",
          "format": "byte",
          "description": "evidence included in the block",
          "title": "consensus info"
        },
        "proposer_address": {
          "type": "string",
          "description": "proposer_address is the original block proposer address, formatted as a Bech32 string.\nIn Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string\nfor better UX.\n\noriginal proposer of the block"
        }
      },
      "description": "Header defines the structure of a Tendermint block header."
    },
    "cosmos.base.tendermint.v1beta1.Module": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "module path"
        },
        "version": {
          "type": "string",
          "title": "module version"
        },
        "sum": {
          "type": "string",
          "title": "checksum"
        }
      },
      "title": "Module is the type for VersionInfo"
    },
    "cosmos.base.tendermint.v1beta1.ProofOp": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "key": {
          "type": "string",
          "format": "byte"
        },
        "data": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "ProofOp defines an operation used for calculating Merkle root. The data could\nbe arbitrary format, providing necessary data for example neighbouring node\nhash.\n\nNote: This type is a duplicate of the ProofOp proto type defined in Tendermint."
    },
    "cosmos.base.tendermint.v1beta1.ProofOps": {
      "type": "object",
      "properties": {
        "ops": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.ProofOp"
          }
        }
      },
      "description": "ProofOps is Merkle proof defined by the list of ProofOps.\n\nNote: This type is a duplicate of the ProofOps proto type defined in Tendermint."
    },
    "cosmos.base.tendermint.v1beta1.Validator": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "pub_key": {
          "$ref": "#/definitions/google.protobuf.Any"
        },
        "voting_power": {
          "type": "string",
          "format": "int64"
        },
        "proposer_priority": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Validator is the type for the validator-set."
    },
    "cosmos.base.tendermint.v1beta1.VersionInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "app_name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "git_commit": {
          "type": "string"
        },
        "build_tags": {
          "type": "string"
        },
        "go_version": {
          "type": "string"
        },
        "build_deps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.Module"
          }
        },
        "cosmos_sdk_version": {
          "type": "string",
          "title": "Since: cosmos-sdk 0.43"
        }
      },
      "description": "VersionInfo is the type for the GetNodeInfoResponse message."
    },
    "cosmos.base.v1beta1.Coin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
    },
    "cosmos.base.v1beta1.DecCoin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "DecCoin defines a token with a denomination and a decimal amount.\n\nNOTE: The amount field is an Dec which implements the custom method\nsignatures required by gogoproto."
    },
    "cosmos.consensus.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/tendermint.types.ConsensusParams",
          "description": "params are the tendermint consensus params stored in the consensus module.\nPlease note that `params.version` is not populated in this response, it is\ntracked separately in the x/upgrade module."
        }
      },
      "description": "QueryParamsResponse defines the response type for querying x/consensus parameters."
    },
    "cosmos.crypto.multisig.v1beta1.CompactBitArray": {
      "type": "object",
      "properties": {
        "extra_bits_stored": {
          "type": "integer",
          "format": "int64"
        },
        "elems": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "CompactBitArray is an implementation of a space efficient bit array.\nThis is used to ensure that the encoded data takes up a minimal amount of\nspace after proto encoding.\nThis is not thread safe, and is not intended for concurrent usage."
    },
    "cosmos.distribution.v1beta1.DelegationDelegatorReward": {
      "type": "object",
      "properties": {
        "validator_address": {
          "type": "string"
        },
        "reward": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          }
        }
      },
      "description": "DelegationDelegatorReward represents the properties\nof a delegator's delegation reward."
    },
    "cosmos.distribution.v1beta1.Params": {
      "type": "object",
      "properties": {
        "community_tax": {
          "type": "string"
        },
        "base_proposer_reward": {
          "type": "string",
          "description": "Deprecated: The base_proposer_reward field is deprecated and is no longer used\nin the x/distribution module's reward mechanism."
        },
        "bonus_proposer_reward": {
          "type": "string",
          "description": "Deprecated: The bonus_proposer_reward field is deprecated and is no longer used\nin the x/distribution module's reward mechanism."
        },
        "withdraw_addr_enabled": {
          "type": "boolean"
        }
      },
      "description": "Params defines the set of params for the distribution module."
    },
    "cosmos.distribution.v1beta1.QueryCommunityPoolResponse": {
      "type": "object",
      "properties": {
        "pool": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          },
          "description": "pool defines community pool's coins."
        }
      },
      "description": "QueryCommunityPoolResponse is the response type for the Query/CommunityPool\nRPC method."
    },
    "cosmos.distribution.v1beta1.QueryDelegationRewardsResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          },
          "description": "rewards defines the rewards accrued by a delegation."
        }
      },
      "description": "QueryDelegationRewardsResponse is the response type for the\nQuery/DelegationRewards RPC method."
    },
    "cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.distribution.v1beta1.DelegationDelegatorReward"
          },
          "description": "rewards defines all the rewards accrued by a delegator."
        },
        "total": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          },
          "description": "total defines the sum of all the rewards."
        }
      },
      "description": "QueryDelegationTotalRewardsResponse is the response type for the\nQuery/DelegationTotalRewards RPC method."
    },
    "cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse": {
      "type": "object",
      "properties": {
        "validators": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "validators defines the validators a delegator is delegating for."
        }
      },
      "description": "QueryDelegatorValidatorsResponse is the response type for the\nQuery/DelegatorValidators RPC method."
    },
    "cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse": {
      "type": "object",
      "properties": {
        "withdraw_address": {
          "type": "string",
          "description": "withdraw_address defines the delegator address to query for."
        }
      },
      "description": "QueryDelegatorWithdrawAddressResponse is the response type for the\nQuery/DelegatorWithdrawAddress RPC method."
    },
    "cosmos.distribution.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/cosmos.distribution.v1beta1.Params",
          "description": "params defines the parameters of the module."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "cosmos.distribution.v1beta1.QueryValidatorCommissionResponse": {
      "type": "object",
      "properties": {
        "commission": {
          "$ref": "#/definitions/cosmos.distribution.v1beta1.ValidatorAccumulatedCommission",
          "description": "commission defines the commission the validator received."
        }
      },
      "title": "QueryValidatorCommissionResponse is the response type for the\nQuery/ValidatorCommission RPC method"
    },
    "cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse": {
      "type": "object",
      "properties": {
        "operator_address": {
          "type": "string",
          "description": "operator_address defines the validator operator address."
        },
        "self_bond_rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          },
          "description": "self_bond_rewards defines the self delegations rewards."
        },
        "commission": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          },
          "description": "commission defines the commission the validator received."
        }
      },
      "description": "QueryValidatorDistributionInfoResponse is the response type for the Query/ValidatorDistributionInfo RPC method."
    },
    "cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "$ref": "#/definitions/cosmos.distribution.v1beta1.ValidatorOutstandingRewards"
        }
      },
      "description": "QueryValidatorOutstandingRewardsResponse is the response type for the\nQuery/ValidatorOutstandingRewards RPC method."
    },
    "cosmos.distribution.v1beta1.QueryValidatorSlashesResponse": {
      "type": "object",
      "properties": {
        "slashes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.distribution.v1beta1.ValidatorSlashEvent"
          },
          "description": "slashes defines the slashes the validator received."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryValidatorSlashesResponse is the response type for the\nQuery/ValidatorSlashes RPC method."
    },
    "cosmos.distribution.v1beta1.ValidatorAccumulatedCommission": {
      "type": "object",
      "properties": {
        "commission": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          }
        }
      },
      "description": "ValidatorAccumulatedCommission represents accumulated commission\nfor a validator kept as a running counter, can be withdrawn at any time."
    },
    "cosmos.distribution.v1beta1.ValidatorOutstandingRewards": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          }
        }
      },
      "description": "ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards\nfor a validator inexpensive to track, allows simple sanity checks."
    },
    "cosmos.distribution.v1beta1.ValidatorSlashEvent": {
      "type": "object",
      "properties": {
        "validator_period": {
          "type": "string",
          "format": "uint64"
        },
        "fraction": {
          "type": "string"
        }
      },
      "description": "ValidatorSlashEvent represents a validator slash event.\nHeight is implicit within the store key.\nThis is needed to calculate appropriate amount of staking tokens\nfor delegations which are withdrawn after a slash has occurred."
    },
    "cosmos.evidence.v1beta1.QueryAllEvidenceResponse": {
      "type": "object",
      "properties": {
        "evidence": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "evidence returns all evidences."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC\nmethod."
    },
    "cosmos.evidence.v1beta1.QueryEvidenceResponse": {
      "type": "object",
      "properties": {
        "evidence": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "evidence returns the requested evidence."
        }
      },
      "description": "QueryEvidenceResponse is the response type for the Query/Evidence RPC method."
    },
    "cosmos.feegrant.v1beta1.Grant": {
      "type": "object",
      "properties": {
        "granter": {
          "type": "string",
          "description": "granter is the address of the user granting an allowance of their funds."
        },
        "grantee": {
          "type": "string",
          "description": "grantee is the address of the user being granted an allowance of another user's funds."
        },
        "allowance": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "allowance can be any of basic, periodic, allowed fee allowance."
        }
      },
      "title": "Grant is stored in the KVStore to record a grant with full context"
    },
    "cosmos.feegrant.v1beta1.QueryAllowanceResponse": {
      "type": "object",
      "properties": {
        "allowance": {
          "$ref": "#/definitions/cosmos.feegrant.v1beta1.Grant",
          "description": "allowance is a allowance granted for grantee by granter."
        }
      },
      "description": "QueryAllowanceResponse is the response type for the Query/Allowance RPC method."
    },
    "cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse": {
      "type": "object",
      "properties": {
        "allowances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.feegrant.v1beta1.Grant"
          },
          "description": "allowances that have been issued by the granter."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines an pagination for the response."
        }
      },
      "description": "QueryAllowancesByGranterResponse is the response type for the Query/AllowancesByGranter RPC method.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.feegrant.v1beta1.QueryAllowancesResponse": {
      "type": "object",
      "properties": {
        "allowances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.feegrant.v1beta1.Grant"
          },
          "description": "allowances are allowance's granted for grantee by granter."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines an pagination for the response."
        }
      },
      "description": "QueryAllowancesResponse is the response type for the Query/Allowances RPC method."
    },
    "cosmos.gov.v1.Deposit": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal_id defines the unique id of the proposal."
        },
        "depositor": {
          "type": "string",
          "description": "depositor defines the deposit addresses from the proposals."
        },
        "amount": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "amount to be deposited by depositor."
        }
      },
      "description": "Deposit defines an amount deposited by an account address to an active\nproposal."
    },
    "cosmos.gov.v1.DepositParams": {
      "type": "object",
      "properties": {
        "min_deposit": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "Minimum deposit for a proposal to enter voting period."
        },
        "max_deposit_period": {
          "type": "string",
          "description": "Maximum period for Atom holders to deposit on a proposal. Initial value: 2\nmonths."
        }
      },
      "description": "DepositParams defines the params for deposits on governance proposals."
    },
    "cosmos.gov.v1.Params": {
      "type": "object",
      "properties": {
        "min_deposit": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "Minimum deposit for a proposal to enter voting period."
        },
        "max_deposit_period": {
          "type": "string",
          "description": "Maximum period for Atom holders to deposit on a proposal. Initial value: 2\nmonths."
        },
        "voting_period": {
          "type": "string",
          "description": "Duration of the voting period."
        },
        "quorum": {
          "type": "string",
          "description": "Minimum percentage of total stake needed to vote for a result to be\n considered valid."
        },
        "threshold": {
          "type": "string",
          "description": "Minimum proportion of Yes votes for proposal to pass. Default value: 0.5."
        },
        "veto_threshold": {
          "type": "string",
          "description": "Minimum value of Veto votes to Total votes ratio for proposal to be\n vetoed. Default value: 1/3."
        },
        "min_initial_deposit_ratio": {
          "type": "string",
          "description": "The ratio representing the proportion of the deposit value that must be paid at proposal submission."
        },
        "burn_vote_quorum": {
          "type": "boolean",
          "title": "burn deposits if a proposal does not meet quorum"
        },
        "burn_proposal_deposit_prevote": {
          "type": "boolean",
          "title": "burn deposits if the proposal does not enter voting period"
        },
        "burn_vote_veto": {
          "type": "boolean",
          "title": "burn deposits if quorum with vote type no_veto is met"
        }
      },
      "description": "Params defines the parameters for the x/gov module.\n\nSince: cosmos-sdk 0.47"
    },
    "cosmos.gov.v1.Proposal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "description": "id defines the unique id of the proposal."
        },
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "messages are the arbitrary messages to be executed if the proposal passes."
        },
        "status": {
          "$ref": "#/definitions/cosmos.gov.v1.ProposalStatus",
          "description": "status defines the proposal status."
        },
        "final_tally_result": {
          "$ref": "#/definitions/cosmos.gov.v1.TallyResult",
          "description": "final_tally_result is the final tally result of the proposal. When\nquerying a proposal via gRPC, this field is not populated until the\nproposal's voting period has ended."
        },
        "submit_time": {
          "type": "string",
          "format": "date-time",
          "description": "submit_time is the time of proposal submission."
        },
        "deposit_end_time": {
          "type": "string",
          "format": "date-time",
          "description": "deposit_end_time is the end time for deposition."
        },
        "total_deposit": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "total_deposit is the total deposit on the proposal."
        },
        "voting_start_time": {
          "type": "string",
          "format": "date-time",
          "description": "voting_start_time is the starting time to vote on a proposal."
        },
        "voting_end_time": {
          "type": "string",
          "format": "date-time",
          "description": "voting_end_time is the end time of voting on a proposal."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata attached to the proposal."
        },
        "title": {
          "type": "string",
          "description": "Since: cosmos-sdk 0.47",
          "title": "title is the title of the proposal"
        },
        "summary": {
          "type": "string",
          "description": "Since: cosmos-sdk 0.47",
          "title": "summary is a short summary of the proposal"
        },
        "proposer": {
          "type": "string",
          "description": "Since: cosmos-sdk 0.47",
          "title": "Proposer is the address of the proposal sumbitter"
        }
      },
      "description": "Proposal defines the core field members of a governance proposal."
    },
    "cosmos.gov.v1.ProposalStatus": {
      "type": "string",
      "enum": [
        "PROPOSAL_STATUS_UNSPECIFIED",
        "PROPOSAL_STATUS_DEPOSIT_PERIOD",
        "PROPOSAL_STATUS_VOTING_PERIOD",
        "PROPOSAL_STATUS_PASSED",
        "PROPOSAL_STATUS_REJECTED",
        "PROPOSAL_STATUS_FAILED"
      ],
      "default": "PROPOSAL_STATUS_UNSPECIFIED",
      "description": "ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed."
    },
    "cosmos.gov.v1.QueryDepositResponse": {
      "type": "object",
      "properties": {
        "deposit": {
          "$ref": "#/definitions/cosmos.gov.v1.Deposit",
          "description": "deposit defines the requested deposit."
        }
      },
      "description": "QueryDepositResponse is the response type for the Query/Deposit RPC method."
    },
    "cosmos.gov.v1.QueryDepositsResponse": {
      "type": "object",
      "properties": {
        "deposits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.gov.v1.Deposit"
          },
          "description": "deposits defines the requested deposits."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryDepositsResponse is the response type for the Query/Deposits RPC method."
    },
    "cosmos.gov.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "voting_params": {
          "$ref": "#/definitions/cosmos.gov.v1.VotingParams",
          "description": "Deprecated: Prefer to use `params` instead.\nvoting_params defines the parameters related to voting."
        },
        "deposit_params": {
          "$ref": "#/definitions/cosmos.gov.v1.DepositParams",
          "description": "Deprecated: Prefer to use `params` instead.\ndeposit_params defines the parameters related to deposit."
        },
        "tally_params": {
          "$ref": "#/definitions/cosmos.gov.v1.TallyParams",
          "description": "Deprecated: Prefer to use `params` instead.\ntally_params defines the parameters related to tally."
        },
        "params": {
          "$ref": "#/definitions/cosmos.gov.v1.Params",
          "description": "params defines all the paramaters of x/gov module.\n\nSince: cosmos-sdk 0.47"
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "cosmos.gov.v1.QueryProposalResponse": {
      "type": "object",
      "properties": {
        "proposal": {
          "$ref": "#/definitions/cosmos.gov.v1.Proposal",
          "description": "proposal is the requested governance proposal."
        }
      },
      "description": "QueryProposalResponse is the response type for the Query/Proposal RPC method."
    },
    "cosmos.gov.v1.QueryProposalsResponse": {
      "type": "object",
      "properties": {
        "proposals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.gov.v1.Proposal"
          },
          "description": "proposals defines all the requested governance proposals."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryProposalsResponse is the response type for the Query/Proposals RPC\nmethod."
    },
    "cosmos.gov.v1.QueryTallyResultResponse": {
      "type": "object",
      "properties": {
        "tally": {
          "$ref": "#/definitions/cosmos.gov.v1.TallyResult",
          "description": "tally defines the requested tally."
        }
      },
      "description": "QueryTallyResultResponse is the response type for the Query/Tally RPC method."
    },
    "cosmos.gov.v1.QueryVoteResponse": {
      "type": "object",
      "properties": {
        "vote": {
          "$ref": "#/definitions/cosmos.gov.v1.Vote",
          "description": "vote defines the queried vote."
        }
      },
      "description": "QueryVoteResponse is the response type for the Query/Vote RPC method."
    },
    "cosmos.gov.v1.QueryVotesResponse": {
      "type": "object",
      "properties": {
        "votes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.gov.v1.Vote"
          },
          "description": "votes defines the queried votes."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryVotesResponse is the response type for the Query/Votes RPC method."
    },
    "cosmos.gov.v1.TallyParams": {
      "type": "object",
      "properties": {
        "quorum": {
          "type": "string",
          "description": "Minimum percentage of total stake needed to vote for a result to be\nconsidered valid."
        },
        "threshold": {
          "type": "string",
          "description": "Minimum proportion of Yes votes for proposal to pass. Default value: 0.5."
        },
        "veto_threshold": {
          "type": "string",
          "description": "Minimum value of Veto votes to Total votes ratio for proposal to be\nvetoed. Default value: 1/3."
        }
      },
      "description": "TallyParams defines the params for tallying votes on governance proposals."
    },
    "cosmos.gov.v1.TallyResult": {
      "type": "object",
      "properties": {
        "yes_count": {
          "type": "string",
          "description": "yes_count is the number of yes votes on a proposal."
        },
        "abstain_count": {
          "type": "string",
          "description": "abstain_count is the number of abstain votes on a proposal."
        },
        "no_count": {
          "type": "string",
          "description": "no_count is the number of no votes on a proposal."
        },
        "no_with_veto_count": {
          "type": "string",
          "description": "no_with_veto_count is the number of no with veto votes on a proposal."
        }
      },
      "description": "TallyResult defines a standard tally for a governance proposal."
    },
    "cosmos.gov.v1.Vote": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal_id defines the unique id of the proposal."
        },
        "voter": {
          "type": "string",
          "description": "voter is the voter address of the proposal."
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.gov.v1.WeightedVoteOption"
          },
          "description": "options is the weighted vote options."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any  arbitrary metadata to attached to the vote."
        }
      },
      "description": "Vote defines a vote on a governance proposal.\nA Vote consists of a proposal ID, the voter, and the vote option."
    },
    "cosmos.gov.v1.VoteOption": {
      "type": "string",
      "enum": [
        "VOTE_OPTION_UNSPECIFIED",
        "VOTE_OPTION_YES",
        "VOTE_OPTION_ABSTAIN",
        "VOTE_OPTION_NO",
        "VOTE_OPTION_NO_WITH_VETO"
      ],
      "default": "VOTE_OPTION_UNSPECIFIED",
      "description": "VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option."
    },
    "cosmos.gov.v1.VotingParams": {
      "type": "object",
      "properties": {
        "voting_period": {
          "type": "string",
          "description": "Duration of the voting period."
        }
      },
      "description": "VotingParams defines the params for voting on governance proposals."
    },
    "cosmos.gov.v1.WeightedVoteOption": {
      "type": "object",
      "properties": {
        "option": {
          "$ref": "#/definitions/cosmos.gov.v1.VoteOption",
          "description": "option defines the valid vote options, it must not contain duplicate vote options."
        },
        "weight": {
          "type": "string",
          "description": "weight is the vote weight associated with the vote option."
        }
      },
      "description": "WeightedVoteOption defines a unit of vote for vote split."
    },
    "cosmos.gov.v1beta1.Deposit": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal_id defines the unique id of the proposal."
        },
        "depositor": {
          "type": "string",
          "description": "depositor defines the deposit addresses from the proposals."
        },
        "amount": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "amount to be deposited by depositor."
        }
      },
      "description": "Deposit defines an amount deposited by an account address to an active\nproposal."
    },
    "cosmos.gov.v1beta1.DepositParams": {
      "type": "object",
      "properties": {
        "min_deposit": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "Minimum deposit for a proposal to enter voting period."
        },
        "max_deposit_period": {
          "type": "string",
          "description": "Maximum period for Atom holders to deposit on a proposal. Initial value: 2\nmonths."
        }
      },
      "description": "DepositParams defines the params for deposits on governance proposals."
    },
    "cosmos.gov.v1beta1.Proposal": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal_id defines the unique id of the proposal."
        },
        "content": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "content is the proposal's content."
        },
        "status": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.ProposalStatus",
          "description": "status defines the proposal status."
        },
        "final_tally_result": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.TallyResult",
          "description": "final_tally_result is the final tally result of the proposal. When\nquerying a proposal via gRPC, this field is not populated until the\nproposal's voting period has ended."
        },
        "submit_time": {
          "type": "string",
          "format": "date-time",
          "description": "submit_time is the time of proposal submission."
        },
        "deposit_end_time": {
          "type": "string",
          "format": "date-time",
          "description": "deposit_end_time is the end time for deposition."
        },
        "total_deposit": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "total_deposit is the total deposit on the proposal."
        },
        "voting_start_time": {
          "type": "string",
          "format": "date-time",
          "description": "voting_start_time is the starting time to vote on a proposal."
        },
        "voting_end_time": {
          "type": "string",
          "format": "date-time",
          "description": "voting_end_time is the end time of voting on a proposal."
        }
      },
      "description": "Proposal defines the core field members of a governance proposal."
    },
    "cosmos.gov.v1beta1.ProposalStatus": {
      "type": "string",
      "enum": [
        "PROPOSAL_STATUS_UNSPECIFIED",
        "PROPOSAL_STATUS_DEPOSIT_PERIOD",
        "PROPOSAL_STATUS_VOTING_PERIOD",
        "PROPOSAL_STATUS_PASSED",
        "PROPOSAL_STATUS_REJECTED",
        "PROPOSAL_STATUS_FAILED"
      ],
      "default": "PROPOSAL_STATUS_UNSPECIFIED",
      "description": "ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed."
    },
    "cosmos.gov.v1beta1.QueryDepositResponse": {
      "type": "object",
      "properties": {
        "deposit": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.Deposit",
          "description": "deposit defines the requested deposit."
        }
      },
      "description": "QueryDepositResponse is the response type for the Query/Deposit RPC method."
    },
    "cosmos.gov.v1beta1.QueryDepositsResponse": {
      "type": "object",
      "properties": {
        "deposits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.gov.v1beta1.Deposit"
          },
          "description": "deposits defines the requested deposits."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryDepositsResponse is the response type for the Query/Deposits RPC method."
    },
    "cosmos.gov.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "voting_params": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.VotingParams",
          "description": "voting_params defines the parameters related to voting."
        },
        "deposit_params": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.DepositParams",
          "description": "deposit_params defines the parameters related to deposit."
        },
        "tally_params": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.TallyParams",
          "description": "tally_params defines the parameters related to tally."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "cosmos.gov.v1beta1.QueryProposalResponse": {
      "type": "object",
      "properties": {
        "proposal": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.Proposal"
        }
      },
      "description": "QueryProposalResponse is the response type for the Query/Proposal RPC method."
    },
    "cosmos.gov.v1beta1.QueryProposalsResponse": {
      "type": "object",
      "properties": {
        "proposals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.gov.v1beta1.Proposal"
          },
          "description": "proposals defines all the requested governance proposals."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryProposalsResponse is the response type for the Query/Proposals RPC\nmethod."
    },
    "cosmos.gov.v1beta1.QueryTallyResultResponse": {
      "type": "object",
      "properties": {
        "tally": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.TallyResult",
          "description": "tally defines the requested tally."
        }
      },
      "description": "QueryTallyResultResponse is the response type for the Query/Tally RPC method."
    },
    "cosmos.gov.v1beta1.QueryVoteResponse": {
      "type": "object",
      "properties": {
        "vote": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.Vote",
          "description": "vote defines the queried vote."
        }
      },
      "description": "QueryVoteResponse is the response type for the Query/Vote RPC method."
    },
    "cosmos.gov.v1beta1.QueryVotesResponse": {
      "type": "object",
      "properties": {
        "votes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.gov.v1beta1.Vote"
          },
          "description": "votes defines the queried votes."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryVotesResponse is the response type for the Query/Votes RPC method."
    },
    "cosmos.gov.v1beta1.TallyParams": {
      "type": "object",
      "properties": {
        "quorum": {
          "type": "string",
          "format": "byte",
          "description": "Minimum percentage of total stake needed to vote for a result to be\nconsidered valid."
        },
        "threshold": {
          "type": "string",
          "format": "byte",
          "description": "Minimum proportion of Yes votes for proposal to pass. Default value: 0.5."
        },
        "veto_threshold": {
          "type": "string",
          "format": "byte",
          "description": "Minimum value of Veto votes to Total votes ratio for proposal to be\nvetoed. Default value: 1/3."
        }
      },
      "description": "TallyParams defines the params for tallying votes on governance proposals."
    },
    "cosmos.gov.v1beta1.TallyResult": {
      "type": "object",
      "properties": {
        "yes": {
          "type": "string",
          "description": "yes is the number of yes votes on a proposal."
        },
        "abstain": {
          "type": "string",
          "description": "abstain is the number of abstain votes on a proposal."
        },
        "no": {
          "type": "string",
          "description": "no is the number of no votes on a proposal."
        },
        "no_with_veto": {
          "type": "string",
          "description": "no_with_veto is the number of no with veto votes on a proposal."
        }
      },
      "description": "TallyResult defines a standard tally for a governance proposal."
    },
    "cosmos.gov.v1beta1.Vote": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal_id defines the unique id of the proposal."
        },
        "voter": {
          "type": "string",
          "description": "voter is the voter address of the proposal."
        },
        "option": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.VoteOption",
          "description": "Deprecated: Prefer to use `options` instead. This field is set in queries\nif and only if `len(options) == 1` and that option has weight 1. In all\nother cases, this field will default to VOTE_OPTION_UNSPECIFIED."
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.gov.v1beta1.WeightedVoteOption"
          },
          "description": "options is the weighted vote options.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "Vote defines a vote on a governance proposal.\nA Vote consists of a proposal ID, the voter, and the vote option."
    },
    "cosmos.gov.v1beta1.VoteOption": {
      "type": "string",
      "enum": [
        "VOTE_OPTION_UNSPECIFIED",
        "VOTE_OPTION_YES",
        "VOTE_OPTION_ABSTAIN",
        "VOTE_OPTION_NO",
        "VOTE_OPTION_NO_WITH_VETO"
      ],
      "default": "VOTE_OPTION_UNSPECIFIED",
      "description": "VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option."
    },
    "cosmos.gov.v1beta1.VotingParams": {
      "type": "object",
      "properties": {
        "voting_period": {
          "type": "string",
          "description": "Duration of the voting period."
        }
      },
      "description": "VotingParams defines the params for voting on governance proposals."
    },
    "cosmos.gov.v1beta1.WeightedVoteOption": {
      "type": "object",
      "properties": {
        "option": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.VoteOption",
          "description": "option defines the valid vote options, it must not contain duplicate vote options."
        },
        "weight": {
          "type": "string",
          "description": "weight is the vote weight associated with the vote option."
        }
      },
      "description": "WeightedVoteOption defines a unit of vote for vote split.\n\nSince: cosmos-sdk 0.43"
    },
    "cosmos.group.v1.GroupInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "description": "id is the unique ID of the group."
        },
        "admin": {
          "type": "string",
          "description": "admin is the account address of the group's admin."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata to attached to the group."
        },
        "version": {
          "type": "string",
          "format": "uint64",
          "title": "version is used to track changes to a group's membership structure that\nwould break existing proposals. Whenever any members weight is changed,\nor any member is added or removed this version is incremented and will\ncause proposals based on older versions of this group to fail"
        },
        "total_weight": {
          "type": "string",
          "description": "total_weight is the sum of the group members' weights."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "created_at is a timestamp specifying when a group was created."
        }
      },
      "description": "GroupInfo represents the high-level on-chain information for a group."
    },
    "cosmos.group.v1.GroupMember": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "format": "uint64",
          "description": "group_id is the unique ID of the group."
        },
        "member": {
          "$ref": "#/definitions/cosmos.group.v1.Member",
          "description": "member is the member data."
        }
      },
      "description": "GroupMember represents the relationship between a group and a member."
    },
    "cosmos.group.v1.GroupPolicyInfo": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "address is the account address of group policy."
        },
        "group_id": {
          "type": "string",
          "format": "uint64",
          "description": "group_id is the unique ID of the group."
        },
        "admin": {
          "type": "string",
          "description": "admin is the account address of the group admin."
        },
        "metadata": {
          "type": "string",
          "title": "metadata is any arbitrary metadata attached to the group policy.\nthe recommended format of the metadata is to be found here:\nhttps://docs.cosmos.network/v0.47/modules/group#decision-policy-1"
        },
        "version": {
          "type": "string",
          "format": "uint64",
          "description": "version is used to track changes to a group's GroupPolicyInfo structure that\nwould create a different result on a running proposal."
        },
        "decision_policy": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "decision_policy specifies the group policy's decision policy."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "created_at is a timestamp specifying when a group policy was created."
        }
      },
      "description": "GroupPolicyInfo represents the high-level on-chain information for a group policy."
    },
    "cosmos.group.v1.Member": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "address is the member's account address."
        },
        "weight": {
          "type": "string",
          "description": "weight is the member's voting weight that should be greater than 0."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata attached to the member."
        },
        "added_at": {
          "type": "string",
          "format": "date-time",
          "description": "added_at is a timestamp specifying when a member was added."
        }
      },
      "description": "Member represents a group member with an account address,\nnon-zero weight, metadata and added_at timestamp."
    },
    "cosmos.group.v1.Proposal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "description": "id is the unique id of the proposal."
        },
        "group_policy_address": {
          "type": "string",
          "description": "group_policy_address is the account address of group policy."
        },
        "metadata": {
          "type": "string",
          "title": "metadata is any arbitrary metadata attached to the proposal.\nthe recommended format of the metadata is to be found here:\nhttps://docs.cosmos.network/v0.47/modules/group#proposal-4"
        },
        "proposers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "proposers are the account addresses of the proposers."
        },
        "submit_time": {
          "type": "string",
          "format": "date-time",
          "description": "submit_time is a timestamp specifying when a proposal was submitted."
        },
        "group_version": {
          "type": "string",
          "format": "uint64",
          "description": "group_version tracks the version of the group at proposal submission.\nThis field is here for informational purposes only."
        },
        "group_policy_version": {
          "type": "string",
          "format": "uint64",
          "description": "group_policy_version tracks the version of the group policy at proposal submission.\nWhen a decision policy is changed, existing proposals from previous policy\nversions will become invalid with the `ABORTED` status.\nThis field is here for informational purposes only."
        },
        "status": {
          "$ref": "#/definitions/cosmos.group.v1.ProposalStatus",
          "description": "status represents the high level position in the life cycle of the proposal. Initial value is Submitted."
        },
        "final_tally_result": {
          "$ref": "#/definitions/cosmos.group.v1.TallyResult",
          "description": "final_tally_result contains the sums of all weighted votes for this\nproposal for each vote option. It is empty at submission, and only\npopulated after tallying, at voting period end or at proposal execution,\nwhichever happens first."
        },
        "voting_period_end": {
          "type": "string",
          "format": "date-time",
          "description": "voting_period_end is the timestamp before which voting must be done.\nUnless a successful MsgExec is called before (to execute a proposal whose\ntally is successful before the voting period ends), tallying will be done\nat this point, and the `final_tally_result`and `status` fields will be\naccordingly updated."
        },
        "executor_result": {
          "$ref": "#/definitions/cosmos.group.v1.ProposalExecutorResult",
          "description": "executor_result is the final result of the proposal execution. Initial value is NotRun."
        },
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "messages is a list of `sdk.Msg`s that will be executed if the proposal passes."
        },
        "title": {
          "type": "string",
          "description": "Since: cosmos-sdk 0.47",
          "title": "title is the title of the proposal"
        },
        "summary": {
          "type": "string",
          "description": "Since: cosmos-sdk 0.47",
          "title": "summary is a short summary of the proposal"
        }
      },
      "description": "Proposal defines a group proposal. Any member of a group can submit a proposal\nfor a group policy to decide upon.\nA proposal consists of a set of `sdk.Msg`s that will be executed if the proposal\npasses as well as some optional metadata associated with the proposal."
    },
    "cosmos.group.v1.ProposalExecutorResult": {
      "type": "string",
      "enum": [
        "PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED",
        "PROPOSAL_EXECUTOR_RESULT_NOT_RUN",
        "PROPOSAL_EXECUTOR_RESULT_SUCCESS",
        "PROPOSAL_EXECUTOR_RESULT_FAILURE"
      ],
      "default": "PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED",
      "description": "ProposalExecutorResult defines types of proposal executor results.\n\n - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED: An empty value is not allowed.\n - PROPOSAL_EXECUTOR_RESULT_NOT_RUN: We have not yet run the executor.\n - PROPOSAL_EXECUTOR_RESULT_SUCCESS: The executor was successful and proposed action updated state.\n - PROPOSAL_EXECUTOR_RESULT_FAILURE: The executor returned an error and proposed action didn't update state."
    },
    "cosmos.group.v1.ProposalStatus": {
      "type": "string",
      "enum": [
        "PROPOSAL_STATUS_UNSPECIFIED",
        "PROPOSAL_STATUS_SUBMITTED",
        "PROPOSAL_STATUS_ACCEPTED",
        "PROPOSAL_STATUS_REJECTED",
        "PROPOSAL_STATUS_ABORTED",
        "PROPOSAL_STATUS_WITHDRAWN"
      ],
      "default": "PROPOSAL_STATUS_UNSPECIFIED",
      "description": "ProposalStatus defines proposal statuses.\n\n - PROPOSAL_STATUS_UNSPECIFIED: An empty value is invalid and not allowed.\n - PROPOSAL_STATUS_SUBMITTED: Initial status of a proposal when submitted.\n - PROPOSAL_STATUS_ACCEPTED: Final status of a proposal when the final tally is done and the outcome\npasses the group policy's decision policy.\n - PROPOSAL_STATUS_REJECTED: Final status of a proposal when the final tally is done and the outcome\nis rejected by the group policy's decision policy.\n - PROPOSAL_STATUS_ABORTED: Final status of a proposal when the group policy is modified before the\nfinal tally.\n - PROPOSAL_STATUS_WITHDRAWN: A proposal can be withdrawn before the voting start time by the owner.\nWhen this happens the final status is Withdrawn."
    },
    "cosmos.group.v1.QueryGroupInfoResponse": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/cosmos.group.v1.GroupInfo",
          "description": "info is the GroupInfo of the group."
        }
      },
      "description": "QueryGroupInfoResponse is the Query/GroupInfo response type."
    },
    "cosmos.group.v1.QueryGroupMembersResponse": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.group.v1.GroupMember"
          },
          "description": "members are the members of the group with given group_id."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryGroupMembersResponse is the Query/GroupMembersResponse response type."
    },
    "cosmos.group.v1.QueryGroupPoliciesByAdminResponse": {
      "type": "object",
      "properties": {
        "group_policies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.group.v1.GroupPolicyInfo"
          },
          "description": "group_policies are the group policies info with provided admin."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryGroupPoliciesByAdminResponse is the Query/GroupPoliciesByAdmin response type."
    },
    "cosmos.group.v1.QueryGroupPoliciesByGroupResponse": {
      "type": "object",
      "properties": {
        "group_policies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.group.v1.GroupPolicyInfo"
          },
          "description": "group_policies are the group policies info associated with the provided group."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryGroupPoliciesByGroupResponse is the Query/GroupPoliciesByGroup response type."
    },
    "cosmos.group.v1.QueryGroupPolicyInfoResponse": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/cosmos.group.v1.GroupPolicyInfo",
          "description": "info is the GroupPolicyInfo of the group policy."
        }
      },
      "description": "QueryGroupPolicyInfoResponse is the Query/GroupPolicyInfo response type."
    },
    "cosmos.group.v1.QueryGroupsByAdminResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.group.v1.GroupInfo"
          },
          "description": "groups are the groups info with the provided admin."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryGroupsByAdminResponse is the Query/GroupsByAdminResponse response type."
    },
    "cosmos.group.v1.QueryGroupsByMemberResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.group.v1.GroupInfo"
          },
          "description": "groups are the groups info with the provided group member."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryGroupsByMemberResponse is the Query/GroupsByMember response type."
    },
    "cosmos.group.v1.QueryGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.group.v1.GroupInfo"
          },
          "description": "`groups` is all the groups present in state."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryGroupsResponse is the Query/Groups response type.\n\nSince: cosmos-sdk 0.47.1"
    },
    "cosmos.group.v1.QueryProposalResponse": {
      "type": "object",
      "properties": {
        "proposal": {
          "$ref": "#/definitions/cosmos.group.v1.Proposal",
          "description": "proposal is the proposal info."
        }
      },
      "description": "QueryProposalResponse is the Query/Proposal response type."
    },
    "cosmos.group.v1.QueryProposalsByGroupPolicyResponse": {
      "type": "object",
      "properties": {
        "proposals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.group.v1.Proposal"
          },
          "description": "proposals are the proposals with given group policy."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryProposalsByGroupPolicyResponse is the Query/ProposalByGroupPolicy response type."
    },
    "cosmos.group.v1.QueryTallyResultResponse": {
      "type": "object",
      "properties": {
        "tally": {
          "$ref": "#/definitions/cosmos.group.v1.TallyResult",
          "description": "tally defines the requested tally."
        }
      },
      "description": "QueryTallyResultResponse is the Query/TallyResult response type."
    },
    "cosmos.group.v1.QueryVoteByProposalVoterResponse": {
      "type": "object",
      "properties": {
        "vote": {
          "$ref": "#/definitions/cosmos.group.v1.Vote",
          "description": "vote is the vote with given proposal_id and voter."
        }
      },
      "description": "QueryVoteByProposalVoterResponse is the Query/VoteByProposalVoter response type."
    },
    "cosmos.group.v1.QueryVotesByProposalResponse": {
      "type": "object",
      "properties": {
        "votes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.group.v1.Vote"
          },
          "description": "votes are the list of votes for given proposal_id."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryVotesByProposalResponse is the Query/VotesByProposal response type."
    },
    "cosmos.group.v1.QueryVotesByVoterResponse": {
      "type": "object",
      "properties": {
        "votes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.group.v1.Vote"
          },
          "description": "votes are the list of votes by given voter."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryVotesByVoterResponse is the Query/VotesByVoter response type."
    },
    "cosmos.group.v1.TallyResult": {
      "type": "object",
      "properties": {
        "yes_count": {
          "type": "string",
          "description": "yes_count is the weighted sum of yes votes."
        },
        "abstain_count": {
          "type": "string",
          "description": "abstain_count is the weighted sum of abstainers."
        },
        "no_count": {
          "type": "string",
          "description": "no_count is the weighted sum of no votes."
        },
        "no_with_veto_count": {
          "type": "string",
          "description": "no_with_veto_count is the weighted sum of veto."
        }
      },
      "description": "TallyResult represents the sum of weighted votes for each vote option."
    },
    "cosmos.group.v1.Vote": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal is the unique ID of the proposal."
        },
        "voter": {
          "type": "string",
          "description": "voter is the account address of the voter."
        },
        "option": {
          "$ref": "#/definitions/cosmos.group.v1.VoteOption",
          "description": "option is the voter's choice on the proposal."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata attached to the vote."
        },
        "submit_time": {
          "type": "string",
          "format": "date-time",
          "description": "submit_time is the timestamp when the vote was submitted."
        }
      },
      "description": "Vote represents a vote for a proposal."
    },
    "cosmos.group.v1.VoteOption": {
      "type": "string",
      "enum": [
        "VOTE_OPTION_UNSPECIFIED",
        "VOTE_OPTION_YES",
        "VOTE_OPTION_ABSTAIN",
        "VOTE_OPTION_NO",
        "VOTE_OPTION_NO_WITH_VETO"
      ],
      "default": "VOTE_OPTION_UNSPECIFIED",
      "description": "VoteOption enumerates the valid vote options for a given proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines an unspecified vote option which will\nreturn an error.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option."
    },
    "cosmos.mint.v1beta1.Params": {
      "type": "object",
      "properties": {
        "mint_denom": {
          "type": "string",
          "title": "type of coin to mint"
        },
        "inflation_rate_change": {
          "type": "string",
          "title": "maximum annual change in inflation rate"
        },
        "inflation_max": {
          "type": "string",
          "title": "maximum inflation rate"
        },
        "inflation_min": {
          "type": "string",
          "title": "minimum inflation rate"
        },
        "goal_bonded": {
          "type": "string",
          "title": "goal of percent bonded atoms"
        },
        "blocks_per_year": {
          "type": "string",
          "format": "uint64",
          "title": "expected blocks per year"
        }
      },
      "description": "Params defines the parameters for the x/mint module."
    },
    "cosmos.mint.v1beta1.QueryAnnualProvisionsResponse": {
      "type": "object",
      "properties": {
        "annual_provisions": {
          "type": "string",
          "format": "byte",
          "description": "annual_provisions is the current minting annual provisions value."
        }
      },
      "description": "QueryAnnualProvisionsResponse is the response type for the\nQuery/AnnualProvisions RPC method."
    },
    "cosmos.mint.v1beta1.QueryInflationResponse": {
      "type": "object",
      "properties": {
        "inflation": {
          "type": "string",
          "format": "byte",
          "description": "inflation is the current minting inflation value."
        }
      },
      "description": "QueryInflationResponse is the response type for the Query/Inflation RPC\nmethod."
    },
    "cosmos.mint.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/cosmos.mint.v1beta1.Params",
          "description": "params defines the parameters of the module."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "cosmos.nft.v1beta1.Class": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id defines the unique identifier of the NFT classification, similar to the contract address of ERC721"
        },
        "name": {
          "type": "string",
          "title": "name defines the human-readable name of the NFT classification. Optional"
        },
        "symbol": {
          "type": "string",
          "title": "symbol is an abbreviated name for nft classification. Optional"
        },
        "description": {
          "type": "string",
          "title": "description is a brief description of nft classification. Optional"
        },
        "uri": {
          "type": "string",
          "title": "uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional"
        },
        "uri_hash": {
          "type": "string",
          "title": "uri_hash is a hash of the document pointed by uri. Optional"
        },
        "data": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "data is the app specific metadata of the NFT class. Optional"
        }
      },
      "description": "Class defines the class of the nft type."
    },
    "cosmos.nft.v1beta1.NFT": {
      "type": "object",
      "properties": {
        "class_id": {
          "type": "string",
          "title": "class_id associated with the NFT, similar to the contract address of ERC721"
        },
        "id": {
          "type": "string",
          "title": "id is a unique identifier of the NFT"
        },
        "uri": {
          "type": "string",
          "title": "uri for the NFT metadata stored off chain"
        },
        "uri_hash": {
          "type": "string",
          "title": "uri_hash is a hash of the document pointed by uri"
        },
        "data": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "data is an app specific data of the NFT. Optional"
        }
      },
      "description": "NFT defines the NFT."
    },
    "cosmos.nft.v1beta1.QueryBalanceResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64",
          "title": "amount is the number of all NFTs of a given class owned by the owner"
        }
      },
      "title": "QueryBalanceResponse is the response type for the Query/Balance RPC method"
    },
    "cosmos.nft.v1beta1.QueryClassResponse": {
      "type": "object",
      "properties": {
        "class": {
          "$ref": "#/definitions/cosmos.nft.v1beta1.Class",
          "description": "class defines the class of the nft type."
        }
      },
      "title": "QueryClassResponse is the response type for the Query/Class RPC method"
    },
    "cosmos.nft.v1beta1.QueryClassesResponse": {
      "type": "object",
      "properties": {
        "classes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.nft.v1beta1.Class"
          },
          "description": "class defines the class of the nft type."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryClassesResponse is the response type for the Query/Classes RPC method"
    },
    "cosmos.nft.v1beta1.QueryNFTResponse": {
      "type": "object",
      "properties": {
        "nft": {
          "$ref": "#/definitions/cosmos.nft.v1beta1.NFT",
          "title": "owner is the owner address of the nft"
        }
      },
      "title": "QueryNFTResponse is the response type for the Query/NFT RPC method"
    },
    "cosmos.nft.v1beta1.QueryNFTsResponse": {
      "type": "object",
      "properties": {
        "nfts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.nft.v1beta1.NFT"
          },
          "title": "NFT defines the NFT"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryNFTsResponse is the response type for the Query/NFTs RPC methods"
    },
    "cosmos.nft.v1beta1.QueryOwnerResponse": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "title": "owner is the owner address of the nft"
        }
      },
      "title": "QueryOwnerResponse is the response type for the Query/Owner RPC method"
    },
    "cosmos.nft.v1beta1.QuerySupplyResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64",
          "title": "amount is the number of all NFTs from the given class"
        }
      },
      "title": "QuerySupplyResponse is the response type for the Query/Supply RPC method"
    },
    "cosmos.slashing.v1beta1.Params": {
      "type": "object",
      "properties": {
        "signed_blocks_window": {
          "type": "string",
          "format": "int64"
        },
        "min_signed_per_window": {
          "type": "string",
          "format": "byte"
        },
        "downtime_jail_duration": {
          "type": "string"
        },
        "slash_fraction_double_sign": {
          "type": "string",
          "format": "byte"
        },
        "slash_fraction_downtime": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Params represents the parameters used for by the slashing module."
    },
    "cosmos.slashing.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/cosmos.slashing.v1beta1.Params"
        }
      },
      "title": "QueryParamsResponse is the response type for the Query/Params RPC method"
    },
    "cosmos.slashing.v1beta1.QuerySigningInfoResponse": {
      "type": "object",
      "properties": {
        "val_signing_info": {
          "$ref": "#/definitions/cosmos.slashing.v1beta1.ValidatorSigningInfo",
          "title": "val_signing_info is the signing info of requested val cons address"
        }
      },
      "title": "QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC\nmethod"
    },
    "cosmos.slashing.v1beta1.QuerySigningInfosResponse": {
      "type": "object",
      "properties": {
        "info": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.slashing.v1beta1.ValidatorSigningInfo"
          },
          "title": "info is the signing info of all validators"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse"
        }
      },
      "title": "QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC\nmethod"
    },
    "cosmos.slashing.v1beta1.ValidatorSigningInfo": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "start_height": {
          "type": "string",
          "format": "int64",
          "title": "Height at which validator was first a candidate OR was unjailed"
        },
        "index_offset": {
          "type": "string",
          "format": "int64",
          "description": "Index which is incremented each time the validator was a bonded\nin a block and may have signed a precommit or not. This in conjunction with the\n`SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`."
        },
        "jailed_until": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp until which the validator is jailed due to liveness downtime."
        },
        "tombstoned": {
          "type": "boolean",
          "description": "Whether or not a validator has been tombstoned (killed out of validator set). It is set\nonce the validator commits an equivocation or for any other configured misbehiavor."
        },
        "missed_blocks_counter": {
          "type": "string",
          "format": "int64",
          "description": "A counter kept to avoid unnecessary array reads.\nNote that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`."
        }
      },
      "description": "ValidatorSigningInfo defines a validator's signing info for monitoring their\nliveness activity."
    },
    "cosmos.staking.v1beta1.BondStatus": {
      "type": "string",
      "enum": [
        "BOND_STATUS_UNSPECIFIED",
        "BOND_STATUS_UNBONDED",
        "BOND_STATUS_UNBONDING",
        "BOND_STATUS_BONDED"
      ],
      "default": "BOND_STATUS_UNSPECIFIED",
      "description": "BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded."
    },
    "cosmos.staking.v1beta1.Commission": {
      "type": "object",
      "properties": {
        "commission_rates": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.CommissionRates",
          "description": "commission_rates defines the initial commission rates to be used for creating a validator."
        },
        "update_time": {
          "type": "string",
          "format": "date-time",
          "description": "update_time is the last time the commission rate was changed."
        }
      },
      "description": "Commission defines commission parameters for a given validator."
    },
    "cosmos.staking.v1beta1.CommissionRates": {
      "type": "object",
      "properties": {
        "rate": {
          "type": "string",
          "description": "rate is the commission rate charged to delegators, as a fraction."
        },
        "max_rate": {
          "type": "string",
          "description": "max_rate defines the maximum commission rate which validator can ever charge, as a fraction."
        },
        "max_change_rate": {
          "type": "string",
          "description": "max_change_rate defines the maximum daily increase of the validator commission, as a fraction."
        }
      },
      "description": "CommissionRates defines the initial commission rates to be used for creating\na validator."
    },
    "cosmos.staking.v1beta1.Delegation": {
      "type": "object",
      "properties": {
        "delegator_address": {
          "type": "string",
          "description": "delegator_address is the bech32-encoded address of the delegator."
        },
        "validator_address": {
          "type": "string",
          "description": "validator_address is the bech32-encoded address of the validator."
        },
        "shares": {
          "type": "string",
          "description": "shares define the delegation shares received."
        }
      },
      "description": "Delegation represents the bond with tokens held by an account. It is\nowned by one delegator, and is associated with the voting power of one\nvalidator."
    },
    "cosmos.staking.v1beta1.DelegationResponse": {
      "type": "object",
      "properties": {
        "delegation": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Delegation"
        },
        "balance": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
        }
      },
      "description": "DelegationResponse is equivalent to Delegation except that it contains a\nbalance in addition to shares which is more suitable for client responses."
    },
    "cosmos.staking.v1beta1.Description": {
      "type": "object",
      "properties": {
        "moniker": {
          "type": "string",
          "description": "moniker defines a human-readable name for the validator."
        },
        "identity": {
          "type": "string",
          "description": "identity defines an optional identity signature (ex. UPort or Keybase)."
        },
        "website": {
          "type": "string",
          "description": "website defines an optional website link."
        },
        "security_contact": {
          "type": "string",
          "description": "security_contact defines an optional email for security contact."
        },
        "details": {
          "type": "string",
          "description": "details define other optional details."
        }
      },
      "description": "Description defines a validator description."
    },
    "cosmos.staking.v1beta1.HistoricalInfo": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/tendermint.types.Header"
        },
        "valset": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.staking.v1beta1.Validator"
          }
        }
      },
      "description": "HistoricalInfo contains header and validator information for a given block.\nIt is stored as part of staking module's state, which persists the `n` most\nrecent HistoricalInfo\n(`n` is set by the staking module's `historical_entries` parameter)."
    },
    "cosmos.staking.v1beta1.Params": {
      "type": "object",
      "properties": {
        "unbonding_time": {
          "type": "string",
          "description": "unbonding_time is the time duration of unbonding."
        },
        "max_validators": {
          "type": "integer",
          "format": "int64",
          "description": "max_validators is the maximum number of validators."
        },
        "max_entries": {
          "type": "integer",
          "format": "int64",
          "description": "max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio)."
        },
        "historical_entries": {
          "type": "integer",
          "format": "int64",
          "description": "historical_entries is the number of historical entries to persist."
        },
        "bond_denom": {
          "type": "string",
          "description": "bond_denom defines the bondable coin denomination."
        },
        "min_commission_rate": {
          "type": "string",
          "title": "min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators"
        }
      },
      "description": "Params defines the parameters for the x/staking module."
    },
    "cosmos.staking.v1beta1.Pool": {
      "type": "object",
      "properties": {
        "not_bonded_tokens": {
          "type": "string"
        },
        "bonded_tokens": {
          "type": "string"
        }
      },
      "description": "Pool is used for tracking bonded and not-bonded token supply of the bond\ndenomination."
    },
    "cosmos.staking.v1beta1.QueryDelegationResponse": {
      "type": "object",
      "properties": {
        "delegation_response": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.DelegationResponse",
          "description": "delegation_responses defines the delegation info of a delegation."
        }
      },
      "description": "QueryDelegationResponse is response type for the Query/Delegation RPC method."
    },
    "cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse": {
      "type": "object",
      "properties": {
        "delegation_responses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.staking.v1beta1.DelegationResponse"
          },
          "description": "delegation_responses defines all the delegations' info of a delegator."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryDelegatorDelegationsResponse is response type for the\nQuery/DelegatorDelegations RPC method."
    },
    "cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse": {
      "type": "object",
      "properties": {
        "unbonding_responses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.staking.v1beta1.UnbondingDelegation"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryUnbondingDelegatorDelegationsResponse is response type for the\nQuery/UnbondingDelegatorDelegations RPC method."
    },
    "cosmos.staking.v1beta1.QueryDelegatorValidatorResponse": {
      "type": "object",
      "properties": {
        "validator": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Validator",
          "description": "validator defines the validator info."
        }
      },
      "description": "QueryDelegatorValidatorResponse response type for the\nQuery/DelegatorValidator RPC method."
    },
    "cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse": {
      "type": "object",
      "properties": {
        "validators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.staking.v1beta1.Validator"
          },
          "description": "validators defines the validators' info of a delegator."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryDelegatorValidatorsResponse is response type for the\nQuery/DelegatorValidators RPC method."
    },
    "cosmos.staking.v1beta1.QueryHistoricalInfoResponse": {
      "type": "object",
      "properties": {
        "hist": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.HistoricalInfo",
          "description": "hist defines the historical info at the given height."
        }
      },
      "description": "QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC\nmethod."
    },
    "cosmos.staking.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Params",
          "description": "params holds all the parameters of this module."
        }
      },
      "description": "QueryParamsResponse is response type for the Query/Params RPC method."
    },
    "cosmos.staking.v1beta1.QueryPoolResponse": {
      "type": "object",
      "properties": {
        "pool": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Pool",
          "description": "pool defines the pool info."
        }
      },
      "description": "QueryPoolResponse is response type for the Query/Pool RPC method."
    },
    "cosmos.staking.v1beta1.QueryRedelegationsResponse": {
      "type": "object",
      "properties": {
        "redelegation_responses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.staking.v1beta1.RedelegationResponse"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryRedelegationsResponse is response type for the Query/Redelegations RPC\nmethod."
    },
    "cosmos.staking.v1beta1.QueryUnbondingDelegationResponse": {
      "type": "object",
      "properties": {
        "unbond": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.UnbondingDelegation",
          "description": "unbond defines the unbonding information of a delegation."
        }
      },
      "description": "QueryDelegationResponse is response type for the Query/UnbondingDelegation\nRPC method."
    },
    "cosmos.staking.v1beta1.QueryValidatorDelegationsResponse": {
      "type": "object",
      "properties": {
        "delegation_responses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.staking.v1beta1.DelegationResponse"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryValidatorDelegationsResponse is response type for the\nQuery/ValidatorDelegations RPC method"
    },
    "cosmos.staking.v1beta1.QueryValidatorResponse": {
      "type": "object",
      "properties": {
        "validator": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Validator",
          "description": "validator defines the validator info."
        }
      },
      "title": "QueryValidatorResponse is response type for the Query/Validator RPC method"
    },
    "cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse": {
      "type": "object",
      "properties": {
        "unbonding_responses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.staking.v1beta1.UnbondingDelegation"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryValidatorUnbondingDelegationsResponse is response type for the\nQuery/ValidatorUnbondingDelegations RPC method."
    },
    "cosmos.staking.v1beta1.QueryValidatorsResponse": {
      "type": "object",
      "properties": {
        "validators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.staking.v1beta1.Validator"
          },
          "description": "validators contains all the queried validators."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryValidatorsResponse is response type for the Query/Validators RPC method"
    },
    "cosmos.staking.v1beta1.Redelegation": {
      "type": "object",
      "properties": {
        "delegator_address": {
          "type": "string",
          "description": "delegator_address is the bech32-encoded address of the delegator."
        },
        "validator_src_address": {
          "type": "string",
          "description": "validator_src_address is the validator redelegation source operator address."
        },
        "validator_dst_address": {
          "type": "string",
          "description": "validator_dst_address is the validator redelegation destination operator address."
        },
        "entries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.staking.v1beta1.RedelegationEntry"
          },
          "description": "entries are the redelegation entries.\n\nredelegation entries"
        }
      },
      "description": "Redelegation contains the list of a particular delegator's redelegating bonds\nfrom a particular source validator to a particular destination validator."
    },
    "cosmos.staking.v1beta1.RedelegationEntry": {
      "type": "object",
      "properties": {
        "creation_height": {
          "type": "string",
          "format": "int64",
          "description": "creation_height  defines the height which the redelegation took place."
        },
        "completion_time": {
          "type": "string",
          "format": "date-time",
          "description": "completion_time defines the unix time for redelegation completion."
        },
        "initial_balance": {
          "type": "string",
          "description": "initial_balance defines the initial balance when redelegation started."
        },
        "shares_dst": {
          "type": "string",
          "description": "shares_dst is the amount of destination-validator shares created by redelegation."
        },
        "unbonding_id": {
          "type": "string",
          "format": "uint64",
          "title": "Incrementing id that uniquely identifies this entry"
        },
        "unbonding_on_hold_ref_count": {
          "type": "string",
          "format": "int64",
          "title": "Strictly positive if this entry's unbonding has been stopped by external modules"
        }
      },
      "description": "RedelegationEntry defines a redelegation object with relevant metadata."
    },
    "cosmos.staking.v1beta1.RedelegationEntryResponse": {
      "type": "object",
      "properties": {
        "redelegation_entry": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.RedelegationEntry"
        },
        "balance": {
          "type": "string"
        }
      },
      "description": "RedelegationEntryResponse is equivalent to a RedelegationEntry except that it\ncontains a balance in addition to shares which is more suitable for client\nresponses."
    },
    "cosmos.staking.v1beta1.RedelegationResponse": {
      "type": "object",
      "properties": {
        "redelegation": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Redelegation"
        },
        "entries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.staking.v1beta1.RedelegationEntryResponse"
          }
        }
      },
      "description": "RedelegationResponse is equivalent to a Redelegation except that its entries\ncontain a balance in addition to shares which is more suitable for client\nresponses."
    },
    "cosmos.staking.v1beta1.UnbondingDelegation": {
      "type": "object",
      "properties": {
        "delegator_address": {
          "type": "string",
          "description": "delegator_address is the bech32-encoded address of the delegator."
        },
        "validator_address": {
          "type": "string",
          "description": "validator_address is the bech32-encoded address of the validator."
        },
        "entries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.staking.v1beta1.UnbondingDelegationEntry"
          },
          "description": "entries are the unbonding delegation entries.\n\nunbonding delegation entries"
        }
      },
      "description": "UnbondingDelegation stores all of a single delegator's unbonding bonds\nfor a single validator in an time-ordered list."
    },
    "cosmos.staking.v1beta1.UnbondingDelegationEntry": {
      "type": "object",
      "properties": {
        "creation_height": {
          "type": "string",
          "format": "int64",
          "description": "creation_height is the height which the unbonding took place."
        },
        "completion_time": {
          "type": "string",
          "format": "date-time",
          "description": "completion_time is the unix time for unbonding completion."
        },
        "initial_balance": {
          "type": "string",
          "description": "initial_balance defines the tokens initially scheduled to receive at completion."
        },
        "balance": {
          "type": "string",
          "description": "balance defines the tokens to receive at completion."
        },
        "unbonding_id": {
          "type": "string",
          "format": "uint64",
          "title": "Incrementing id that uniquely identifies this entry"
        },
        "unbonding_on_hold_ref_count": {
          "type": "string",
          "format": "int64",
          "title": "Strictly positive if this entry's unbonding has been stopped by external modules"
        }
      },
      "description": "UnbondingDelegationEntry defines an unbonding object with relevant metadata."
    },
    "cosmos.staking.v1beta1.Validator": {
      "type": "object",
      "properties": {
        "operator_address": {
          "type": "string",
          "description": "operator_address defines the address of the validator's operator; bech encoded in JSON."
        },
        "consensus_pubkey": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "consensus_pubkey is the consensus public key of the validator, as a Protobuf Any."
        },
        "jailed": {
          "type": "boolean",
          "description": "jailed defined whether the validator has been jailed from bonded status or not."
        },
        "status": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.BondStatus",
          "description": "status is the validator status (bonded/unbonding/unbonded)."
        },
        "tokens": {
          "type": "string",
          "description": "tokens define the delegated tokens (incl. self-delegation)."
        },
        "delegator_shares": {
          "type": "string",
          "description": "delegator_shares defines total shares issued to a validator's delegators."
        },
        "description": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Description",
          "description": "description defines the description terms for the validator."
        },
        "unbonding_height": {
          "type": "string",
          "format": "int64",
          "description": "unbonding_height defines, if unbonding, the height at which this validator has begun unbonding."
        },
        "unbonding_time": {
          "type": "string",
          "format": "date-time",
          "description": "unbonding_time defines, if unbonding, the min time for the validator to complete unbonding."
        },
        "commission": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Commission",
          "description": "commission defines the commission parameters."
        },
        "min_self_delegation": {
          "type": "string",
          "description": "min_self_delegation is the validator's self declared minimum self delegation.\n\nSince: cosmos-sdk 0.46"
        },
        "unbonding_on_hold_ref_count": {
          "type": "string",
          "format": "int64",
          "title": "strictly positive if this validator's unbonding has been stopped by external modules"
        },
        "unbonding_ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          },
          "title": "list of unbonding ids, each uniquely identifing an unbonding of this validator"
        }
      },
      "description": "Validator defines a validator, together with the total amount of the\nValidator's bond shares and their exchange rate to coins. Slashing results in\na decrease in the exchange rate, allowing correct calculation of future\nundelegations without iterating over delegators. When coins are delegated to\nthis validator, the validator is credited with a delegation whose number of\nbond shares is based on the amount of coins delegated divided by the current\nexchange rate. Voting power can be calculated as total bonded shares\nmultiplied by exchange rate."
    },
    "cosmos.tx.signing.v1beta1.SignMode": {
      "type": "string",
      "enum": [
        "SIGN_MODE_UNSPECIFIED",
        "SIGN_MODE_DIRECT",
        "SIGN_MODE_TEXTUAL",
        "SIGN_MODE_DIRECT_AUX",
        "SIGN_MODE_LEGACY_AMINO_JSON",
        "SIGN_MODE_EIP_191"
      ],
      "default": "SIGN_MODE_UNSPECIFIED",
      "description": "SignMode represents a signing mode with its own security guarantees.\n\nThis enum should be considered a registry of all known sign modes\nin the Cosmos ecosystem. Apps are not expected to support all known\nsign modes. Apps that would like to support custom  sign modes are\nencouraged to open a small PR against this file to add a new case\nto this SignMode enum describing their sign mode so that different\napps have a consistent version of this enum.\n\n - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be\nrejected.\n - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is\nverified with raw bytes from Tx.\n - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some\nhuman-readable textual representation on top of the binary representation\nfrom SIGN_MODE_DIRECT. It is currently not supported.\n - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses\nSignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not\nrequire signers signing over other signers' `signer_info`. It also allows\nfor adding Tips in transactions.\n\nSince: cosmos-sdk 0.46\n - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses\nAmino JSON and will be removed in the future.\n - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos\nSDK. Ref: https://eips.ethereum.org/EIPS/eip-191\n\nCurrently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,\nbut is not implemented on the SDK by default. To enable EIP-191, you need\nto pass a custom `TxConfig` that has an implementation of\n`SignModeHandler` for EIP-191. The SDK may decide to fully support\nEIP-191 in the future.\n\nSince: cosmos-sdk 0.45.2"
    },
    "cosmos.tx.v1beta1.AuthInfo": {
      "type": "object",
      "properties": {
        "signer_infos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.tx.v1beta1.SignerInfo"
          },
          "description": "signer_infos defines the signing modes for the required signers. The number\nand order of elements must match the required signers from TxBody's\nmessages. The first element is the primary signer and the one which pays\nthe fee."
        },
        "fee": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.Fee",
          "description": "Fee is the fee and gas limit for the transaction. The first signer is the\nprimary signer and the one which pays the fee. The fee can be calculated\nbased on the cost of evaluating the body and doing signature verification\nof the signers. This can be estimated via simulation."
        },
        "tip": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.Tip",
          "description": "Tip is the optional tip used for transactions fees paid in another denom.\n\nThis field is ignored if the chain didn't enable tips, i.e. didn't add the\n`TipDecorator` in its posthandler.\n\nSince: cosmos-sdk 0.46"
        }
      },
      "description": "AuthInfo describes the fee and signer modes that are used to sign a\ntransaction."
    },
    "cosmos.tx.v1beta1.BroadcastMode": {
      "type": "string",
      "enum": [
        "BROADCAST_MODE_UNSPECIFIED",
        "BROADCAST_MODE_BLOCK",
        "BROADCAST_MODE_SYNC",
        "BROADCAST_MODE_ASYNC"
      ],
      "default": "BROADCAST_MODE_UNSPECIFIED",
      "description": "BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC method.\n\n - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering\n - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,\nBROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.\n - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for\na CheckTx execution response only.\n - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns\nimmediately."
    },
    "cosmos.tx.v1beta1.BroadcastTxRequest": {
      "type": "object",
      "properties": {
        "tx_bytes": {
          "type": "string",
          "format": "byte",
          "description": "tx_bytes is the raw transaction."
        },
        "mode": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.BroadcastMode"
        }
      },
      "description": "BroadcastTxRequest is the request type for the Service.BroadcastTxRequest\nRPC method."
    },
    "cosmos.tx.v1beta1.BroadcastTxResponse": {
      "type": "object",
      "properties": {
        "tx_response": {
          "$ref": "#/definitions/cosmos.base.abci.v1beta1.TxResponse",
          "description": "tx_response is the queried TxResponses."
        }
      },
      "description": "BroadcastTxResponse is the response type for the\nService.BroadcastTx method."
    },
    "cosmos.tx.v1beta1.Fee": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "amount is the amount of coins to be paid as a fee"
        },
        "gas_limit": {
          "type": "string",
          "format": "uint64",
          "title": "gas_limit is the maximum gas that can be used in transaction processing\nbefore an out of gas error occurs"
        },
        "payer": {
          "type": "string",
          "description": "if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.\nthe payer must be a tx signer (and thus have signed this field in AuthInfo).\nsetting this field does *not* change the ordering of required signers for the transaction."
        },
        "granter": {
          "type": "string",
          "title": "if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used\nto pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does\nnot support fee grants, this will fail"
        }
      },
      "description": "Fee includes the amount of coins paid in fees and the maximum\ngas to be used by the transaction. The ratio yields an effective \"gasprice\",\nwhich must be above some miminum to be accepted into the mempool."
    },
    "cosmos.tx.v1beta1.GetBlockWithTxsResponse": {
      "type": "object",
      "properties": {
        "txs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.tx.v1beta1.Tx"
          },
          "description": "txs are the transactions in the block."
        },
        "block_id": {
          "$ref": "#/definitions/tendermint.types.BlockID"
        },
        "block": {
          "$ref": "#/definitions/tendermint.types.Block"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines a pagination for the response."
        }
      },
      "description": "GetBlockWithTxsResponse is the response type for the Service.GetBlockWithTxs method.\n\nSince: cosmos-sdk 0.45.2"
    },
    "cosmos.tx.v1beta1.GetTxResponse": {
      "type": "object",
      "properties": {
        "tx": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.Tx",
          "description": "tx is the queried transaction."
        },
        "tx_response": {
          "$ref": "#/definitions/cosmos.base.abci.v1beta1.TxResponse",
          "description": "tx_response is the queried TxResponses."
        }
      },
      "description": "GetTxResponse is the response type for the Service.GetTx method."
    },
    "cosmos.tx.v1beta1.GetTxsEventResponse": {
      "type": "object",
      "properties": {
        "txs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.tx.v1beta1.Tx"
          },
          "description": "txs is the list of queried transactions."
        },
        "tx_responses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.abci.v1beta1.TxResponse"
          },
          "description": "tx_responses is the list of queried TxResponses."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines a pagination for the response.\nDeprecated post v0.46.x: use total instead."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available"
        }
      },
      "description": "GetTxsEventResponse is the response type for the Service.TxsByEvents\nRPC method."
    },
    "cosmos.tx.v1beta1.ModeInfo": {
      "type": "object",
      "properties": {
        "single": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.ModeInfo.Single",
          "title": "single represents a single signer"
        },
        "multi": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.ModeInfo.Multi",
          "title": "multi represents a nested multisig signer"
        }
      },
      "description": "ModeInfo describes the signing mode of a single or nested multisig signer."
    },
    "cosmos.tx.v1beta1.ModeInfo.Multi": {
      "type": "object",
      "properties": {
        "bitarray": {
          "$ref": "#/definitions/cosmos.crypto.multisig.v1beta1.CompactBitArray",
          "title": "bitarray specifies which keys within the multisig are signing"
        },
        "mode_infos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.tx.v1beta1.ModeInfo"
          },
          "title": "mode_infos is the corresponding modes of the signers of the multisig\nwhich could include nested multisig public keys"
        }
      },
      "title": "Multi is the mode info for a multisig public key"
    },
    "cosmos.tx.v1beta1.ModeInfo.Single": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/cosmos.tx.signing.v1beta1.SignMode",
          "title": "mode is the signing mode of the single signer"
        }
      },
      "title": "Single is the mode info for a single signer. It is structured as a message\nto allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the\nfuture"
    },
    "cosmos.tx.v1beta1.OrderBy": {
      "type": "string",
      "enum": [
        "ORDER_BY_UNSPECIFIED",
        "ORDER_BY_ASC",
        "ORDER_BY_DESC"
      ],
      "default": "ORDER_BY_UNSPECIFIED",
      "description": "- ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.\n - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order\n - ORDER_BY_DESC: ORDER_BY_DESC defines descending order",
      "title": "OrderBy defines the sorting order"
    },
    "cosmos.tx.v1beta1.SignerInfo": {
      "type": "object",
      "properties": {
        "public_key": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "public_key is the public key of the signer. It is optional for accounts\nthat already exist in state. If unset, the verifier can use the required \\\nsigner address for this position and lookup the public key."
        },
        "mode_info": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.ModeInfo",
          "title": "mode_info describes the signing mode of the signer and is a nested\nstructure to support nested multisig pubkey's"
        },
        "sequence": {
          "type": "string",
          "format": "uint64",
          "description": "sequence is the sequence of the account, which describes the\nnumber of committed transactions signed by a given address. It is used to\nprevent replay attacks."
        }
      },
      "description": "SignerInfo describes the public key and signing mode of a single top-level\nsigner."
    },
    "cosmos.tx.v1beta1.SimulateRequest": {
      "type": "object",
      "properties": {
        "tx": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.Tx",
          "description": "tx is the transaction to simulate.\nDeprecated. Send raw tx bytes instead."
        },
        "tx_bytes": {
          "type": "string",
          "format": "byte",
          "description": "tx_bytes is the raw transaction.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "SimulateRequest is the request type for the Service.Simulate\nRPC method."
    },
    "cosmos.tx.v1beta1.SimulateResponse": {
      "type": "object",
      "properties": {
        "gas_info": {
          "$ref": "#/definitions/cosmos.base.abci.v1beta1.GasInfo",
          "description": "gas_info is the information about gas used in the simulation."
        },
        "result": {
          "$ref": "#/definitions/cosmos.base.abci.v1beta1.Result",
          "description": "result is the result of the simulation."
        }
      },
      "description": "SimulateResponse is the response type for the\nService.SimulateRPC method."
    },
    "cosmos.tx.v1beta1.Tip": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "amount is the amount of the tip"
        },
        "tipper": {
          "type": "string",
          "title": "tipper is the address of the account paying for the tip"
        }
      },
      "description": "Tip is the tip used for meta-transactions.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.tx.v1beta1.Tx": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.TxBody",
          "title": "body is the processable content of the transaction"
        },
        "auth_info": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.AuthInfo",
          "title": "auth_info is the authorization related content of the transaction,\nspecifically signers, signer modes and fee"
        },
        "signatures": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "description": "signatures is a list of signatures that matches the length and order of\nAuthInfo's signer_infos to allow connecting signature meta information like\npublic key and signing mode by position."
        }
      },
      "description": "Tx is the standard type used for broadcasting transactions."
    },
    "cosmos.tx.v1beta1.TxBody": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "messages is a list of messages to be executed. The required signers of\nthose messages define the number and order of elements in AuthInfo's\nsigner_infos and Tx's signatures. Each required signer address is added to\nthe list only the first time it occurs.\nBy convention, the first required signer (usually from the first message)\nis referred to as the primary signer and pays the fee for the whole\ntransaction."
        },
        "memo": {
          "type": "string",
          "description": "memo is any arbitrary note/comment to be added to the transaction.\nWARNING: in clients, any publicly exposed text should not be called memo,\nbut should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122)."
        },
        "timeout_height": {
          "type": "string",
          "format": "uint64",
          "title": "timeout is the block height after which this transaction will not\nbe processed by the chain"
        },
        "extension_options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "title": "extension_options are arbitrary options that can be added by chains\nwhen the default options are not sufficient. If any of these are present\nand can't be handled, the transaction will be rejected"
        },
        "non_critical_extension_options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "title": "extension_options are arbitrary options that can be added by chains\nwhen the default options are not sufficient. If any of these are present\nand can't be handled, they will be ignored"
        }
      },
      "description": "TxBody is the body of a transaction that all signers sign over."
    },
    "cosmos.tx.v1beta1.TxDecodeAminoRequest": {
      "type": "object",
      "properties": {
        "amino_binary": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino\nRPC method.\n\nSince: cosmos-sdk 0.47"
    },
    "cosmos.tx.v1beta1.TxDecodeAminoResponse": {
      "type": "object",
      "properties": {
        "amino_json": {
          "type": "string"
        }
      },
      "description": "TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino\nRPC method.\n\nSince: cosmos-sdk 0.47"
    },
    "cosmos.tx.v1beta1.TxDecodeRequest": {
      "type": "object",
      "properties": {
        "tx_bytes": {
          "type": "string",
          "format": "byte",
          "description": "tx_bytes is the raw transaction."
        }
      },
      "description": "TxDecodeRequest is the request type for the Service.TxDecode\nRPC method.\n\nSince: cosmos-sdk 0.47"
    },
    "cosmos.tx.v1beta1.TxDecodeResponse": {
      "type": "object",
      "properties": {
        "tx": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.Tx",
          "description": "tx is the decoded transaction."
        }
      },
      "description": "TxDecodeResponse is the response type for the\nService.TxDecode method.\n\nSince: cosmos-sdk 0.47"
    },
    "cosmos.tx.v1beta1.TxEncodeAminoRequest": {
      "type": "object",
      "properties": {
        "amino_json": {
          "type": "string"
        }
      },
      "description": "TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino\nRPC method.\n\nSince: cosmos-sdk 0.47"
    },
    "cosmos.tx.v1beta1.TxEncodeAminoResponse": {
      "type": "object",
      "properties": {
        "amino_binary": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino\nRPC method.\n\nSince: cosmos-sdk 0.47"
    },
    "cosmos.tx.v1beta1.TxEncodeRequest": {
      "type": "object",
      "properties": {
        "tx": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.Tx",
          "description": "tx is the transaction to encode."
        }
      },
      "description": "TxEncodeRequest is the request type for the Service.TxEncode\nRPC method.\n\nSince: cosmos-sdk 0.47"
    },
    "cosmos.tx.v1beta1.TxEncodeResponse": {
      "type": "object",
      "properties": {
        "tx_bytes": {
          "type": "string",
          "format": "byte",
          "description": "tx_bytes is the encoded transaction bytes."
        }
      },
      "description": "TxEncodeResponse is the response type for the\nService.TxEncode method.\n\nSince: cosmos-sdk 0.47"
    },
    "cosmos.upgrade.v1beta1.ModuleVersion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name of the app module"
        },
        "version": {
          "type": "string",
          "format": "uint64",
          "title": "consensus version of the app module"
        }
      },
      "description": "ModuleVersion specifies a module and its consensus version.\n\nSince: cosmos-sdk 0.43"
    },
    "cosmos.upgrade.v1beta1.Plan": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Sets the name for the upgrade. This name will be used by the upgraded\nversion of the software to apply any special \"on-upgrade\" commands during\nthe first BeginBlock method after the upgrade is applied. It is also used\nto detect whether a software version can handle a given upgrade. If no\nupgrade handler with this name has been set in the software, it will be\nassumed that the software is out-of-date when the upgrade Time or Height is\nreached and the software will exit."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Deprecated: Time based upgrades have been deprecated. Time based upgrade logic\nhas been removed from the SDK.\nIf this field is not empty, an error will be thrown."
        },
        "height": {
          "type": "string",
          "format": "int64",
          "description": "The height at which the upgrade must be performed."
        },
        "info": {
          "type": "string",
          "title": "Any application specific upgrade info to be included on-chain\nsuch as a git commit that validators could automatically upgrade to"
        },
        "upgraded_client_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been\nmoved to the IBC module in the sub module 02-client.\nIf this field is not empty, an error will be thrown."
        }
      },
      "description": "Plan specifies information about a planned upgrade and when it should occur."
    },
    "cosmos.upgrade.v1beta1.QueryAppliedPlanResponse": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "int64",
          "description": "height is the block height at which the plan was applied."
        }
      },
      "description": "QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC\nmethod."
    },
    "cosmos.upgrade.v1beta1.QueryAuthorityResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      },
      "description": "Since: cosmos-sdk 0.46",
      "title": "QueryAuthorityResponse is the response type for Query/Authority"
    },
    "cosmos.upgrade.v1beta1.QueryCurrentPlanResponse": {
      "type": "object",
      "properties": {
        "plan": {
          "$ref": "#/definitions/cosmos.upgrade.v1beta1.Plan",
          "description": "plan is the current upgrade plan."
        }
      },
      "description": "QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC\nmethod."
    },
    "cosmos.upgrade.v1beta1.QueryModuleVersionsResponse": {
      "type": "object",
      "properties": {
        "module_versions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmos.upgrade.v1beta1.ModuleVersion"
          },
          "description": "module_versions is a list of module names with their consensus versions."
        }
      },
      "description": "QueryModuleVersionsResponse is the response type for the Query/ModuleVersions\nRPC method.\n\nSince: cosmos-sdk 0.43"
    },
    "cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse": {
      "type": "object",
      "properties": {
        "upgraded_consensus_state": {
          "type": "string",
          "format": "byte",
          "title": "Since: cosmos-sdk 0.43"
        }
      },
      "description": "QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState\nRPC method."
    },
    "cosmwasm.wasm.v1.AbsoluteTxPosition": {
      "type": "object",
      "properties": {
        "block_height": {
          "type": "string",
          "format": "uint64",
          "title": "BlockHeight is the block the contract was created at"
        },
        "tx_index": {
          "type": "string",
          "format": "uint64",
          "title": "TxIndex is a monotonic counter within the block (actual transaction index,\nor gas consumed)"
        }
      },
      "description": "AbsoluteTxPosition is a unique transaction position that allows for global\nordering of transactions."
    },
    "cosmwasm.wasm.v1.AccessConfig": {
      "type": "object",
      "properties": {
        "permission": {
          "$ref": "#/definitions/cosmwasm.wasm.v1.AccessType"
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "AccessConfig access control type."
    },
    "cosmwasm.wasm.v1.AccessType": {
      "type": "string",
      "enum": [
        "ACCESS_TYPE_UNSPECIFIED",
        "ACCESS_TYPE_NOBODY",
        "ACCESS_TYPE_EVERYBODY",
        "ACCESS_TYPE_ANY_OF_ADDRESSES"
      ],
      "default": "ACCESS_TYPE_UNSPECIFIED",
      "description": "- ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value\n - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden\n - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted\n - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses",
      "title": "AccessType permission types"
    },
    "cosmwasm.wasm.v1.CodeInfoResponse": {
      "type": "object",
      "properties": {
        "code_id": {
          "type": "string",
          "format": "uint64",
          "title": "id for legacy support"
        },
        "creator": {
          "type": "string"
        },
        "data_hash": {
          "type": "string",
          "format": "byte"
        },
        "instantiate_permission": {
          "$ref": "#/definitions/cosmwasm.wasm.v1.AccessConfig"
        }
      },
      "title": "CodeInfoResponse contains code meta data from CodeInfo"
    },
    "cosmwasm.wasm.v1.ContractCodeHistoryEntry": {
      "type": "object",
      "properties": {
        "operation": {
          "$ref": "#/definitions/cosmwasm.wasm.v1.ContractCodeHistoryOperationType"
        },
        "code_id": {
          "type": "string",
          "format": "uint64",
          "title": "CodeID is the reference to the stored WASM code"
        },
        "updated": {
          "$ref": "#/definitions/cosmwasm.wasm.v1.AbsoluteTxPosition",
          "description": "Updated Tx position when the operation was executed."
        },
        "msg": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "ContractCodeHistoryEntry metadata to a contract."
    },
    "cosmwasm.wasm.v1.ContractCodeHistoryOperationType": {
      "type": "string",
      "enum": [
        "CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED",
        "CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT",
        "CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE",
        "CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS"
      ],
      "default": "CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED",
      "description": "- CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED: ContractCodeHistoryOperationTypeUnspecified placeholder for empty value\n - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation\n - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration\n - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data",
      "title": "ContractCodeHistoryOperationType actions that caused a code change"
    },
    "cosmwasm.wasm.v1.ContractInfo": {
      "type": "object",
      "properties": {
        "code_id": {
          "type": "string",
          "format": "uint64",
          "title": "CodeID is the reference to the stored Wasm code"
        },
        "creator": {
          "type": "string",
          "title": "Creator address who initially instantiated the contract"
        },
        "admin": {
          "type": "string",
          "title": "Admin is an optional address that can execute migrations"
        },
        "label": {
          "type": "string",
          "description": "Label is optional metadata to be stored with a contract instance."
        },
        "created": {
          "$ref": "#/definitions/cosmwasm.wasm.v1.AbsoluteTxPosition",
          "description": "Created Tx position when the contract was instantiated."
        },
        "ibc_port_id": {
          "type": "string"
        },
        "extension": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "Extension is an extension point to store custom metadata within the\npersistence model."
        }
      },
      "title": "ContractInfo stores a WASM contract instance"
    },
    "cosmwasm.wasm.v1.Model": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "title": "hex-encode key to read it better (this is often ascii)"
        },
        "value": {
          "type": "string",
          "format": "byte",
          "title": "base64-encode raw value"
        }
      },
      "title": "Model is a struct that holds a KV pair"
    },
    "cosmwasm.wasm.v1.Params": {
      "type": "object",
      "properties": {
        "code_upload_access": {
          "$ref": "#/definitions/cosmwasm.wasm.v1.AccessConfig"
        },
        "instantiate_default_permission": {
          "$ref": "#/definitions/cosmwasm.wasm.v1.AccessType"
        }
      },
      "description": "Params defines the set of wasm parameters."
    },
    "cosmwasm.wasm.v1.QueryAllContractStateResponse": {
      "type": "object",
      "properties": {
        "models": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmwasm.wasm.v1.Model"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryAllContractStateResponse is the response type for the\nQuery/AllContractState RPC method"
    },
    "cosmwasm.wasm.v1.QueryCodeResponse": {
      "type": "object",
      "properties": {
        "code_info": {
          "$ref": "#/definitions/cosmwasm.wasm.v1.CodeInfoResponse"
        },
        "data": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "QueryCodeResponse is the response type for the Query/Code RPC method"
    },
    "cosmwasm.wasm.v1.QueryCodesResponse": {
      "type": "object",
      "properties": {
        "code_infos": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmwasm.wasm.v1.CodeInfoResponse"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryCodesResponse is the response type for the Query/Codes RPC method"
    },
    "cosmwasm.wasm.v1.QueryContractHistoryResponse": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cosmwasm.wasm.v1.ContractCodeHistoryEntry"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryContractHistoryResponse is the response type for the\nQuery/ContractHistory RPC method"
    },
    "cosmwasm.wasm.v1.QueryContractInfoResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "address is the address of the contract"
        },
        "contract_info": {
          "$ref": "#/definitions/cosmwasm.wasm.v1.ContractInfo"
        }
      },
      "title": "QueryContractInfoResponse is the response type for the Query/ContractInfo RPC\nmethod"
    },
    "cosmwasm.wasm.v1.QueryContractsByCodeResponse": {
      "type": "object",
      "properties": {
        "contracts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "contracts are a set of contract addresses"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryContractsByCodeResponse is the response type for the\nQuery/ContractsByCode RPC method"
    },
    "cosmwasm.wasm.v1.QueryContractsByCreatorResponse": {
      "type": "object",
      "properties": {
        "contract_addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ContractAddresses result set"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "Pagination defines the pagination in the response."
        }
      },
      "description": "QueryContractsByCreatorResponse is the response type for the\nQuery/ContractsByCreator RPC method."
    },
    "cosmwasm.wasm.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/cosmwasm.wasm.v1.Params",
          "description": "params defines the parameters of the module."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "cosmwasm.wasm.v1.QueryPinnedCodesResponse": {
      "type": "object",
      "properties": {
        "code_ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryPinnedCodesResponse is the response type for the\nQuery/PinnedCodes RPC method"
    },
    "cosmwasm.wasm.v1.QueryRawContractStateResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte",
          "title": "Data contains the raw store data"
        }
      },
      "title": "QueryRawContractStateResponse is the response type for the\nQuery/RawContractState RPC method"
    },
    "cosmwasm.wasm.v1.QuerySmartContractStateResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte",
          "title": "Data contains the json data returned from the smart contract"
        }
      },
      "title": "QuerySmartContractStateResponse is the response type for the\nQuery/SmartContractState RPC method"
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "ibc.applications.transfer.v1.DenomTrace": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "path defines the chain of port/channel identifiers used for tracing the\nsource of the fungible token."
        },
        "base_denom": {
          "type": "string",
          "description": "base denomination of the relayed fungible token."
        }
      },
      "description": "DenomTrace contains the base denomination for ICS20 fungible tokens and the\nsource tracing information path."
    },
    "ibc.applications.transfer.v1.Params": {
      "type": "object",
      "properties": {
        "send_enabled": {
          "type": "boolean",
          "description": "send_enabled enables or disables all cross-chain token transfers from this\nchain."
        },
        "receive_enabled": {
          "type": "boolean",
          "description": "receive_enabled enables or disables all cross-chain token transfers to this\nchain."
        }
      },
      "description": "Params defines the set of IBC transfer parameters.\nNOTE: To prevent a single token from being transferred, set the\nTransfersEnabled parameter to true and then set the bank module's SendEnabled\nparameter for the denomination to false."
    },
    "ibc.applications.transfer.v1.QueryDenomHashResponse": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "hash (in hex format) of the denomination trace information."
        }
      },
      "description": "QueryDenomHashResponse is the response type for the Query/DenomHash RPC\nmethod."
    },
    "ibc.applications.transfer.v1.QueryDenomTraceResponse": {
      "type": "object",
      "properties": {
        "denom_trace": {
          "$ref": "#/definitions/ibc.applications.transfer.v1.DenomTrace",
          "description": "denom_trace returns the requested denomination trace information."
        }
      },
      "description": "QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC\nmethod."
    },
    "ibc.applications.transfer.v1.QueryDenomTracesResponse": {
      "type": "object",
      "properties": {
        "denom_traces": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ibc.applications.transfer.v1.DenomTrace"
          },
          "description": "denom_traces returns all denominations trace information."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryConnectionsResponse is the response type for the Query/DenomTraces RPC\nmethod."
    },
    "ibc.applications.transfer.v1.QueryEscrowAddressResponse": {
      "type": "object",
      "properties": {
        "escrow_address": {
          "type": "string",
          "title": "the escrow account address"
        }
      },
      "description": "QueryEscrowAddressResponse is the response type of the EscrowAddress RPC method."
    },
    "ibc.applications.transfer.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/ibc.applications.transfer.v1.Params",
          "description": "params defines the parameters of the module."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
        }
      },
      "description": "QueryTotalEscrowForDenomResponse is the response type for TotalEscrowForDenom RPC method."
    },
    "ibc.core.channel.v1.Channel": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/ibc.core.channel.v1.State",
          "title": "current state of the channel end"
        },
        "ordering": {
          "$ref": "#/definitions/ibc.core.channel.v1.Order",
          "title": "whether the channel is ordered or unordered"
        },
        "counterparty": {
          "$ref": "#/definitions/ibc.core.channel.v1.Counterparty",
          "title": "counterparty channel end"
        },
        "connection_hops": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of connection identifiers, in order, along which packets sent on\nthis channel will travel"
        },
        "version": {
          "type": "string",
          "title": "opaque channel version, which is agreed upon during the handshake"
        }
      },
      "description": "Channel defines pipeline for exactly-once packet delivery between specific\nmodules on separate blockchains, which has at least one end capable of\nsending packets and one end capable of receiving packets."
    },
    "ibc.core.channel.v1.Counterparty": {
      "type": "object",
      "properties": {
        "port_id": {
          "type": "string",
          "description": "port on the counterparty chain which owns the other end of the channel."
        },
        "channel_id": {
          "type": "string",
          "title": "channel end on the counterparty chain"
        }
      },
      "title": "Counterparty defines a channel end counterparty"
    },
    "ibc.core.channel.v1.IdentifiedChannel": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/ibc.core.channel.v1.State",
          "title": "current state of the channel end"
        },
        "ordering": {
          "$ref": "#/definitions/ibc.core.channel.v1.Order",
          "title": "whether the channel is ordered or unordered"
        },
        "counterparty": {
          "$ref": "#/definitions/ibc.core.channel.v1.Counterparty",
          "title": "counterparty channel end"
        },
        "connection_hops": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of connection identifiers, in order, along which packets sent on\nthis channel will travel"
        },
        "version": {
          "type": "string",
          "title": "opaque channel version, which is agreed upon during the handshake"
        },
        "port_id": {
          "type": "string",
          "title": "port identifier"
        },
        "channel_id": {
          "type": "string",
          "title": "channel identifier"
        }
      },
      "description": "IdentifiedChannel defines a channel with additional port and channel\nidentifier fields."
    },
    "ibc.core.channel.v1.Order": {
      "type": "string",
      "enum": [
        "ORDER_NONE_UNSPECIFIED",
        "ORDER_UNORDERED",
        "ORDER_ORDERED"
      ],
      "default": "ORDER_NONE_UNSPECIFIED",
      "description": "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent",
      "title": "Order defines if a channel is ORDERED or UNORDERED"
    },
    "ibc.core.channel.v1.PacketState": {
      "type": "object",
      "properties": {
        "port_id": {
          "type": "string",
          "description": "channel port identifier."
        },
        "channel_id": {
          "type": "string",
          "description": "channel unique identifier."
        },
        "sequence": {
          "type": "string",
          "format": "uint64",
          "description": "packet sequence."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "embedded data that represents packet state."
        }
      },
      "description": "PacketState defines the generic type necessary to retrieve and store\npacket commitments, acknowledgements, and receipts.\nCaller is responsible for knowing the context necessary to interpret this\nstate as a commitment, acknowledgement, or a receipt."
    },
    "ibc.core.channel.v1.QueryChannelClientStateResponse": {
      "type": "object",
      "properties": {
        "identified_client_state": {
          "$ref": "#/definitions/ibc.core.client.v1.IdentifiedClientState",
          "title": "client state associated with the channel"
        },
        "proof": {
          "type": "string",
          "format": "byte",
          "title": "merkle proof of existence"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "height at which the proof was retrieved"
        }
      },
      "title": "QueryChannelClientStateResponse is the Response type for the\nQuery/QueryChannelClientState RPC method"
    },
    "ibc.core.channel.v1.QueryChannelConsensusStateResponse": {
      "type": "object",
      "properties": {
        "consensus_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "consensus state associated with the channel"
        },
        "client_id": {
          "type": "string",
          "title": "client ID associated with the consensus state"
        },
        "proof": {
          "type": "string",
          "format": "byte",
          "title": "merkle proof of existence"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "height at which the proof was retrieved"
        }
      },
      "title": "QueryChannelClientStateResponse is the Response type for the\nQuery/QueryChannelClientState RPC method"
    },
    "ibc.core.channel.v1.QueryChannelResponse": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/ibc.core.channel.v1.Channel",
          "title": "channel associated with the request identifiers"
        },
        "proof": {
          "type": "string",
          "format": "byte",
          "title": "merkle proof of existence"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "height at which the proof was retrieved"
        }
      },
      "description": "QueryChannelResponse is the response type for the Query/Channel RPC method.\nBesides the Channel end, it includes a proof and the height from which the\nproof was retrieved."
    },
    "ibc.core.channel.v1.QueryChannelsResponse": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ibc.core.channel.v1.IdentifiedChannel"
          },
          "description": "list of stored channels of the chain."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "title": "pagination response"
        },
        "height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "query block height"
        }
      },
      "description": "QueryChannelsResponse is the response type for the Query/Channels RPC method."
    },
    "ibc.core.channel.v1.QueryConnectionChannelsResponse": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ibc.core.channel.v1.IdentifiedChannel"
          },
          "description": "list of channels associated with a connection."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "title": "pagination response"
        },
        "height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "query block height"
        }
      },
      "title": "QueryConnectionChannelsResponse is the Response type for the\nQuery/QueryConnectionChannels RPC method"
    },
    "ibc.core.channel.v1.QueryNextSequenceReceiveResponse": {
      "type": "object",
      "properties": {
        "next_sequence_receive": {
          "type": "string",
          "format": "uint64",
          "title": "next sequence receive number"
        },
        "proof": {
          "type": "string",
          "format": "byte",
          "title": "merkle proof of existence"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "height at which the proof was retrieved"
        }
      },
      "title": "QuerySequenceResponse is the request type for the\nQuery/QueryNextSequenceReceiveResponse RPC method"
    },
    "ibc.core.channel.v1.QueryPacketAcknowledgementResponse": {
      "type": "object",
      "properties": {
        "acknowledgement": {
          "type": "string",
          "format": "byte",
          "title": "packet associated with the request fields"
        },
        "proof": {
          "type": "string",
          "format": "byte",
          "title": "merkle proof of existence"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "height at which the proof was retrieved"
        }
      },
      "title": "QueryPacketAcknowledgementResponse defines the client query response for a\npacket which also includes a proof and the height from which the\nproof was retrieved"
    },
    "ibc.core.channel.v1.QueryPacketAcknowledgementsResponse": {
      "type": "object",
      "properties": {
        "acknowledgements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ibc.core.channel.v1.PacketState"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "title": "pagination response"
        },
        "height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "query block height"
        }
      },
      "title": "QueryPacketAcknowledgemetsResponse is the request type for the\nQuery/QueryPacketAcknowledgements RPC method"
    },
    "ibc.core.channel.v1.QueryPacketCommitmentResponse": {
      "type": "object",
      "properties": {
        "commitment": {
          "type": "string",
          "format": "byte",
          "title": "packet associated with the request fields"
        },
        "proof": {
          "type": "string",
          "format": "byte",
          "title": "merkle proof of existence"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "height at which the proof was retrieved"
        }
      },
      "title": "QueryPacketCommitmentResponse defines the client query response for a packet\nwhich also includes a proof and the height from which the proof was\nretrieved"
    },
    "ibc.core.channel.v1.QueryPacketCommitmentsResponse": {
      "type": "object",
      "properties": {
        "commitments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ibc.core.channel.v1.PacketState"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "title": "pagination response"
        },
        "height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "query block height"
        }
      },
      "title": "QueryPacketCommitmentsResponse is the request type for the\nQuery/QueryPacketCommitments RPC method"
    },
    "ibc.core.channel.v1.QueryPacketReceiptResponse": {
      "type": "object",
      "properties": {
        "received": {
          "type": "boolean",
          "title": "success flag for if receipt exists"
        },
        "proof": {
          "type": "string",
          "format": "byte",
          "title": "merkle proof of existence"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "height at which the proof was retrieved"
        }
      },
      "title": "QueryPacketReceiptResponse defines the client query response for a packet\nreceipt which also includes a proof, and the height from which the proof was\nretrieved"
    },
    "ibc.core.channel.v1.QueryUnreceivedAcksResponse": {
      "type": "object",
      "properties": {
        "sequences": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          },
          "title": "list of unreceived acknowledgement sequences"
        },
        "height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "query block height"
        }
      },
      "title": "QueryUnreceivedAcksResponse is the response type for the\nQuery/UnreceivedAcks RPC method"
    },
    "ibc.core.channel.v1.QueryUnreceivedPacketsResponse": {
      "type": "object",
      "properties": {
        "sequences": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          },
          "title": "list of unreceived packet sequences"
        },
        "height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "query block height"
        }
      },
      "title": "QueryUnreceivedPacketsResponse is the response type for the\nQuery/UnreceivedPacketCommitments RPC method"
    },
    "ibc.core.channel.v1.State": {
      "type": "string",
      "enum": [
        "STATE_UNINITIALIZED_UNSPECIFIED",
        "STATE_INIT",
        "STATE_TRYOPEN",
        "STATE_OPEN",
        "STATE_CLOSED"
      ],
      "default": "STATE_UNINITIALIZED_UNSPECIFIED",
      "description": "State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets."
    },
    "ibc.core.client.v1.ConsensusStateWithHeight": {
      "type": "object",
      "properties": {
        "height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "consensus state height"
        },
        "consensus_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "consensus state"
        }
      },
      "description": "ConsensusStateWithHeight defines a consensus state with an additional height\nfield."
    },
    "ibc.core.client.v1.Height": {
      "type": "object",
      "properties": {
        "revision_number": {
          "type": "string",
          "format": "uint64",
          "title": "the revision that the client is currently on"
        },
        "revision_height": {
          "type": "string",
          "format": "uint64",
          "title": "the height within the given revision"
        }
      },
      "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset",
      "title": "Height is a monotonically increasing data type\nthat can be compared against another Height for the purposes of updating and\nfreezing clients"
    },
    "ibc.core.client.v1.IdentifiedClientState": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "title": "client identifier"
        },
        "client_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "client state"
        }
      },
      "description": "IdentifiedClientState defines a client state with an additional client\nidentifier field."
    },
    "ibc.core.client.v1.Params": {
      "type": "object",
      "properties": {
        "allowed_clients": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "allowed_clients defines the list of allowed client state types which can be created\nand interacted with. If a client type is removed from the allowed clients list, usage\nof this client will be disabled until it is added again to the list."
        }
      },
      "description": "Params defines the set of IBC light client parameters."
    },
    "ibc.core.client.v1.QueryClientParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/ibc.core.client.v1.Params",
          "description": "params defines the parameters of the module."
        }
      },
      "description": "QueryClientParamsResponse is the response type for the Query/ClientParams RPC\nmethod."
    },
    "ibc.core.client.v1.QueryClientStateResponse": {
      "type": "object",
      "properties": {
        "client_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "client state associated with the request identifier"
        },
        "proof": {
          "type": "string",
          "format": "byte",
          "title": "merkle proof of existence"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "height at which the proof was retrieved"
        }
      },
      "description": "QueryClientStateResponse is the response type for the Query/ClientState RPC\nmethod. Besides the client state, it includes a proof and the height from\nwhich the proof was retrieved."
    },
    "ibc.core.client.v1.QueryClientStatesResponse": {
      "type": "object",
      "properties": {
        "client_states": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ibc.core.client.v1.IdentifiedClientState"
          },
          "description": "list of stored ClientStates of the chain."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "title": "pagination response"
        }
      },
      "description": "QueryClientStatesResponse is the response type for the Query/ClientStates RPC\nmethod."
    },
    "ibc.core.client.v1.QueryClientStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "description": "QueryClientStatusResponse is the response type for the Query/ClientStatus RPC\nmethod. It returns the current status of the IBC client."
    },
    "ibc.core.client.v1.QueryConsensusStateHeightsResponse": {
      "type": "object",
      "properties": {
        "consensus_state_heights": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ibc.core.client.v1.Height"
          },
          "title": "consensus state heights"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "title": "pagination response"
        }
      },
      "title": "QueryConsensusStateHeightsResponse is the response type for the\nQuery/ConsensusStateHeights RPC method"
    },
    "ibc.core.client.v1.QueryConsensusStateResponse": {
      "type": "object",
      "properties": {
        "consensus_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "consensus state associated with the client identifier at the given height"
        },
        "proof": {
          "type": "string",
          "format": "byte",
          "title": "merkle proof of existence"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "height at which the proof was retrieved"
        }
      },
      "title": "QueryConsensusStateResponse is the response type for the Query/ConsensusState\nRPC method"
    },
    "ibc.core.client.v1.QueryConsensusStatesResponse": {
      "type": "object",
      "properties": {
        "consensus_states": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ibc.core.client.v1.ConsensusStateWithHeight"
          },
          "title": "consensus states associated with the identifier"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "title": "pagination response"
        }
      },
      "title": "QueryConsensusStatesResponse is the response type for the\nQuery/ConsensusStates RPC method"
    },
    "ibc.core.client.v1.QueryUpgradedClientStateResponse": {
      "type": "object",
      "properties": {
        "upgraded_client_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "client state associated with the request identifier"
        }
      },
      "description": "QueryUpgradedClientStateResponse is the response type for the\nQuery/UpgradedClientState RPC method."
    },
    "ibc.core.client.v1.QueryUpgradedConsensusStateResponse": {
      "type": "object",
      "properties": {
        "upgraded_consensus_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "Consensus state associated with the request identifier"
        }
      },
      "description": "QueryUpgradedConsensusStateResponse is the response type for the\nQuery/UpgradedConsensusState RPC method."
    },
    "ibc.core.commitment.v1.MerklePrefix": {
      "type": "object",
      "properties": {
        "key_prefix": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "MerklePrefix is merkle path prefixed to the key.\nThe constructed key from the Path and the key will be append(Path.KeyPath,\nappend(Path.KeyPrefix, key...))"
    },
    "ibc.core.connection.v1.ConnectionEnd": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "client associated with this connection."
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ibc.core.connection.v1.Version"
          },
          "description": "IBC version which can be utilised to determine encodings or protocols for\nchannels or packets utilising this connection."
        },
        "state": {
          "$ref": "#/definitions/ibc.core.connection.v1.State",
          "description": "current state of the connection end."
        },
        "counterparty": {
          "$ref": "#/definitions/ibc.core.connection.v1.Counterparty",
          "description": "counterparty chain associated with this connection."
        },
        "delay_period": {
          "type": "string",
          "format": "uint64",
          "description": "delay period that must pass before a consensus state can be used for\npacket-verification NOTE: delay period logic is only implemented by some\nclients."
        }
      },
      "description": "ConnectionEnd defines a stateful object on a chain connected to another\nseparate one.\nNOTE: there must only be 2 defined ConnectionEnds to establish\na connection between two chains."
    },
    "ibc.core.connection.v1.Counterparty": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "identifies the client on the counterparty chain associated with a given\nconnection."
        },
        "connection_id": {
          "type": "string",
          "description": "identifies the connection end on the counterparty chain associated with a\ngiven connection."
        },
        "prefix": {
          "$ref": "#/definitions/ibc.core.commitment.v1.MerklePrefix",
          "description": "commitment merkle prefix of the counterparty chain."
        }
      },
      "description": "Counterparty defines the counterparty chain associated with a connection end."
    },
    "ibc.core.connection.v1.IdentifiedConnection": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "connection identifier."
        },
        "client_id": {
          "type": "string",
          "description": "client associated with this connection."
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ibc.core.connection.v1.Version"
          },
          "title": "IBC version which can be utilised to determine encodings or protocols for\nchannels or packets utilising this connection"
        },
        "state": {
          "$ref": "#/definitions/ibc.core.connection.v1.State",
          "description": "current state of the connection end."
        },
        "counterparty": {
          "$ref": "#/definitions/ibc.core.connection.v1.Counterparty",
          "description": "counterparty chain associated with this connection."
        },
        "delay_period": {
          "type": "string",
          "format": "uint64",
          "description": "delay period associated with this connection."
        }
      },
      "description": "IdentifiedConnection defines a connection with additional connection\nidentifier field."
    },
    "ibc.core.connection.v1.Params": {
      "type": "object",
      "properties": {
        "max_expected_time_per_block": {
          "type": "string",
          "format": "uint64",
          "description": "maximum expected time per block (in nanoseconds), used to enforce block delay. This parameter should reflect the\nlargest amount of time that the chain might reasonably take to produce the next block under normal operating\nconditions. A safe choice is 3-5x the expected time per block."
        }
      },
      "description": "Params defines the set of Connection parameters."
    },
    "ibc.core.connection.v1.QueryClientConnectionsResponse": {
      "type": "object",
      "properties": {
        "connection_paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "slice of all the connection paths associated with a client."
        },
        "proof": {
          "type": "string",
          "format": "byte",
          "title": "merkle proof of existence"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "height at which the proof was generated"
        }
      },
      "title": "QueryClientConnectionsResponse is the response type for the\nQuery/ClientConnections RPC method"
    },
    "ibc.core.connection.v1.QueryConnectionClientStateResponse": {
      "type": "object",
      "properties": {
        "identified_client_state": {
          "$ref": "#/definitions/ibc.core.client.v1.IdentifiedClientState",
          "title": "client state associated with the channel"
        },
        "proof": {
          "type": "string",
          "format": "byte",
          "title": "merkle proof of existence"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "height at which the proof was retrieved"
        }
      },
      "title": "QueryConnectionClientStateResponse is the response type for the\nQuery/ConnectionClientState RPC method"
    },
    "ibc.core.connection.v1.QueryConnectionConsensusStateResponse": {
      "type": "object",
      "properties": {
        "consensus_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "consensus state associated with the channel"
        },
        "client_id": {
          "type": "string",
          "title": "client ID associated with the consensus state"
        },
        "proof": {
          "type": "string",
          "format": "byte",
          "title": "merkle proof of existence"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "height at which the proof was retrieved"
        }
      },
      "title": "QueryConnectionConsensusStateResponse is the response type for the\nQuery/ConnectionConsensusState RPC method"
    },
    "ibc.core.connection.v1.QueryConnectionParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/ibc.core.connection.v1.Params",
          "description": "params defines the parameters of the module."
        }
      },
      "description": "QueryConnectionParamsResponse is the response type for the Query/ConnectionParams RPC method."
    },
    "ibc.core.connection.v1.QueryConnectionResponse": {
      "type": "object",
      "properties": {
        "connection": {
          "$ref": "#/definitions/ibc.core.connection.v1.ConnectionEnd",
          "title": "connection associated with the request identifier"
        },
        "proof": {
          "type": "string",
          "format": "byte",
          "title": "merkle proof of existence"
        },
        "proof_height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "height at which the proof was retrieved"
        }
      },
      "description": "QueryConnectionResponse is the response type for the Query/Connection RPC\nmethod. Besides the connection end, it includes a proof and the height from\nwhich the proof was retrieved."
    },
    "ibc.core.connection.v1.QueryConnectionsResponse": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ibc.core.connection.v1.IdentifiedConnection"
          },
          "description": "list of stored connections of the chain."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "title": "pagination response"
        },
        "height": {
          "$ref": "#/definitions/ibc.core.client.v1.Height",
          "title": "query block height"
        }
      },
      "description": "QueryConnectionsResponse is the response type for the Query/Connections RPC\nmethod."
    },
    "ibc.core.connection.v1.State": {
      "type": "string",
      "enum": [
        "STATE_UNINITIALIZED_UNSPECIFIED",
        "STATE_INIT",
        "STATE_TRYOPEN",
        "STATE_OPEN"
      ],
      "default": "STATE_UNINITIALIZED_UNSPECIFIED",
      "description": "State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake."
    },
    "ibc.core.connection.v1.Version": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string",
          "title": "unique version identifier"
        },
        "features": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of features compatible with the specified identifier"
        }
      },
      "description": "Version defines the versioning scheme used to negotiate the IBC verison in\nthe connection handshake."
    },
    "tendermint.abci.Event": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tendermint.abci.EventAttribute"
          }
        }
      },
      "description": "Event allows application developers to attach additional information to\nResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.\nLater, transactions may be queried using these events."
    },
    "tendermint.abci.EventAttribute": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "index": {
          "type": "boolean",
          "title": "nondeterministic"
        }
      },
      "description": "EventAttribute is a single key-value pair, associated with an event."
    },
    "tendermint.crypto.PublicKey": {
      "type": "object",
      "properties": {
        "ed25519": {
          "type": "string",
          "format": "byte"
        },
        "secp256k1": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "PublicKey defines the keys available for use with Validators"
    },
    "tendermint.p2p.DefaultNodeInfo": {
      "type": "object",
      "properties": {
        "protocol_version": {
          "$ref": "#/definitions/tendermint.p2p.ProtocolVersion"
        },
        "default_node_id": {
          "type": "string"
        },
        "listen_addr": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "channels": {
          "type": "string",
          "format": "byte"
        },
        "moniker": {
          "type": "string"
        },
        "other": {
          "$ref": "#/definitions/tendermint.p2p.DefaultNodeInfoOther"
        }
      }
    },
    "tendermint.p2p.DefaultNodeInfoOther": {
      "type": "object",
      "properties": {
        "tx_index": {
          "type": "string"
        },
        "rpc_address": {
          "type": "string"
        }
      }
    },
    "tendermint.p2p.ProtocolVersion": {
      "type": "object",
      "properties": {
        "p2p": {
          "type": "string",
          "format": "uint64"
        },
        "block": {
          "type": "string",
          "format": "uint64"
        },
        "app": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "tendermint.types.Block": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/tendermint.types.Header"
        },
        "data": {
          "$ref": "#/definitions/tendermint.types.Data"
        },
        "evidence": {
          "$ref": "#/definitions/tendermint.types.EvidenceList"
        },
        "last_commit": {
          "$ref": "#/definitions/tendermint.types.Commit"
        }
      }
    },
    "tendermint.types.BlockID": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "format": "byte"
        },
        "part_set_header": {
          "$ref": "#/definitions/tendermint.types.PartSetHeader"
        }
      },
      "title": "BlockID"
    },
    "tendermint.types.BlockIDFlag": {
      "type": "string",
      "enum": [
        "BLOCK_ID_FLAG_UNKNOWN",
        "BLOCK_ID_FLAG_ABSENT",
        "BLOCK_ID_FLAG_COMMIT",
        "BLOCK_ID_FLAG_NIL"
      ],
      "default": "BLOCK_ID_FLAG_UNKNOWN",
      "title": "BlockIdFlag indicates which BlcokID the signature is for"
    },
    "tendermint.types.BlockParams": {
      "type": "object",
      "properties": {
        "max_bytes": {
          "type": "string",
          "format": "int64",
          "title": "Max block size, in bytes.\nNote: must be greater than 0"
        },
        "max_gas": {
          "type": "string",
          "format": "int64",
          "title": "Max gas per block.\nNote: must be greater or equal to -1"
        }
      },
      "description": "BlockParams contains limits on the block size."
    },
    "tendermint.types.Commit": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "int64"
        },
        "round": {
          "type": "integer",
          "format": "int32"
        },
        "block_id": {
          "$ref": "#/definitions/tendermint.types.BlockID"
        },
        "signatures": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tendermint.types.CommitSig"
          }
        }
      },
      "description": "Commit contains the evidence that a block was committed by a set of validators."
    },
    "tendermint.types.CommitSig": {
      "type": "object",
      "properties": {
        "block_id_flag": {
          "$ref": "#/definitions/tendermint.types.BlockIDFlag"
        },
        "validator_address": {
          "type": "string",
          "format": "byte"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "signature": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "CommitSig is a part of the Vote included in a Commit."
    },
    "tendermint.types.ConsensusParams": {
      "type": "object",
      "properties": {
        "block": {
          "$ref": "#/definitions/tendermint.types.BlockParams"
        },
        "evidence": {
          "$ref": "#/definitions/tendermint.types.EvidenceParams"
        },
        "validator": {
          "$ref": "#/definitions/tendermint.types.ValidatorParams"
        },
        "version": {
          "$ref": "#/definitions/tendermint.types.VersionParams"
        }
      },
      "description": "ConsensusParams contains consensus critical parameters that determine the\nvalidity of blocks."
    },
    "tendermint.types.Data": {
      "type": "object",
      "properties": {
        "txs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "description": "Txs that will be applied by state @ block.Height+1.\nNOTE: not all txs here are valid.  We're just agreeing on the order first.\nThis means that block.AppHash does not include these txs."
        }
      },
      "title": "Data contains the set of transactions included in the block"
    },
    "tendermint.types.DuplicateVoteEvidence": {
      "type": "object",
      "properties": {
        "vote_a": {
          "$ref": "#/definitions/tendermint.types.Vote"
        },
        "vote_b": {
          "$ref": "#/definitions/tendermint.types.Vote"
        },
        "total_voting_power": {
          "type": "string",
          "format": "int64"
        },
        "validator_power": {
          "type": "string",
          "format": "int64"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes."
    },
    "tendermint.types.Evidence": {
      "type": "object",
      "properties": {
        "duplicate_vote_evidence": {
          "$ref": "#/definitions/tendermint.types.DuplicateVoteEvidence"
        },
        "light_client_attack_evidence": {
          "$ref": "#/definitions/tendermint.types.LightClientAttackEvidence"
        }
      }
    },
    "tendermint.types.EvidenceList": {
      "type": "object",
      "properties": {
        "evidence": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tendermint.types.Evidence"
          }
        }
      }
    },
    "tendermint.types.EvidenceParams": {
      "type": "object",
      "properties": {
        "max_age_num_blocks": {
          "type": "string",
          "format": "int64",
          "description": "Max age of evidence, in blocks.\n\nThe basic formula for calculating this is: MaxAgeDuration / {average block\ntime}."
        },
        "max_age_duration": {
          "type": "string",
          "description": "Max age of evidence, in time.\n\nIt should correspond with an app's \"unbonding period\" or other similar\nmechanism for handling [Nothing-At-Stake\nattacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed)."
        },
        "max_bytes": {
          "type": "string",
          "format": "int64",
          "title": "This sets the maximum size of total evidence in bytes that can be committed in a single block.\nand should fall comfortably under the max block bytes.\nDefault is 1048576 or 1MB"
        }
      },
      "description": "EvidenceParams determine how we handle evidence of malfeasance."
    },
    "tendermint.types.Header": {
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/tendermint.version.Consensus",
          "title": "basic block info"
        },
        "chain_id": {
          "type": "string"
        },
        "height": {
          "type": "string",
          "format": "int64"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "last_block_id": {
          "$ref": "#/definitions/tendermint.types.BlockID",
          "title": "prev block info"
        },
        "last_commit_hash": {
          "type": "string",
          "format": "byte",
          "description": "commit from validators from the last block",
          "title": "hashes of block data"
        },
        "data_hash": {
          "type": "string",
          "format": "byte",
          "title": "transactions"
        },
        "validators_hash": {
          "type": "string",
          "format": "byte",
          "description": "validators for the current block",
          "title": "hashes from the app output from the prev block"
        },
        "next_validators_hash": {
          "type": "string",
          "format": "byte",
          "title": "validators for the next block"
        },
        "consensus_hash": {
          "type": "string",
          "format": "byte",
          "title": "consensus params for current block"
        },
        "app_hash": {
          "type": "string",
          "format": "byte",
          "title": "state after txs from the previous block"
        },
        "last_results_hash": {
          "type": "string",
          "format": "byte",
          "title": "root hash of all results from the txs from the previous block"
        },
        "evidence_hash": {
          "type": "string",
          "format": "byte",
          "description": "evidence included in the block",
          "title": "consensus info"
        },
        "proposer_address": {
          "type": "string",
          "format": "byte",
          "title": "original proposer of the block"
        }
      },
      "description": "Header defines the structure of a block header."
    },
    "tendermint.types.LightBlock": {
      "type": "object",
      "properties": {
        "signed_header": {
          "$ref": "#/definitions/tendermint.types.SignedHeader"
        },
        "validator_set": {
          "$ref": "#/definitions/tendermint.types.ValidatorSet"
        }
      }
    },
    "tendermint.types.LightClientAttackEvidence": {
      "type": "object",
      "properties": {
        "conflicting_block": {
          "$ref": "#/definitions/tendermint.types.LightBlock"
        },
        "common_height": {
          "type": "string",
          "format": "int64"
        },
        "byzantine_validators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tendermint.types.Validator"
          }
        },
        "total_voting_power": {
          "type": "string",
          "format": "int64"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client."
    },
    "tendermint.types.PartSetHeader": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "hash": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "PartsetHeader"
    },
    "tendermint.types.SignedHeader": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/tendermint.types.Header"
        },
        "commit": {
          "$ref": "#/definitions/tendermint.types.Commit"
        }
      }
    },
    "tendermint.types.SignedMsgType": {
      "type": "string",
      "enum": [
        "SIGNED_MSG_TYPE_UNKNOWN",
        "SIGNED_MSG_TYPE_PREVOTE",
        "SIGNED_MSG_TYPE_PRECOMMIT",
        "SIGNED_MSG_TYPE_PROPOSAL"
      ],
      "default": "SIGNED_MSG_TYPE_UNKNOWN",
      "description": "SignedMsgType is a type of signed message in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
    },
    "tendermint.types.Validator": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "format": "byte"
        },
        "pub_key": {
          "$ref": "#/definitions/tendermint.crypto.PublicKey"
        },
        "voting_power": {
          "type": "string",
          "format": "int64"
        },
        "proposer_priority": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "tendermint.types.ValidatorParams": {
      "type": "object",
      "properties": {
        "pub_key_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "ValidatorParams restrict the public key types validators can use.\nNOTE: uses ABCI pubkey naming, not Amino names."
    },
    "tendermint.types.ValidatorSet": {
      "type": "object",
      "properties": {
        "validators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tendermint.types.Validator"
          }
        },
        "proposer": {
          "$ref": "#/definitions/tendermint.types.Validator"
        },
        "total_voting_power": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "tendermint.types.VersionParams": {
      "type": "object",
      "properties": {
        "app": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "VersionParams contains the ABCI application version."
    },
    "tendermint.types.Vote": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/tendermint.types.SignedMsgType"
        },
        "height": {
          "type": "string",
          "format": "int64"
        },
        "round": {
          "type": "integer",
          "format": "int32"
        },
        "block_id": {
          "$ref": "#/definitions/tendermint.types.BlockID",
          "description": "zero if vote is nil."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "validator_address": {
          "type": "string",
          "format": "byte"
        },
        "validator_index": {
          "type": "integer",
          "format": "int32"
        },
        "signature": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Vote represents a prevote, precommit, or commit vote from validators for\nconsensus."
    },
    "tendermint.version.Consensus": {
      "type": "object",
      "properties": {
        "block": {
          "type": "string",
          "format": "uint64"
        },
        "app": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "Consensus captures the consensus rules for processing a block in the blockchain,\nincluding all blockchain data structures and the rules of the application's\nstate transition machine."
    }
  }
}
